{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-36badb71e5b97877.js","src/json/adk46.json","src/json/co14.json","src/json/me4k.json","src/json/ne100.json","src/json/ne4k.json","src/json/neHigh.json","src/json/nh4k.json","src/json/vt4k.json","src/js/peakLists.js","src/js/logEntry.js","src/js/model.js","node_modules/@parcel/runtime-js/lib/runtime-52af999122861a73.js","src/js/views/logView.js","node_modules/@parcel/runtime-js/lib/runtime-b54bd341dd7b02ac.js","src/js/views/newEntryView.js","src/js/views/mainView.js","node_modules/@parcel/runtime-js/lib/runtime-edbe808007557457.js","node_modules/@parcel/runtime-js/lib/runtime-ae31969aa877b0ad.js","src/js/views/mapView.js","src/js/views/peakListView.js","src/js/controller.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"dghd8\\\":\\\"index.2481262c.js\\\",\\\"k72y2\\\":\\\"sprite.f7117ab3.svg\\\",\\\"7RGJm\\\":\\\"sprite.f7117ab3.svg\\\",\\\"iPWdx\\\":\\\"mtn-icon-red.e90a5dc3.png\\\",\\\"8TcTG\\\":\\\"mtn-icon-green.47e0be93.png\\\"}\"));","{\n  \"title\": \"Adirondack High Peaks\",\n  \"listID\": \"adk46\",\n  \"center\": [44.0915, -74.5751],\n  \"zoom\": 10,\n  \"peakCount\": 46,\n  \"peaks\": [\n    {\n      \"id\": 973357,\n      \"name\": \"Mt. Marcy\",\n      \"lat\": 44.112733,\n      \"long\": -73.9237833,\n      \"elevation\": 5344,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973340,\n      \"name\": \"Algonquin Peak\",\n      \"lat\": 44.1436636,\n      \"long\": -73.9865357,\n      \"elevation\": 5105,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973353,\n      \"name\": \"Mt. Haystack\",\n      \"lat\": 44.1056093,\n      \"long\": -73.9004196,\n      \"elevation\": 4924,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973360,\n      \"name\": \"Mt. Skylight\",\n      \"lat\": 44.0994987,\n      \"long\": -73.9306986,\n      \"elevation\": 4908,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973364,\n      \"name\": \"Whiteface Mountain\",\n      \"lat\": 44.3658804,\n      \"long\": -73.9026456,\n      \"elevation\": 4816,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973347,\n      \"name\": \"Dix Mountain\",\n      \"lat\": 44.0822756,\n      \"long\": -73.7862471,\n      \"elevation\": 4813,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973351,\n      \"name\": \"Gray Peak\",\n      \"lat\": 44.1114427,\n      \"long\": -73.9348658,\n      \"elevation\": 4800,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973355,\n      \"name\": \"Iroquois Peak\",\n      \"lat\": 44.1369973,\n      \"long\": -73.9982027,\n      \"elevation\": 4829,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973341,\n      \"name\": \"Basin Mountain\",\n      \"lat\": 44.1211639,\n      \"long\": -73.8862527,\n      \"elevation\": 4852,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973349,\n      \"name\": \"Gothics\",\n      \"lat\": 44.1281079,\n      \"long\": -73.8570849,\n      \"elevation\": 4724,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 947091,\n      \"name\": \"Mt. Colden\",\n      \"lat\": 44.1269976,\n      \"long\": -73.9598674,\n      \"elevation\": 4708,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 2611110,\n      \"name\": \"Giant Mountain\",\n      \"lat\": 44.161165,\n      \"long\": -73.720279,\n      \"elevation\": 4623,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 958617,\n      \"name\": \"Nippletop\",\n      \"lat\": 44.0892202,\n      \"long\": -73.8159708,\n      \"elevation\": 4554,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 964468,\n      \"name\": \"Santanoni Peak\",\n      \"lat\": 44.0822811,\n      \"long\": -74.1309855,\n      \"elevation\": 4596,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 962328,\n      \"name\": \"Mt. Redfield\",\n      \"lat\": 44.094777,\n      \"long\": -73.949866,\n      \"elevation\": 4603,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 971754,\n      \"name\": \"Wright Peak\",\n      \"lat\": 44.1517187,\n      \"long\": -73.9801468,\n      \"elevation\": 4564,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 959830,\n      \"name\": \"Panther Peak\",\n      \"lat\": 44.0983915,\n      \"long\": -74.132097,\n      \"elevation\": 4455,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 966981,\n      \"name\": \"Table Top Mountain\",\n      \"lat\": 44.143663,\n      \"long\": -73.9070876,\n      \"elevation\": 4295,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 2651608,\n      \"name\": \"Rocky Peak\",\n      \"lat\": 44.1542177,\n      \"long\": -73.7051718,\n      \"elevation\": 4403,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 971960,\n      \"name\": \"Macomb Mountain\",\n      \"lat\": 44.0517211,\n      \"long\": -73.7801349,\n      \"elevation\": 4396,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 953279,\n      \"name\": \"Hough Peak\",\n      \"lat\": 44.0694981,\n      \"long\": -73.7776352,\n      \"elevation\": 4393,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 964885,\n      \"name\": \"Seward Mountain\",\n      \"lat\": 44.1597799,\n      \"long\": -74.1993239,\n      \"elevation\": 4327,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 956573,\n      \"name\": \"Mt. Marshall\",\n      \"lat\": 44.1275538,\n      \"long\": -74.0118142,\n      \"elevation\": 4380,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 942362,\n      \"name\": \"Allen Mountain\",\n      \"lat\": 44.0708892,\n      \"long\": -73.9395871,\n      \"elevation\": 4321,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 943955,\n      \"name\": \"Big Slide Mountain\",\n      \"lat\": 44.1822721,\n      \"long\": -73.8704202,\n      \"elevation\": 4232,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 949720,\n      \"name\": \"Esther Mountain\",\n      \"lat\": 44.3869916,\n      \"long\": -73.8898673,\n      \"elevation\": 4232,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 968312,\n      \"name\": \"Upper Wolfjaw Mountain\",\n      \"lat\": 44.1406072,\n      \"long\": -73.8451402,\n      \"elevation\": 4190,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 956118,\n      \"name\": \"Lower Wolfjaw Mountain\",\n      \"lat\": 44.1483845,\n      \"long\": -73.8326399,\n      \"elevation\": 4190,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 966631,\n      \"name\": \"Street Mountain\",\n      \"lat\": 44.1797741,\n      \"long\": -74.0437616,\n      \"elevation\": 4022,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 960289,\n      \"name\": \"Phelps Mountain\",\n      \"lat\": 44.1569957,\n      \"long\": -73.9209775,\n      \"elevation\": 4137,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 948566,\n      \"name\": \"Donaldson Mountain\",\n      \"lat\": 44.1539471,\n      \"long\": -74.210991,\n      \"elevation\": 4062,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 964894,\n      \"name\": \"Seymour Mountain\",\n      \"lat\": 44.1578347,\n      \"long\": -74.1721003,\n      \"elevation\": 4055,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 964537,\n      \"name\": \"Sawteeth\",\n      \"lat\": 44.1139417,\n      \"long\": -73.8504175,\n      \"elevation\": 4114,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 965737,\n      \"name\": \"South Dix\",\n      \"lat\": 44.060054,\n      \"long\": -73.7743014,\n      \"elevation\": 4088,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 960993,\n      \"name\": \"Porter Mountain\",\n      \"lat\": 43.7358981,\n      \"long\": -74.3129279,\n      \"elevation\": 2503,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 947211,\n      \"name\": \"Mt. Colvin\",\n      \"lat\": 44.0939424,\n      \"long\": -73.8345829,\n      \"elevation\": 4049,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 949645,\n      \"name\": \"Mt. Emmons\",\n      \"lat\": 44.1436698,\n      \"long\": -74.2140464,\n      \"elevation\": 4022,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 949060,\n      \"name\": \"Grace Peak\",\n      \"lat\": 44.0653314,\n      \"long\": -73.7573564,\n      \"elevation\": 4006,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 944215,\n      \"name\": \"Blake Peak\",\n      \"lat\": 44.081443,\n      \"long\": -73.844583,\n      \"elevation\": 3976,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 946865,\n      \"name\": \"Cliff Mountain\",\n      \"lat\": 44.1031102,\n      \"long\": -73.9751452,\n      \"elevation\": 3940,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 959076,\n      \"name\": \"Nye Mountain\",\n      \"lat\": 44.1931062,\n      \"long\": -74.0240387,\n      \"elevation\": 3871,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 947539,\n      \"name\": \"Couchsachraga Peak\",\n      \"lat\": 44.0956146,\n      \"long\": -74.1601539,\n      \"elevation\": 3793,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 948403,\n      \"name\": \"Dial Mountain\",\n      \"lat\": 44.1058859,\n      \"long\": -73.7959703,\n      \"elevation\": 4020,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 970556,\n      \"name\": \"Saddleback Mountain\",\n      \"lat\": 44.1264414,\n      \"long\": -73.8748634,\n      \"elevation\": 4534,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 942572,\n      \"name\": \"Armstrong Mountain\",\n      \"lat\": 44.1347741,\n      \"long\": -73.8490291,\n      \"elevation\": 4360,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 945952,\n      \"name\": \"Cascade Mountain\",\n      \"lat\": 44.2186594,\n      \"long\": -73.860143,\n      \"elevation\": 4094,\n      \"state\": \"NY\"\n    }\n  ]\n}\n","{\n  \"title\": \"Colorado 14ers\",\n  \"listID\": \"co14\",\n  \"center\": [38.7695, -108.5459],\n  \"zoom\": 8,\n  \"peakCount\": 57,\n  \"peaks\": [\n    {\n      \"id\": 180381,\n      \"name\": \"Mt. Elbert\",\n      \"lat\": 39.1178687,\n      \"long\": -106.4452569,\n      \"elevation\": 14426,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180119,\n      \"name\": \"Mt. Massive\",\n      \"lat\": 39.1873242,\n      \"long\": -106.4756085,\n      \"elevation\": 14419,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189179,\n      \"name\": \"Mt. Harvard\",\n      \"lat\": 38.9243492,\n      \"long\": -106.3206758,\n      \"elevation\": 14406,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 192735,\n      \"name\": \"Blanca Peak\",\n      \"lat\": 37.5775609,\n      \"long\": -105.4855987,\n      \"elevation\": 14347,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180393,\n      \"name\": \"La Plata Peak\",\n      \"lat\": 39.0293628,\n      \"long\": -106.4731089,\n      \"elevation\": 14334,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 188678,\n      \"name\": \"Uncompahgre Peak\",\n      \"lat\": 38.0714529,\n      \"long\": -107.4625289,\n      \"elevation\": 14308,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 181827,\n      \"name\": \"Grays Peak\",\n      \"lat\": 39.6337372,\n      \"long\": -105.8173702,\n      \"elevation\": 14275,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 179667,\n      \"name\": \"Quandary Peak\",\n      \"lat\": 39.3972537,\n      \"long\": -106.1063989,\n      \"elevation\": 14262,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 181829,\n      \"name\": \"Torreys Peak\",\n      \"lat\": 39.6426923,\n      \"long\": -105.8211948,\n      \"elevation\": 14265,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189455,\n      \"name\": \"Mt. Antero\",\n      \"lat\": 38.6740472,\n      \"long\": -106.2462488,\n      \"elevation\": 14249,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 204979,\n      \"name\": \"Longs Peak\",\n      \"lat\": 40.2548614,\n      \"long\": -105.6162397,\n      \"elevation\": 14262,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 187461,\n      \"name\": \"Mt. Wilson\",\n      \"lat\": 37.8392056,\n      \"long\": -107.9915763,\n      \"elevation\": 14255,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 179957,\n      \"name\": \"Mt. Cameron\",\n      \"lat\": 39.3463459,\n      \"long\": -106.1189002,\n      \"elevation\": 14232,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189451,\n      \"name\": \"Mt. Shavano\",\n      \"lat\": 38.6189805,\n      \"long\": -106.2392197,\n      \"elevation\": 14222,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189170,\n      \"name\": \"Mt. Belford\",\n      \"lat\": 38.9605767,\n      \"long\": -106.3607818,\n      \"elevation\": 14170,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189458,\n      \"name\": \"Mt. Princeton\",\n      \"lat\": 38.7491503,\n      \"long\": -106.2424463,\n      \"elevation\": 14196,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189198,\n      \"name\": \"Mt. Yale\",\n      \"lat\": 38.8441725,\n      \"long\": -106.3139015,\n      \"elevation\": 14193,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 203951,\n      \"name\": \"Crestone Needle\",\n      \"lat\": 37.9646991,\n      \"long\": -105.5767188,\n      \"elevation\": 14166,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 179961,\n      \"name\": \"Mt. Bross\",\n      \"lat\": 39.3349948,\n      \"long\": -106.1071665,\n      \"elevation\": 14176,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 176576,\n      \"name\": \"El Diente Peak\",\n      \"lat\": 37.8394323,\n      \"long\": -108.0053368,\n      \"elevation\": 14140,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 204778,\n      \"name\": \"Kit Carson Mountain\",\n      \"lat\": 37.9796989,\n      \"long\": -105.6026169,\n      \"elevation\": 14186,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189171,\n      \"name\": \"Mt. Oxford\",\n      \"lat\": 38.9647934,\n      \"long\": -106.3387735,\n      \"elevation\": 14140,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 203948,\n      \"name\": \"Tabeguache Peak\",\n      \"lat\": 38.6256209,\n      \"long\": -106.2506089,\n      \"elevation\": 14114,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 196432,\n      \"name\": \"Mt. Sneffels\",\n      \"lat\": 38.0038447,\n      \"long\": -107.7922734,\n      \"elevation\": 14150,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 204685,\n      \"name\": \"Mt. Democrat\",\n      \"lat\": 39.3394723,\n      \"long\": -106.1398604,\n      \"elevation\": 14144,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 175209,\n      \"name\": \"Capitol Peak\",\n      \"lat\": 39.1501588,\n      \"long\": -107.0827488,\n      \"elevation\": 14117,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 204770,\n      \"name\": \"Pikes Peak\",\n      \"lat\": 38.8405839,\n      \"long\": -105.0449035,\n      \"elevation\": 14114,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 175555,\n      \"name\": \"Snowmass Mountain\",\n      \"lat\": 39.1186541,\n      \"long\": -107.0664035,\n      \"elevation\": 14107,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 187990,\n      \"name\": \"Windom Peak\",\n      \"lat\": 37.621313,\n      \"long\": -107.5917613,\n      \"elevation\": 14084,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 187988,\n      \"name\": \"Mt. Eolus\",\n      \"lat\": 37.6216871,\n      \"long\": -107.6225967,\n      \"elevation\": 14088,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 196427,\n      \"name\": \"Challenger Point\",\n      \"lat\": 37.9804151,\n      \"long\": -105.6066013,\n      \"elevation\": 14091,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 203886,\n      \"name\": \"Mt. Columbia\",\n      \"lat\": 38.9038441,\n      \"long\": -106.2974478,\n      \"elevation\": 14055,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189167,\n      \"name\": \"Missouri Mountain\",\n      \"lat\": 38.9476104,\n      \"long\": -106.3785409,\n      \"elevation\": 14062,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 192424,\n      \"name\": \"Humboldt Peak\",\n      \"lat\": 37.9761388,\n      \"long\": -105.5550716,\n      \"elevation\": 14062,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 182467,\n      \"name\": \"Mt. Bierstadt\",\n      \"lat\": 39.5826432,\n      \"long\": -105.6687551,\n      \"elevation\": 14058,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 187404,\n      \"name\": \"Handies Peak\",\n      \"lat\": 37.9129617,\n      \"long\": -107.5044497,\n      \"elevation\": 14048,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 192733,\n      \"name\": \"Ellingwood Point\",\n      \"lat\": 37.5824644,\n      \"long\": -105.4926087,\n      \"elevation\": 14062,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 192730,\n      \"name\": \"Mt. Lindsey\",\n      \"lat\": 37.583803,\n      \"long\": -105.4446957,\n      \"elevation\": 14062,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 193131,\n      \"name\": \"Culebra Peak\",\n      \"lat\": 37.1222185,\n      \"long\": -105.1857672,\n      \"elevation\": 14039,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180207,\n      \"name\": \"Mt. Sherman\",\n      \"lat\": 39.2251336,\n      \"long\": -106.1699259,\n      \"elevation\": 14019,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 203320,\n      \"name\": \"North Eolus\",\n      \"lat\": 37.6254409,\n      \"long\": -107.6210325,\n      \"elevation\": 14058,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 204780,\n      \"name\": \"Little Bear Peak\",\n      \"lat\": 37.5665804,\n      \"long\": -105.4972025,\n      \"elevation\": 14035,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 187423,\n      \"name\": \"Redcloud Peak\",\n      \"lat\": 37.9409934,\n      \"long\": -107.4217338,\n      \"elevation\": 14039,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180300,\n      \"name\": \"Conundrum Peak\",\n      \"lat\": 39.0144457,\n      \"long\": -106.86364,\n      \"elevation\": 14032,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 190463,\n      \"name\": \"San Luis Peak\",\n      \"lat\": 37.9867825,\n      \"long\": -106.9312952,\n      \"elevation\": 14016,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180264,\n      \"name\": \"North Maroon Peak\",\n      \"lat\": 39.076094,\n      \"long\": -106.9870852,\n      \"elevation\": 14016,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 188661,\n      \"name\": \"Wetterhorn Peak\",\n      \"lat\": 38.0606119,\n      \"long\": -107.5108819,\n      \"elevation\": 13989,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 187455,\n      \"name\": \"Wilson Peak\",\n      \"lat\": 37.8602995,\n      \"long\": -107.9846517,\n      \"elevation\": 14025,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 179522,\n      \"name\": \"Mt. of the Holy Cross\",\n      \"lat\": 39.4666238,\n      \"long\": -106.481692,\n      \"elevation\": 13976,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189155,\n      \"name\": \"Huron Peak\",\n      \"lat\": 38.9455489,\n      \"long\": -106.4381146,\n      \"elevation\": 14012,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 204748,\n      \"name\": \"Sunshine Peak\",\n      \"lat\": 37.9227181,\n      \"long\": -107.4255595,\n      \"elevation\": 14012,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 179956,\n      \"name\": \"Mt. Lincoln\",\n      \"lat\": 39.351504,\n      \"long\": -106.1113773,\n      \"elevation\": 14285,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180301,\n      \"name\": \"Castle Peak\",\n      \"lat\": 39.0096902,\n      \"long\": -106.8612901,\n      \"elevation\": 14258,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 204716,\n      \"name\": \"Mt. Evans\",\n      \"lat\": 39.5881224,\n      \"long\": -105.6437272,\n      \"elevation\": 14235,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180276,\n      \"name\": \"Maroon Peak\",\n      \"lat\": 39.0706997,\n      \"long\": -106.9888794,\n      \"elevation\": 14144,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 187843,\n      \"name\": \"Sunlight Peak\",\n      \"lat\": 37.6272835,\n      \"long\": -107.595797,\n      \"elevation\": 14055,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180265,\n      \"name\": \"Pyramid Peak\",\n      \"lat\": 39.0717385,\n      \"long\": -106.9499676,\n      \"elevation\": 13993,\n      \"state\": \"CO\"\n    }\n  ]\n}\n","{\n  \"title\": \"Maine 4,000 Footers\",\n  \"listID\": \"me4k\",\n  \"center\": [45.1135, -72.2241],\n  \"zoom\": 8,\n  \"peakCount\": 14,\n  \"peaks\": [\n    {\n      \"id\": 561737,\n      \"name\": \"Mt. Katahdin (Baxter Peak)\",\n      \"lat\": 45.9042845,\n      \"long\": -68.9213562,\n      \"elevation\": 5259,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 567535,\n      \"name\": \"Mt. Katahdin (Hamlin Peak)\",\n      \"lat\": 45.92416,\n      \"long\": -68.92767,\n      \"elevation\": 4757,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 564525,\n      \"name\": \"Crocker Mountain\",\n      \"lat\": 45.04712,\n      \"long\": -70.38273,\n      \"elevation\": 4226,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572729,\n      \"name\": \"Old Speck Mountain\",\n      \"lat\": 44.57092,\n      \"long\": -70.95365,\n      \"elevation\": 4183,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572313,\n      \"name\": \"North Brother\",\n      \"lat\": 45.95716,\n      \"long\": -68.98544,\n      \"elevation\": 4140,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572033,\n      \"name\": \"Bigelow Mountain (Avery Peak)\",\n      \"lat\": 45.14664,\n      \"long\": -70.27585,\n      \"elevation\": 4068,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 561068,\n      \"name\": \"Mt. Abraham\",\n      \"lat\": 44.9722782,\n      \"long\": -70.3259007,\n      \"elevation\": 4032,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 581982,\n      \"name\": \"South Crocker Mountain\",\n      \"lat\": 45.03619,\n      \"long\": -70.37607,\n      \"elevation\": 4042,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 576826,\n      \"name\": \"Saddleback Horn\",\n      \"lat\": 44.95119,\n      \"long\": -70.48706,\n      \"elevation\": 3999,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 578873,\n      \"name\": \"Mt. Redington\",\n      \"lat\": 45.02499,\n      \"long\": -70.3887,\n      \"elevation\": 3999,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 561033,\n      \"name\": \"Spaulding Mountain\",\n      \"lat\": 45.0028335,\n      \"long\": -70.333401,\n      \"elevation\": 4009,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 576507,\n      \"name\": \"Sugarloaf Mountain\",\n      \"lat\": 45.03169,\n      \"long\": -70.31333,\n      \"elevation\": 4226,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 578186,\n      \"name\": \"Bigelow Mountain (West Peak)\",\n      \"lat\": 45.14676,\n      \"long\": -70.28835,\n      \"elevation\": 4131,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 574668,\n      \"name\": \"Saddleback Mountain\",\n      \"lat\": 44.93641,\n      \"long\": -70.50461,\n      \"elevation\": 4117,\n      \"state\": \"ME\"\n    }\n  ]\n}\n","{\n  \"title\": \"New England 100 Highest\",\n  \"listID\": \"ne100\",\n  \"center\": [44.5435, -73.3975],\n  \"zoom\": 8,\n  \"peakCount\": 100,\n  \"peaks\": [\n    {\n      \"id\": 871352,\n      \"name\": \"Mt. Washington\",\n      \"lat\": 44.2705781,\n      \"long\": -71.3033287,\n      \"elevation\": 6273,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871380,\n      \"name\": \"Mt. Adams\",\n      \"lat\": 44.3206546,\n      \"long\": -71.2915306,\n      \"elevation\": 5791,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872101,\n      \"name\": \"Mt. Jefferson\",\n      \"lat\": 44.304315,\n      \"long\": -71.3166955,\n      \"elevation\": 5699,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872313,\n      \"name\": \"Mt. Monroe\",\n      \"lat\": 44.2552125,\n      \"long\": -71.3214183,\n      \"elevation\": 5351,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872247,\n      \"name\": \"Mt. Madison\",\n      \"lat\": 44.3288173,\n      \"long\": -71.2767796,\n      \"elevation\": 5351,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872150,\n      \"name\": \"Mt. Lafayette\",\n      \"lat\": 44.1608182,\n      \"long\": -71.6444575,\n      \"elevation\": 5236,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872176,\n      \"name\": \"Mt. Lincoln\",\n      \"lat\": 44.1489451,\n      \"long\": -71.6445258,\n      \"elevation\": 5085,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872710,\n      \"name\": \"South Twin Mountain\",\n      \"lat\": 44.187556,\n      \"long\": -71.5548018,\n      \"elevation\": 4888,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871629,\n      \"name\": \"Carter Dome\",\n      \"lat\": 44.2673401,\n      \"long\": -71.1792622,\n      \"elevation\": 4826,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872324,\n      \"name\": \"Mt. Moosilauke\",\n      \"lat\": 44.024502,\n      \"long\": -71.8309164,\n      \"elevation\": 4813,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871851,\n      \"name\": \"Mt. Eisenhower\",\n      \"lat\": 44.2407341,\n      \"long\": -71.3501812,\n      \"elevation\": 4757,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872408,\n      \"name\": \"North Twin Mountain\",\n      \"lat\": 44.2025557,\n      \"long\": -71.5578576,\n      \"elevation\": 4751,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871628,\n      \"name\": \"Mt. Carrigain\",\n      \"lat\": 44.0936537,\n      \"long\": -71.4466959,\n      \"elevation\": 4682,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871556,\n      \"name\": \"Mt. Bond\",\n      \"lat\": 44.1528345,\n      \"long\": -71.5311895,\n      \"elevation\": 4685,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872288,\n      \"name\": \"Middle Carter Mountain\",\n      \"lat\": 44.3031109,\n      \"long\": -71.1678106,\n      \"elevation\": 4603,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"West Bond Mountain\",\n      \"lat\": 44.1547633,\n      \"long\": -71.5436295,\n      \"elevation\": 4540,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871925,\n      \"name\": \"Mt. Garfield\",\n      \"lat\": 44.1872617,\n      \"long\": -71.6106785,\n      \"elevation\": 4495,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872169,\n      \"name\": \"Mt. Liberty\",\n      \"lat\": 44.1158901,\n      \"long\": -71.6420251,\n      \"elevation\": 4439,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872698,\n      \"name\": \"South Carter Mountain\",\n      \"lat\": 44.2897779,\n      \"long\": -71.176635,\n      \"elevation\": 4419,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872940,\n      \"name\": \"Wildcat Mountain (A peak)\",\n      \"lat\": 44.2595144,\n      \"long\": -71.201848,\n      \"elevation\": 4423,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872006,\n      \"name\": \"Mt. Hancock\",\n      \"lat\": 44.0836076,\n      \"long\": -71.4934302,\n      \"elevation\": 4409,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872707,\n      \"name\": \"Kinsman Mountain (South Peak)\",\n      \"lat\": 44.1228429,\n      \"long\": -71.7367508,\n      \"elevation\": 4331,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873014,\n      \"name\": \"Mt. Field\",\n      \"lat\": 44.196137,\n      \"long\": -71.4331049,\n      \"elevation\": 4311,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872440,\n      \"name\": \"Mt. Osceola\",\n      \"lat\": 44.0014482,\n      \"long\": -71.5359097,\n      \"elevation\": 4314,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871894,\n      \"name\": \"Mt. Flume\",\n      \"lat\": 44.1089459,\n      \"long\": -71.6278579,\n      \"elevation\": 4318,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872495,\n      \"name\": \"Mt. Pierce\",\n      \"lat\": 44.2265226,\n      \"long\": -71.3659732,\n      \"elevation\": 4304,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872952,\n      \"name\": \"Mt. Willey\",\n      \"lat\": 44.1835296,\n      \"long\": -71.4207354,\n      \"elevation\": 4268,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 7,\n      \"name\": \"Bondcliff\",\n      \"lat\": 44.1405773,\n      \"long\": -71.5409195,\n      \"elevation\": 4265,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872833,\n      \"name\": \"Mt. Tripyramid\",\n      \"lat\": 43.9731659,\n      \"long\": -71.4427801,\n      \"elevation\": 4163,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 865897,\n      \"name\": \"Mt. Cabot\",\n      \"lat\": 44.5060061,\n      \"long\": -71.4144768,\n      \"elevation\": 4163,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871835,\n      \"name\": \"Mt. Osceola (East Peak)\",\n      \"lat\": 44.0061704,\n      \"long\": -71.5206316,\n      \"elevation\": 4134,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872294,\n      \"name\": \"Mt. Tripyramid (Middle Peak)\",\n      \"lat\": 43.9646744,\n      \"long\": -71.4400968,\n      \"elevation\": 4114,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873192,\n      \"name\": \"Cannon Mountain\",\n      \"lat\": 44.156614,\n      \"long\": -71.6988025,\n      \"elevation\": 4085,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871992,\n      \"name\": \"Mt. Hale\",\n      \"lat\": 44.2217224,\n      \"long\": -71.5120232,\n      \"elevation\": 4062,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872093,\n      \"name\": \"Mt. Jackson\",\n      \"lat\": 44.2032358,\n      \"long\": -71.3754007,\n      \"elevation\": 4042,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872824,\n      \"name\": \"Mt. Tom\",\n      \"lat\": 44.2105188,\n      \"long\": -71.4460606,\n      \"elevation\": 4042,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 6,\n      \"name\": \"Wildcat Mountain (D peak)\",\n      \"lat\": 44.2494098,\n      \"long\": -71.2235995,\n      \"elevation\": 4062,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872330,\n      \"name\": \"Mt. Moriah\",\n      \"lat\": 44.3406387,\n      \"long\": -71.1318489,\n      \"elevation\": 4029,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872460,\n      \"name\": \"Mt. Passaconaway\",\n      \"lat\": 43.9547374,\n      \"long\": -71.3808824,\n      \"elevation\": 4045,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873045,\n      \"name\": \"Galehead Mountain\",\n      \"lat\": 44.1848105,\n      \"long\": -71.5733908,\n      \"elevation\": 4016,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872920,\n      \"name\": \"Mt. Whiteface\",\n      \"lat\": 43.9339506,\n      \"long\": -71.4059066,\n      \"elevation\": 3993,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870689,\n      \"name\": \"Mt. Waumbek\",\n      \"lat\": 44.4328282,\n      \"long\": -71.4170236,\n      \"elevation\": 3996,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872086,\n      \"name\": \"Mt. Isolation\",\n      \"lat\": 44.2147796,\n      \"long\": -71.3092406,\n      \"elevation\": 4003,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872778,\n      \"name\": \"Mt. Tecumseh\",\n      \"lat\": 43.9665408,\n      \"long\": -71.5566086,\n      \"elevation\": 4009,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Mt. Hancock (South Peak)\",\n      \"lat\": 44.0732711,\n      \"long\": -71.4869445,\n      \"elevation\": 4318,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Kinsman Mountain (North Peak)\",\n      \"lat\": 44.1333547,\n      \"long\": -71.7368148,\n      \"elevation\": 4293,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Mt. Zealand\",\n      \"lat\": 44.1800207,\n      \"long\": -71.5215792,\n      \"elevation\": 4260,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 5,\n      \"name\": \"Owls Head\",\n      \"lat\": 44.1443341,\n      \"long\": -71.6051095,\n      \"elevation\": 4025,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 561737,\n      \"name\": \"Mt. Katahdin (Baxter Peak)\",\n      \"lat\": 45.9042845,\n      \"long\": -68.9213562,\n      \"elevation\": 5259,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 567535,\n      \"name\": \"Mt. Katahdin (Hamlin Peak)\",\n      \"lat\": 45.92416,\n      \"long\": -68.92767,\n      \"elevation\": 4757,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 564525,\n      \"name\": \"Crocker Mountain\",\n      \"lat\": 45.04712,\n      \"long\": -70.38273,\n      \"elevation\": 4226,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572729,\n      \"name\": \"Old Speck Mountain\",\n      \"lat\": 44.57092,\n      \"long\": -70.95365,\n      \"elevation\": 4183,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572313,\n      \"name\": \"North Brother\",\n      \"lat\": 45.95716,\n      \"long\": -68.98544,\n      \"elevation\": 4140,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572033,\n      \"name\": \"Bigelow Mountain (Avery Peak)\",\n      \"lat\": 45.14664,\n      \"long\": -70.27585,\n      \"elevation\": 4068,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 561068,\n      \"name\": \"Mt. Abraham\",\n      \"lat\": 44.9722782,\n      \"long\": -70.3259007,\n      \"elevation\": 4032,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 581982,\n      \"name\": \"South Crocker Mountain\",\n      \"lat\": 45.03619,\n      \"long\": -70.37607,\n      \"elevation\": 4042,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 576826,\n      \"name\": \"Saddleback Horn\",\n      \"lat\": 44.95119,\n      \"long\": -70.48706,\n      \"elevation\": 3999,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 578873,\n      \"name\": \"Mt. Redington\",\n      \"lat\": 45.02499,\n      \"long\": -70.3887,\n      \"elevation\": 3999,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 561033,\n      \"name\": \"Spaulding Mountain\",\n      \"lat\": 45.0028335,\n      \"long\": -70.333401,\n      \"elevation\": 4009,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 576507,\n      \"name\": \"Sugarloaf Mountain\",\n      \"lat\": 45.03169,\n      \"long\": -70.31333,\n      \"elevation\": 4226,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 578186,\n      \"name\": \"Bigelow Mountain (West Peak)\",\n      \"lat\": 45.14676,\n      \"long\": -70.28835,\n      \"elevation\": 4131,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 574668,\n      \"name\": \"Saddleback Mountain\",\n      \"lat\": 44.93641,\n      \"long\": -70.50461,\n      \"elevation\": 4117,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 1461774,\n      \"name\": \"Mt. Mansfield\",\n      \"lat\": 44.5436627,\n      \"long\": -72.8142903,\n      \"elevation\": 4383,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1458086,\n      \"name\": \"Killington Peak\",\n      \"lat\": 43.6045042,\n      \"long\": -72.8201012,\n      \"elevation\": 4226,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1456724,\n      \"name\": \"Camels Hump\",\n      \"lat\": 44.3195001,\n      \"long\": -72.8862309,\n      \"elevation\": 4071,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460843,\n      \"name\": \"Mt. Ellen\",\n      \"lat\": 44.16005,\n      \"long\": -72.9288358,\n      \"elevation\": 4078,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460513,\n      \"name\": \"Mt. Abraham\",\n      \"lat\": 44.1204328,\n      \"long\": -72.9360992,\n      \"elevation\": 4012,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 872622,\n      \"name\": \"Sandwich Mountain\",\n      \"lat\": 43.9000705,\n      \"long\": -71.4981311,\n      \"elevation\": 3983,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870370,\n      \"name\": \"The Bulge\",\n      \"lat\": 44.5146604,\n      \"long\": -71.4082607,\n      \"elevation\": 3937,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872374,\n      \"name\": \"Mt. Nancy\",\n      \"lat\": 44.1225582,\n      \"long\": -71.4047974,\n      \"elevation\": 3894,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870384,\n      \"name\": \"The Horn\",\n      \"lat\": 44.5180243,\n      \"long\": -71.4000978,\n      \"elevation\": 3911,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870718,\n      \"name\": \"Mt. Weeks\",\n      \"lat\": 44.4616068,\n      \"long\": -71.3818967,\n      \"elevation\": 3901,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872855,\n      \"name\": \"Vose Spur\",\n      \"lat\": 44.1030664,\n      \"long\": -71.4346527,\n      \"elevation\": 3848,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872798,\n      \"name\": \"East Sleeper\",\n      \"lat\": 43.9542735,\n      \"long\": -71.4352909,\n      \"elevation\": 3888,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872632,\n      \"name\": \"Scar Ridge\",\n      \"lat\": 44.0291171,\n      \"long\": -71.5943792,\n      \"elevation\": 3773,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872784,\n      \"name\": \"The Cannon Balls\",\n      \"lat\": 44.1499416,\n      \"long\": -71.7102279,\n      \"elevation\": 3766,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 13,\n      \"name\": \"South Weeks\",\n      \"lat\": 44.4423379,\n      \"long\": -71.3882565,\n      \"elevation\": 3881,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Peak Above the Nubble\",\n      \"lat\": 44.2229103,\n      \"long\": -71.561377,\n      \"elevation\": 3812,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 575826,\n      \"name\": \"South Brother\",\n      \"lat\": 45.944212,\n      \"long\": -69.0017136,\n      \"elevation\": 3960,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 566912,\n      \"name\": \"Goose Eye Mountain\",\n      \"lat\": 44.50269,\n      \"long\": -70.99938,\n      \"elevation\": 3875,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 566418,\n      \"name\": \"Fort Mountain\",\n      \"lat\": 45.96218,\n      \"long\": -68.97473,\n      \"elevation\": 3855,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 578344,\n      \"name\": \"White Cap Mountain\",\n      \"lat\": 45.23613,\n      \"long\": -70.81808,\n      \"elevation\": 3848,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 576827,\n      \"name\": \"The Horns\",\n      \"lat\": 45.145,\n      \"long\": -70.32321,\n      \"elevation\": 3806,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 564149,\n      \"name\": \"Mt. Coe\",\n      \"lat\": 45.93371,\n      \"long\": -69.00901,\n      \"elevation\": 3786,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 565625,\n      \"name\": \"East Kennebago Mountain\",\n      \"lat\": 45.12179,\n      \"long\": -70.59967,\n      \"elevation\": 3783,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 561542,\n      \"name\": \"Baldpate Mountain\",\n      \"lat\": 44.609244,\n      \"long\": -70.892372,\n      \"elevation\": 3812,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 569102,\n      \"name\": \"Kennebago Divide\",\n      \"lat\": 45.2183842,\n      \"long\": -70.8153464,\n      \"elevation\": 3392,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 565831,\n      \"name\": \"Elephant Mountain\",\n      \"lat\": 44.76807,\n      \"long\": -70.78165,\n      \"elevation\": 3760,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 575683,\n      \"name\": \"Snow Mountain (Oxford)\",\n      \"lat\": 45.16934,\n      \"long\": -70.82684,\n      \"elevation\": 3783,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 575684,\n      \"name\": \"Snow Mountain (Franklin)\",\n      \"lat\": 45.29143,\n      \"long\": -70.70927,\n      \"elevation\": 3966,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Boundary Peak\",\n      \"lat\": 45.2670136,\n      \"long\": -70.8412558,\n      \"elevation\": 3855,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 1461270,\n      \"name\": \"Pico Peak\",\n      \"lat\": 43.6395035,\n      \"long\": -72.8362132,\n      \"elevation\": 3947,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1461479,\n      \"name\": \"Stratton Mountain\",\n      \"lat\": 43.0862572,\n      \"long\": -72.9248856,\n      \"elevation\": 3940,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1457995,\n      \"name\": \"Jay Peak\",\n      \"lat\": 44.9244904,\n      \"long\": -72.5256705,\n      \"elevation\": 3786,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1461816,\n      \"name\": \"Equinox Mountain\",\n      \"lat\": 43.1659133,\n      \"long\": -73.1173951,\n      \"elevation\": 3835,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1458422,\n      \"name\": \"Mendon Peak\",\n      \"lat\": 43.5954453,\n      \"long\": -72.8454059,\n      \"elevation\": 3845,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460656,\n      \"name\": \"Bread Loaf Mountain\",\n      \"lat\": 44.0021521,\n      \"long\": -72.9416037,\n      \"elevation\": 3812,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1461622,\n      \"name\": \"Mt. Wilson\",\n      \"lat\": 44.0047016,\n      \"long\": -72.9256359,\n      \"elevation\": 3766,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1456415,\n      \"name\": \"Big Jay\",\n      \"lat\": 44.9158795,\n      \"long\": -72.5403939,\n      \"elevation\": 3763,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460797,\n      \"name\": \"Dorset Mountain\",\n      \"lat\": 43.3092317,\n      \"long\": -73.0281585,\n      \"elevation\": 3766,\n      \"state\": \"VT\"\n    }\n  ]\n}\n","{\n  \"title\": \"New England 4,000 Footers\",\n  \"listID\": \"ne4k\",\n  \"center\": [44.5435, -73.3975],\n  \"zoom\": 8,\n  \"peakCount\": 67,\n  \"peaks\": [\n    {\n      \"id\": 561737,\n      \"name\": \"Mt. Katahdin (Baxter Peak)\",\n      \"lat\": 45.9042845,\n      \"long\": -68.9213562,\n      \"elevation\": 5259,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 567535,\n      \"name\": \"Mt. Katahdin (Hamlin Peak)\",\n      \"lat\": 45.92416,\n      \"long\": -68.92767,\n      \"elevation\": 4757,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 564525,\n      \"name\": \"Crocker Mountain\",\n      \"lat\": 45.04712,\n      \"long\": -70.38273,\n      \"elevation\": 4226,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572729,\n      \"name\": \"Old Speck Mountain\",\n      \"lat\": 44.57092,\n      \"long\": -70.95365,\n      \"elevation\": 4183,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572313,\n      \"name\": \"North Brother\",\n      \"lat\": 45.95716,\n      \"long\": -68.98544,\n      \"elevation\": 4140,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572033,\n      \"name\": \"Bigelow Mountain (Avery Peak)\",\n      \"lat\": 45.14664,\n      \"long\": -70.27585,\n      \"elevation\": 4068,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 561068,\n      \"name\": \"Mt. Abraham\",\n      \"lat\": 44.9722782,\n      \"long\": -70.3259007,\n      \"elevation\": 4032,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 581982,\n      \"name\": \"South Crocker Mountain\",\n      \"lat\": 45.03619,\n      \"long\": -70.37607,\n      \"elevation\": 4042,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 576826,\n      \"name\": \"Saddleback Horn\",\n      \"lat\": 44.95119,\n      \"long\": -70.48706,\n      \"elevation\": 3999,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 578873,\n      \"name\": \"Mt. Redington\",\n      \"lat\": 45.02499,\n      \"long\": -70.3887,\n      \"elevation\": 3999,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 561033,\n      \"name\": \"Spaulding Mountain\",\n      \"lat\": 45.0028335,\n      \"long\": -70.333401,\n      \"elevation\": 4009,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 576507,\n      \"name\": \"Sugarloaf Mountain\",\n      \"lat\": 45.03169,\n      \"long\": -70.31333,\n      \"elevation\": 4226,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 578186,\n      \"name\": \"Bigelow Mountain (West Peak)\",\n      \"lat\": 45.14676,\n      \"long\": -70.28835,\n      \"elevation\": 4131,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 574668,\n      \"name\": \"Saddleback Mountain\",\n      \"lat\": 44.93641,\n      \"long\": -70.50461,\n      \"elevation\": 4117,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 1461774,\n      \"name\": \"Mt. Mansfield\",\n      \"lat\": 44.5436627,\n      \"long\": -72.8142903,\n      \"elevation\": 4383,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1458086,\n      \"name\": \"Killington Peak\",\n      \"lat\": 43.6045042,\n      \"long\": -72.8201012,\n      \"elevation\": 4226,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1456724,\n      \"name\": \"Camels Hump\",\n      \"lat\": 44.3195001,\n      \"long\": -72.8862309,\n      \"elevation\": 4071,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460843,\n      \"name\": \"Mt. Ellen\",\n      \"lat\": 44.16005,\n      \"long\": -72.9288358,\n      \"elevation\": 4078,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460513,\n      \"name\": \"Mt. Abraham\",\n      \"lat\": 44.1204328,\n      \"long\": -72.9360992,\n      \"elevation\": 4012,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 871352,\n      \"name\": \"Mt. Washington\",\n      \"lat\": 44.2705781,\n      \"long\": -71.3033287,\n      \"elevation\": 6273,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871380,\n      \"name\": \"Mt. Adams\",\n      \"lat\": 44.3206546,\n      \"long\": -71.2915306,\n      \"elevation\": 5791,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872101,\n      \"name\": \"Mt. Jefferson\",\n      \"lat\": 44.304315,\n      \"long\": -71.3166955,\n      \"elevation\": 5699,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872313,\n      \"name\": \"Mt. Monroe\",\n      \"lat\": 44.2552125,\n      \"long\": -71.3214183,\n      \"elevation\": 5351,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872247,\n      \"name\": \"Mt. Madison\",\n      \"lat\": 44.3288173,\n      \"long\": -71.2767796,\n      \"elevation\": 5351,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872150,\n      \"name\": \"Mt. Lafayette\",\n      \"lat\": 44.1608182,\n      \"long\": -71.6444575,\n      \"elevation\": 5236,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872176,\n      \"name\": \"Mt. Lincoln\",\n      \"lat\": 44.1489451,\n      \"long\": -71.6445258,\n      \"elevation\": 5085,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872710,\n      \"name\": \"South Twin Mountain\",\n      \"lat\": 44.187556,\n      \"long\": -71.5548018,\n      \"elevation\": 4888,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871629,\n      \"name\": \"Carter Dome\",\n      \"lat\": 44.2673401,\n      \"long\": -71.1792622,\n      \"elevation\": 4826,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872324,\n      \"name\": \"Mt. Moosilauke\",\n      \"lat\": 44.024502,\n      \"long\": -71.8309164,\n      \"elevation\": 4813,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871851,\n      \"name\": \"Mt. Eisenhower\",\n      \"lat\": 44.2407341,\n      \"long\": -71.3501812,\n      \"elevation\": 4757,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872408,\n      \"name\": \"North Twin Mountain\",\n      \"lat\": 44.2025557,\n      \"long\": -71.5578576,\n      \"elevation\": 4751,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871628,\n      \"name\": \"Mt. Carrigain\",\n      \"lat\": 44.0936537,\n      \"long\": -71.4466959,\n      \"elevation\": 4682,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871556,\n      \"name\": \"Mt. Bond\",\n      \"lat\": 44.1528345,\n      \"long\": -71.5311895,\n      \"elevation\": 4685,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872288,\n      \"name\": \"Middle Carter Mountain\",\n      \"lat\": 44.3031109,\n      \"long\": -71.1678106,\n      \"elevation\": 4603,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"West Bond Mountain\",\n      \"lat\": 44.1547633,\n      \"long\": -71.5436295,\n      \"elevation\": 4540,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871925,\n      \"name\": \"Mt. Garfield\",\n      \"lat\": 44.1872617,\n      \"long\": -71.6106785,\n      \"elevation\": 4495,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872169,\n      \"name\": \"Mt. Liberty\",\n      \"lat\": 44.1158901,\n      \"long\": -71.6420251,\n      \"elevation\": 4439,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872698,\n      \"name\": \"South Carter Mountain\",\n      \"lat\": 44.2897779,\n      \"long\": -71.176635,\n      \"elevation\": 4419,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872940,\n      \"name\": \"Wildcat Mountain (A peak)\",\n      \"lat\": 44.2595144,\n      \"long\": -71.201848,\n      \"elevation\": 4423,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872006,\n      \"name\": \"Mt. Hancock\",\n      \"lat\": 44.0836076,\n      \"long\": -71.4934302,\n      \"elevation\": 4409,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872707,\n      \"name\": \"Kinsman Mountain (South Peak)\",\n      \"lat\": 44.1228429,\n      \"long\": -71.7367508,\n      \"elevation\": 4331,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873014,\n      \"name\": \"Mt. Field\",\n      \"lat\": 44.196137,\n      \"long\": -71.4331049,\n      \"elevation\": 4311,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872440,\n      \"name\": \"Mt. Osceola\",\n      \"lat\": 44.0014482,\n      \"long\": -71.5359097,\n      \"elevation\": 4314,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871894,\n      \"name\": \"Mt. Flume\",\n      \"lat\": 44.1089459,\n      \"long\": -71.6278579,\n      \"elevation\": 4318,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872495,\n      \"name\": \"Mt. Pierce\",\n      \"lat\": 44.2265226,\n      \"long\": -71.3659732,\n      \"elevation\": 4304,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872952,\n      \"name\": \"Mt. Willey\",\n      \"lat\": 44.1835296,\n      \"long\": -71.4207354,\n      \"elevation\": 4268,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 7,\n      \"name\": \"Bondcliff\",\n      \"lat\": 44.1405773,\n      \"long\": -71.5409195,\n      \"elevation\": 4265,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872833,\n      \"name\": \"Mt. Tripyramid\",\n      \"lat\": 43.9731659,\n      \"long\": -71.4427801,\n      \"elevation\": 4163,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 865897,\n      \"name\": \"Mt. Cabot\",\n      \"lat\": 44.5060061,\n      \"long\": -71.4144768,\n      \"elevation\": 4163,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871835,\n      \"name\": \"Mt. Osceola (East Peak)\",\n      \"lat\": 44.0061704,\n      \"long\": -71.5206316,\n      \"elevation\": 4134,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872294,\n      \"name\": \"Mt. Tripyramid (Middle Peak)\",\n      \"lat\": 43.9646744,\n      \"long\": -71.4400968,\n      \"elevation\": 4114,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873192,\n      \"name\": \"Cannon Mountain\",\n      \"lat\": 44.156614,\n      \"long\": -71.6988025,\n      \"elevation\": 4085,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871992,\n      \"name\": \"Mt. Hale\",\n      \"lat\": 44.2217224,\n      \"long\": -71.5120232,\n      \"elevation\": 4062,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872093,\n      \"name\": \"Mt. Jackson\",\n      \"lat\": 44.2032358,\n      \"long\": -71.3754007,\n      \"elevation\": 4042,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872824,\n      \"name\": \"Mt. Tom\",\n      \"lat\": 44.2105188,\n      \"long\": -71.4460606,\n      \"elevation\": 4042,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 6,\n      \"name\": \"Wildcat Mountain (D peak)\",\n      \"lat\": 44.2494098,\n      \"long\": -71.2235995,\n      \"elevation\": 4062,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872330,\n      \"name\": \"Mt. Moriah\",\n      \"lat\": 44.3406387,\n      \"long\": -71.1318489,\n      \"elevation\": 4029,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872460,\n      \"name\": \"Mt. Passaconaway\",\n      \"lat\": 43.9547374,\n      \"long\": -71.3808824,\n      \"elevation\": 4045,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873045,\n      \"name\": \"Galehead Mountain\",\n      \"lat\": 44.1848105,\n      \"long\": -71.5733908,\n      \"elevation\": 4016,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872920,\n      \"name\": \"Mt. Whiteface\",\n      \"lat\": 43.9339506,\n      \"long\": -71.4059066,\n      \"elevation\": 3993,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870689,\n      \"name\": \"Mt. Waumbek\",\n      \"lat\": 44.4328282,\n      \"long\": -71.4170236,\n      \"elevation\": 3996,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872086,\n      \"name\": \"Mt. Isolation\",\n      \"lat\": 44.2147796,\n      \"long\": -71.3092406,\n      \"elevation\": 4003,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872778,\n      \"name\": \"Mt. Tecumseh\",\n      \"lat\": 43.9665408,\n      \"long\": -71.5566086,\n      \"elevation\": 4009,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Mt. Hancock (South Peak)\",\n      \"lat\": 44.0732711,\n      \"long\": -71.4869445,\n      \"elevation\": 4318,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Kinsman Mountain (North Peak)\",\n      \"lat\": 44.1333547,\n      \"long\": -71.7368148,\n      \"elevation\": 4293,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Mt. Zealand\",\n      \"lat\": 44.1800207,\n      \"long\": -71.5215792,\n      \"elevation\": 4260,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 5,\n      \"name\": \"Owls Head\",\n      \"lat\": 44.1443341,\n      \"long\": -71.6051095,\n      \"elevation\": 4025,\n      \"state\": \"NH\"\n    }\n  ]\n}\n","{\n  \"title\": \"New England State Highpoints\",\n  \"listID\": \"neHigh\",\n  \"center\": [43.73935, -76.0363],\n  \"zoom\": 7,\n  \"peakCount\": 6,\n  \"peaks\": [\n    {\n      \"id\": 871352,\n      \"name\": \"Mt. Washington\",\n      \"lat\": 44.2705781,\n      \"long\": -71.3033287,\n      \"elevation\": 6273,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 561737,\n      \"name\": \"Mt. Katahdin (Baxter Peak)\",\n      \"lat\": 45.9042845,\n      \"long\": -68.9213562,\n      \"elevation\": 5259,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 1461774,\n      \"name\": \"Mt. Mansfield\",\n      \"lat\": 44.5436627,\n      \"long\": -72.8142903,\n      \"elevation\": 4383,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 205348,\n      \"name\": \"Bear Mountain\",\n      \"lat\": 42.0448138,\n      \"long\": -73.4548423,\n      \"elevation\": 2323,\n      \"state\": \"CT\"\n    },\n    {\n      \"id\": 1219566,\n      \"name\": \"Jerimoth Hill\",\n      \"lat\": 41.8494158,\n      \"long\": -71.7788736,\n      \"elevation\": 810,\n      \"state\": \"RI\"\n    },\n    {\n      \"id\": 607448,\n      \"name\": \"Mt. Greylock\",\n      \"lat\": 42.6371703,\n      \"long\": -73.1659399,\n      \"elevation\": 3491,\n      \"state\": \"MA\"\n    }\n  ]\n}\n","{\n  \"title\": \"New Hampshire 4,000 Footers\",\n  \"listID\": \"nh4k\",\n  \"center\": [44.2068, -72.0964],\n  \"zoom\": 10,\n  \"peakCount\": 48,\n  \"peaks\": [\n    {\n      \"id\": 871352,\n      \"name\": \"Mt. Washington\",\n      \"lat\": 44.2705781,\n      \"long\": -71.3033287,\n      \"elevation\": 6273,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871380,\n      \"name\": \"Mt. Adams\",\n      \"lat\": 44.3206546,\n      \"long\": -71.2915306,\n      \"elevation\": 5791,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872101,\n      \"name\": \"Mt. Jefferson\",\n      \"lat\": 44.304315,\n      \"long\": -71.3166955,\n      \"elevation\": 5699,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872313,\n      \"name\": \"Mt. Monroe\",\n      \"lat\": 44.2552125,\n      \"long\": -71.3214183,\n      \"elevation\": 5351,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872247,\n      \"name\": \"Mt. Madison\",\n      \"lat\": 44.3288173,\n      \"long\": -71.2767796,\n      \"elevation\": 5351,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872150,\n      \"name\": \"Mt. Lafayette\",\n      \"lat\": 44.1608182,\n      \"long\": -71.6444575,\n      \"elevation\": 5236,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872176,\n      \"name\": \"Mt. Lincoln\",\n      \"lat\": 44.1489451,\n      \"long\": -71.6445258,\n      \"elevation\": 5085,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872710,\n      \"name\": \"South Twin Mountain\",\n      \"lat\": 44.187556,\n      \"long\": -71.5548018,\n      \"elevation\": 4888,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871629,\n      \"name\": \"Carter Dome\",\n      \"lat\": 44.2673401,\n      \"long\": -71.1792622,\n      \"elevation\": 4826,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872324,\n      \"name\": \"Mt. Moosilauke\",\n      \"lat\": 44.024502,\n      \"long\": -71.8309164,\n      \"elevation\": 4813,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871851,\n      \"name\": \"Mt. Eisenhower\",\n      \"lat\": 44.2407341,\n      \"long\": -71.3501812,\n      \"elevation\": 4757,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872408,\n      \"name\": \"North Twin Mountain\",\n      \"lat\": 44.2025557,\n      \"long\": -71.5578576,\n      \"elevation\": 4751,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871628,\n      \"name\": \"Mt. Carrigain\",\n      \"lat\": 44.0936537,\n      \"long\": -71.4466959,\n      \"elevation\": 4682,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871556,\n      \"name\": \"Mt. Bond\",\n      \"lat\": 44.1528345,\n      \"long\": -71.5311895,\n      \"elevation\": 4685,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872288,\n      \"name\": \"Middle Carter Mountain\",\n      \"lat\": 44.3031109,\n      \"long\": -71.1678106,\n      \"elevation\": 4603,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"West Bond Mountain\",\n      \"lat\": 44.1547633,\n      \"long\": -71.5436295,\n      \"elevation\": 4540,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871925,\n      \"name\": \"Mt. Garfield\",\n      \"lat\": 44.1872617,\n      \"long\": -71.6106785,\n      \"elevation\": 4495,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872169,\n      \"name\": \"Mt. Liberty\",\n      \"lat\": 44.1158901,\n      \"long\": -71.6420251,\n      \"elevation\": 4439,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872698,\n      \"name\": \"South Carter Mountain\",\n      \"lat\": 44.2897779,\n      \"long\": -71.176635,\n      \"elevation\": 4419,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872940,\n      \"name\": \"Wildcat Mountain (A peak)\",\n      \"lat\": 44.2595144,\n      \"long\": -71.201848,\n      \"elevation\": 4423,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872006,\n      \"name\": \"Mt. Hancock\",\n      \"lat\": 44.0836076,\n      \"long\": -71.4934302,\n      \"elevation\": 4409,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872707,\n      \"name\": \"Kinsman Mountain (South Peak)\",\n      \"lat\": 44.1228429,\n      \"long\": -71.7367508,\n      \"elevation\": 4331,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873014,\n      \"name\": \"Mt. Field\",\n      \"lat\": 44.196137,\n      \"long\": -71.4331049,\n      \"elevation\": 4311,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872440,\n      \"name\": \"Mt. Osceola\",\n      \"lat\": 44.0014482,\n      \"long\": -71.5359097,\n      \"elevation\": 4314,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871894,\n      \"name\": \"Mt. Flume\",\n      \"lat\": 44.1089459,\n      \"long\": -71.6278579,\n      \"elevation\": 4318,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872495,\n      \"name\": \"Mt. Pierce\",\n      \"lat\": 44.2265226,\n      \"long\": -71.3659732,\n      \"elevation\": 4304,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872952,\n      \"name\": \"Mt. Willey\",\n      \"lat\": 44.1835296,\n      \"long\": -71.4207354,\n      \"elevation\": 4268,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 7,\n      \"name\": \"Bondcliff\",\n      \"lat\": 44.1405773,\n      \"long\": -71.5409195,\n      \"elevation\": 4265,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872833,\n      \"name\": \"Mt. Tripyramid\",\n      \"lat\": 43.9731659,\n      \"long\": -71.4427801,\n      \"elevation\": 4163,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 865897,\n      \"name\": \"Mt. Cabot\",\n      \"lat\": 44.5060061,\n      \"long\": -71.4144768,\n      \"elevation\": 4163,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871835,\n      \"name\": \"Mt. Osceola (East Peak)\",\n      \"lat\": 44.0061704,\n      \"long\": -71.5206316,\n      \"elevation\": 4134,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872294,\n      \"name\": \"Mt. Tripyramid (Middle Peak)\",\n      \"lat\": 43.9646744,\n      \"long\": -71.4400968,\n      \"elevation\": 4114,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873192,\n      \"name\": \"Cannon Mountain\",\n      \"lat\": 44.156614,\n      \"long\": -71.6988025,\n      \"elevation\": 4085,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871992,\n      \"name\": \"Mt. Hale\",\n      \"lat\": 44.2217224,\n      \"long\": -71.5120232,\n      \"elevation\": 4062,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872093,\n      \"name\": \"Mt. Jackson\",\n      \"lat\": 44.2032358,\n      \"long\": -71.3754007,\n      \"elevation\": 4042,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872824,\n      \"name\": \"Mt. Tom\",\n      \"lat\": 44.2105188,\n      \"long\": -71.4460606,\n      \"elevation\": 4042,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 6,\n      \"name\": \"Wildcat Mountain (D peak)\",\n      \"lat\": 44.2494098,\n      \"long\": -71.2235995,\n      \"elevation\": 4062,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872330,\n      \"name\": \"Mt. Moriah\",\n      \"lat\": 44.3406387,\n      \"long\": -71.1318489,\n      \"elevation\": 4029,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872460,\n      \"name\": \"Mt. Passaconaway\",\n      \"lat\": 43.9547374,\n      \"long\": -71.3808824,\n      \"elevation\": 4045,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873045,\n      \"name\": \"Galehead Mountain\",\n      \"lat\": 44.1848105,\n      \"long\": -71.5733908,\n      \"elevation\": 4016,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872920,\n      \"name\": \"Mt. Whiteface\",\n      \"lat\": 43.9339506,\n      \"long\": -71.4059066,\n      \"elevation\": 3993,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870689,\n      \"name\": \"Mt. Waumbek\",\n      \"lat\": 44.4328282,\n      \"long\": -71.4170236,\n      \"elevation\": 3996,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872086,\n      \"name\": \"Mt. Isolation\",\n      \"lat\": 44.2147796,\n      \"long\": -71.3092406,\n      \"elevation\": 4003,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872778,\n      \"name\": \"Mt. Tecumseh\",\n      \"lat\": 43.9665408,\n      \"long\": -71.5566086,\n      \"elevation\": 4009,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Mt. Hancock (South Peak)\",\n      \"lat\": 44.0732711,\n      \"long\": -71.4869445,\n      \"elevation\": 4318,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Kinsman Mountain (North Peak)\",\n      \"lat\": 44.1333547,\n      \"long\": -71.7368148,\n      \"elevation\": 4293,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Mt. Zealand\",\n      \"lat\": 44.1800207,\n      \"long\": -71.5215792,\n      \"elevation\": 4260,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 5,\n      \"name\": \"Owls Head\",\n      \"lat\": 44.1443341,\n      \"long\": -71.6051095,\n      \"elevation\": 4025,\n      \"state\": \"NH\"\n    }\n  ]\n}\n","{\n  \"title\": \"Vermont 4,000 Footers\",\n  \"listID\": \"vt4k\",\n  \"center\": [44.0836, -74.0835],\n  \"zoom\": 9,\n  \"peakCount\": 5,\n  \"peaks\": [\n    {\n      \"id\": 1461774,\n      \"name\": \"Mt. Mansfield\",\n      \"lat\": 44.5436627,\n      \"long\": -72.8142903,\n      \"elevation\": 4383,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1458086,\n      \"name\": \"Killington Peak\",\n      \"lat\": 43.6045042,\n      \"long\": -72.8201012,\n      \"elevation\": 4226,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1456724,\n      \"name\": \"Camels Hump\",\n      \"lat\": 44.3195001,\n      \"long\": -72.8862309,\n      \"elevation\": 4071,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460843,\n      \"name\": \"Mt. Ellen\",\n      \"lat\": 44.16005,\n      \"long\": -72.9288358,\n      \"elevation\": 4078,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460513,\n      \"name\": \"Mt. Abraham\",\n      \"lat\": 44.1204328,\n      \"long\": -72.9360992,\n      \"elevation\": 4012,\n      \"state\": \"VT\"\n    }\n  ]\n}\n","import adk46JSON from \"../json/adk46.json\";\nimport co14JSON from \"../json/co14.json\";\nimport me4kJSON from \"../json/me4k.json\";\nimport ne100JSON from \"../json/ne100.json\";\nimport ne4kJSON from \"../json/ne4k.json\";\nimport neHighJSON from \"../json/neHigh.json\";\nimport nh4kJSON from \"../json/nh4k.json\";\nimport vt4kJSON from \"../json/vt4k.json\";\n\nclass PeakList {\n  constructor(data) {\n    this.title = data.title;\n    this.listID = data.listID;\n    this.center = data.center;\n    this.zoom = data.zoom;\n    this.peakCount = data.peakCount;\n    this.peaks = data.peaks;\n  }\n}\n\nconst adk46 = new PeakList(adk46JSON);\nconst co14 = new PeakList(co14JSON);\nconst me4k = new PeakList(me4kJSON);\nconst ne100 = new PeakList(ne100JSON);\nconst ne4k = new PeakList(ne4kJSON);\nconst neHigh = new PeakList(neHighJSON);\nconst nh4k = new PeakList(nh4kJSON);\nconst vt4k = new PeakList(vt4kJSON);\n\nconst peakListsArr = [adk46, co14, me4k, ne100, ne4k, neHigh, nh4k, vt4k];\n\nconst uniquePeaks = [\n  ...new Map(\n    peakListsArr\n      .flatMap((peakList) => peakList.peaks)\n      .map((peak) => [peak.id, peak])\n  ).values(),\n];\n\nconst peakMap = new Map();\n\nconst elevationMap = new Map();\n\nuniquePeaks.forEach((peak) => {\n  peakMap.set(peak.id, peak.name);\n});\n\nuniquePeaks.forEach((peak) => elevationMap.set(peak.id, peak.elevation));\n\npeakListsArr.sort((a, b) =>\n  a.title.toLowerCase().localeCompare(b.title.toLowerCase())\n);\n\nexport { peakListsArr, peakMap, elevationMap };\n","import { peakMap, elevationMap } from \"./peakLists.js\";\n\nexport class LogEntry {\n  peaks = [];\n  constructor(\n    date,\n    peakIDsArr,\n    listID,\n    listTitle,\n    elevation,\n    distance,\n    hours,\n    min,\n    notes,\n    rating,\n    logID\n  ) {\n    this.date = new Date(date);\n    this.peaks = [];\n    peakIDsArr.forEach((peakID) =>\n      this.peaks.push({\n        id: peakID,\n        name: peakMap.get(peakID),\n        elevation: elevationMap.get(peakID),\n      })\n    );\n    this.listID = listID;\n    this.listTitle = listTitle;\n    this.elevation = +elevation;\n    this.distance = +distance;\n    this.hours = +hours;\n    this.min = +min;\n    this.notes = notes;\n    this.rating = +rating;\n    this.logID = logID;\n    this.#init();\n  }\n\n  #init() {\n    const mtnNames = this.peaks.map((peak) => peak.name);\n    this.mtnStr =\n      mtnNames.length > 1\n        ? mtnNames.slice(0, -1).join(\", \") + \" and \" + mtnNames.slice(-1)\n        : mtnNames[0];\n\n    this.shortDate = new Intl.DateTimeFormat(\"en-US\", {\n      day: \"2-digit\",\n      year: \"numeric\",\n      month: \"2-digit\",\n    }).format(this.date);\n\n    this.longDate = new Intl.DateTimeFormat(\"en-US\", {\n      day: \"2-digit\",\n      year: \"numeric\",\n      month: \"long\",\n    }).format(this.date);\n\n    if (this.hours && this.min)\n      this.time = Math.round((this.hours + this.min / 60) * 10) / 10;\n    if (this.distance && this.time)\n      this.avgSpeed = Math.round((this.distance / this.time) * 10) / 10;\n    if (this.elevation && this.distance)\n      this.avgElevation = Math.round(this.elevation / this.distance);\n  }\n}\n","import { peakListsArr } from \"./peakLists.js\";\nimport { LogEntry } from \"./logEntry.js\";\n\nexport const state = {\n  savedLists: [],\n  logEntries: [],\n  completedPeaks: [],\n  listCounts: {},\n  currentPreviewView: \"all\",\n  currentLogSelect: \"all\",\n  currentTableSort: \"elevation\",\n};\n\nconst getPeakList = function (listID) {\n  return peakListsArr.find((list) => list.listID === listID);\n};\n\nconst getPeakListsArr = function (previewType = \"all\") {\n  if (previewType === \"all\") return peakListsArr;\n  if (previewType === \"saved\")\n    return peakListsArr.filter((list) =>\n      state.savedLists.includes(list.listID)\n    );\n};\n\nconst sortPeakList = function (listID, sortType) {\n  const list = getPeakList(listID);\n  if (sortType === \"elevation\") {\n    list.peaks.sort((a, b) => b.elevation - a.elevation);\n  }\n  if (sortType === \"alphabetical\") {\n    list.peaks.sort((a, b) =>\n      a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n    );\n  }\n};\n\nexport const setCurrentPreviewView = function (previewType) {\n  state.currentPreviewView = previewType;\n};\n\nexport const setCurrentLogSelect = function (listID) {\n  state.currentLogSelect = listID;\n};\n\nexport const setCurrentTableSort = function (sortType) {\n  state.currentTableSort = sortType;\n};\n\nexport const getCoords = async function () {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n};\n\nexport const getCheckboxDisplayArr = function (listID) {\n  sortPeakList(listID, \"alphabetical\");\n  const listArr = getPeakList(listID).peaks;\n  const firstHalf = listArr.slice(0, Math.ceil(listArr.length / 2));\n  const secondHalf = listArr.slice(Math.ceil(listArr.length / 2));\n  const displayArr = [];\n  for (const [i, _] of listArr.entries()) {\n    firstHalf[i] && displayArr.push(firstHalf[i]);\n    secondHalf[i] && displayArr.push(secondHalf[i]);\n  }\n  return displayArr;\n};\n\nexport const getDate = function (date) {\n  const options = {\n    day: \"numeric\",\n    month: \"numeric\",\n    year: \"numeric\",\n  };\n  const now = new Date();\n  if (date === \"today\")\n    return new Intl.DateTimeFormat(\"en-CA\", options).format(now);\n  if (date === \"yesterday\")\n    return new Intl.DateTimeFormat(\"en-CA\", options).format(\n      new Date(now.getTime() - 86400000)\n    );\n};\n\nexport const addSavedList = function (listID) {\n  state.savedLists.push(listID);\n  setLocalStorage();\n};\n\nexport const removeSavedList = function (listID) {\n  state.savedLists.splice(state.savedLists.indexOf(listID), 1);\n  setLocalStorage();\n};\n\nexport const addLogEntry = function (data) {\n  const logID = state.logEntries.length\n    ? Math.max(...state.logEntries.map((entry) => entry.logID)) + 1\n    : 1;\n  const entry = new LogEntry(...data, logID);\n  state.logEntries.unshift(entry);\n  entry.peaks.forEach((peak) => {\n    increaseListCounts(peak.id);\n    if (!state.completedPeaks.includes(peak.id)) {\n      state.completedPeaks.push(peak.id);\n    }\n  });\n  sortLogEntries();\n  setLocalStorage();\n};\n\nexport const removeLogEntry = function (logID) {\n  const remove = getLogEntry(logID);\n  state.logEntries.splice(state.logEntries.indexOf(remove), 1);\n  remove.peaks.forEach((peak) => {\n    decreaseListCounts(peak.id);\n  });\n  setLocalStorage();\n};\n\nexport const getLogEntry = function (logID) {\n  return state.logEntries.find((entry) => entry.logID === logID);\n};\n\nexport const getLogEntries = function () {\n  console.log(`Getting entries for ${state.currentLogSelect}`);\n  const listID = state.currentLogSelect;\n  return {\n    noEntries: state.logEntries.length ? false : true,\n    entries:\n      listID === \"all\"\n        ? state.logEntries\n        : state.logEntries.filter((entry) => entry.listID === listID),\n  };\n};\n\nexport const getTableData = function (listID) {\n  const list = getPeakList(listID);\n  sortPeakList(listID, state.currentTableSort);\n  const data = {\n    listID: list.listID,\n    title: list.title,\n    numCompleted: state.listCounts[listID],\n    saved: state.savedLists.includes(list.listID) ? true : false,\n    peakCount: list.peakCount,\n    peaks: list.peaks.map((peak, i) => {\n      let logMatch;\n      if (state.logEntries.length) {\n        logMatch = state.logEntries.find((entry) =>\n          entry.peaks.some((peakObj) => peakObj.id === peak.id)\n        );\n      }\n      return {\n        id: peak.id,\n        num: i + 1,\n        name: peak.name,\n        elevation: peak.elevation,\n        state: peak.state,\n        completed: logMatch ? true : false,\n        completedDate: logMatch ? logMatch.shortDate : false,\n      };\n    }),\n  };\n  return data;\n};\n\nexport const getPreviewData = function () {\n  const listArr = getPeakListsArr(state.currentPreviewView);\n  const data = listArr.map((list) => {\n    return {\n      listID: list.listID,\n      title: list.title,\n      saved: state.savedLists.includes(list.listID) ? true : false,\n      numCompleted: state.listCounts[list.listID],\n      peakCount: list.peakCount,\n    };\n  });\n  return { previewType: state.currentPreviewView, data };\n};\n\nexport const getMapData = function (listID) {\n  const list = getPeakList(listID);\n  return {\n    peaks: list.peaks.map((peak) => {\n      return {\n        id: peak.id,\n        name: peak.name,\n        lat: peak.lat,\n        long: peak.long,\n        completed: state.completedPeaks.includes(peak.id) ? true : false,\n        elevation: peak.elevation,\n      };\n    }),\n    center: list.center,\n    zoom: list.zoom,\n    listID: list.listID,\n  };\n};\n\nexport const getSelectData = function () {\n  return getPeakListsArr(\"all\").map((list) => {\n    return {\n      listID: list.listID,\n      title: list.title,\n    };\n  });\n};\n\nconst sortLogEntries = function () {\n  state.logEntries.sort((a, b) => new Date(b.date) - new Date(a.date));\n};\n\nconst increaseListCounts = function (peakID) {\n  peakListsArr.forEach((peakListObj) => {\n    if (!state.completedPeaks.includes(peakID)) {\n      if (peakListObj.peaks.some((peak) => peak.id === peakID)) {\n        state.listCounts[`${peakListObj.listID}`] += 1;\n      }\n    }\n  });\n};\n\nconst decreaseListCounts = function (peakID) {\n  if (\n    !state.logEntries\n      .flatMap((entry) => entry.peaks)\n      .some((peak) => peak.id === peakID)\n  ) {\n    state.completedPeaks.splice(state.completedPeaks.indexOf(peakID), 1);\n    peakListsArr\n      .filter((peaklistObj) =>\n        peaklistObj.peaks.some((peak) => peak.id === peakID)\n      )\n      .map((peakList) => peakList.listID)\n      .forEach((peakListID) => state.listCounts[peakListID]--);\n  }\n};\n\nconst setLocalStorage = function () {\n  localStorage.setItem(\"logEntries\", JSON.stringify(state.logEntries));\n  localStorage.setItem(\"completedPeaks\", JSON.stringify(state.completedPeaks));\n  localStorage.setItem(\"listCounts\", JSON.stringify(state.listCounts));\n  localStorage.setItem(\"savedLists\", JSON.stringify(state.savedLists));\n};\n\nconst getLocalStorage = function () {\n  if (localStorage.logEntries)\n    state.logEntries = JSON.parse(localStorage.getItem(\"logEntries\"));\n  if (localStorage.completedPeaks)\n    state.completedPeaks = JSON.parse(localStorage.getItem(\"completedPeaks\"));\n  if (localStorage.listCounts)\n    state.listCounts = JSON.parse(localStorage.getItem(\"listCounts\"));\n  if (localStorage.savedLists)\n    state.savedLists = JSON.parse(localStorage.getItem(\"savedLists\"));\n};\n\nconst initializeListCounts = function () {\n  peakListsArr.forEach((list) => {\n    if (!state.listCounts[`${list.listID}`])\n      state.listCounts[`${list.listID}`] = 0;\n  });\n};\n\nconst init = function () {\n  getLocalStorage();\n  initializeListCounts();\n  setLocalStorage();\n};\n\ninit();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"k72y2\")).toString();","import icons from \"url:../../img/sprite.svg\";\n\nclass LogView {\n  #data;\n  #noEntries;\n  #logEntryContainer = document.querySelector(\".container-log-entry\");\n  #logPreviewContainer = document.querySelector(\".container-log-preview\");\n  #noEntriesMessage =\n    this.#logPreviewContainer.querySelector(\".no-data__message\");\n  #btnDeleteWrapper = this.#logEntryContainer.querySelector(\n    \".heading-button-wrapper\"\n  );\n  #logEntriesPreviewEl = document.querySelector(\".log-entries-preview\");\n  #chooseListSelect = document.querySelector(\"#choose-list-log-preview\");\n  #logEntryEl = document.querySelector(\".log-entry\");\n  #logEntryLabelNumber = document.querySelector(\".log-entry__label-number\");\n  #logEntryHeading = document.querySelector(\".log-entry__heading\");\n  #btnAddEntry = document\n    .querySelector(\".container-log-preview\")\n    .querySelector(\".btn-add-entry\");\n  #noLogEntries = document.querySelector(\".no-log-entries\");\n\n  // PUBLIC METHODS\n\n  addHandlerAddEntry(handler) {\n    this.#btnAddEntry.addEventListener(\"click\", handler);\n  }\n\n  addHandlerShowEntry(handler) {\n    this.#logEntriesPreviewEl.addEventListener(\n      \"click\",\n      function (e) {\n        const clicked = e.target.closest(\".btn-view\");\n        if (!clicked) return;\n        const { logId, listId } = clicked.closest(\n          \".preview-list__entry\"\n        ).dataset;\n        handler(+logId, listId);\n      }.bind(this)\n    );\n  }\n\n  addHandlerDeleteEntryPreview(handler) {\n    this.#logEntriesPreviewEl.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".btn-delete-entry\");\n      if (!clicked) return;\n      if (confirm(\"Are you sure you want to delete this entry?\")) {\n        const { logId } = clicked.closest(\".preview-list__entry\").dataset;\n        handler(+logId);\n      }\n    });\n  }\n\n  addHandlerDeleteEntry(handler) {\n    this.#btnDeleteWrapper.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".btn-delete-entry\");\n      console.log(clicked);\n      if (!clicked) return;\n      if (confirm(\"Are you sure you want to delete this entry?\")) {\n        const { logId } = clicked.dataset;\n        handler(+logId);\n      }\n    });\n  }\n\n  addHandlerLogSelect(handler) {\n    this.#chooseListSelect.addEventListener(\"change\", function (e) {\n      const listID = e.target.value;\n      console.log(listID);\n      handler(listID);\n    });\n  }\n\n  initializeListSelect(data) {\n    this.#chooseListSelect.insertAdjacentHTML(\n      \"beforeend\",\n      data.map((list) => this.#generateSelectRowMarkup(list)).join(\"\")\n    );\n  }\n\n  renderLogPreview(data) {\n    this.#data = data.entries;\n    this.#noEntries = data.noEntries;\n    console.log(this.#data);\n    console.log(this.#noEntries);\n    this.#logEntriesPreviewEl.innerHTML = \"\";\n    if (this.#data.length) {\n      this.#noLogEntries.classList.add(\"hidden\");\n      this.#logEntriesPreviewEl.insertAdjacentHTML(\n        \"beforeend\",\n        this.#generatePreviewMarkup()\n      );\n    } else {\n      this.#showNoEntriesMessage();\n    }\n  }\n\n  renderLogEntry(entry) {\n    this.#logEntryEl.innerHTML = \"\";\n    this.#logEntryLabelNumber.textContent = `${entry.peaks.length} ${\n      entry.peaks.length > 1 ? \"Peaks\" : \"Peak\"\n    }`;\n    this.#logEntryHeading.textContent = `${entry.longDate}`;\n    this.#btnDeleteWrapper.innerHTML = this.#generateDeleteButtonMarkup(entry);\n    this.#logEntryEl.insertAdjacentHTML(\n      \"beforeend\",\n      this.#generateLogEntryMarkup(entry)\n    );\n  }\n\n  // PRIVATE METHODS\n\n  #generateLogEntryMarkup(entry) {\n    let peaksStr = \"\";\n    entry.peaks.forEach(\n      (peak) =>\n        (peaksStr += `<span class='log-entry__peak'>${\n          peak.name\n        } - ${peak.elevation.toLocaleString()} ft</span>`)\n    );\n    let ratingMarkup = \"\";\n    if (entry.rating) {\n      for (let i = 0; i < entry.rating; i++) {\n        ratingMarkup += `<svg class=\"btn-star__icon btn-star__icon--full\"><use href=\"${icons}#icon-star-solid\"></use></svg>`;\n      }\n      for (let i = 0; i < 5 - entry.rating; i++) {\n        ratingMarkup += `<svg class=\"btn-star__icon\"><use href=\"${icons}#icon-star\"></use></svg>`;\n      }\n    } else {\n      ratingMarkup = \"n/a\";\n    }\n    const markup = `\n      <span class=\"log-entry__label\">Peak List:</span>\n      <span>${entry.listTitle}</span>\n      <span class=\"log-entry__label\">Peaks:</span>\n      <div class=\"log-entry__peaks\">${peaksStr}</div>\n      <span class=\"log-entry__label\">Distance:</span>\n      <span>${entry.distance ? entry.distance + ` mi` : \"n/a\"}</span>\n      <span class=\"log-entry__label\">Elevation Gain:</span>\n      <span>${\n        entry.elevation ? entry.elevation.toLocaleString() + ` ft` : \"n/a\"\n      }</span>\n      <span class=\"log-entry__label\">Time:</span>\n      <span>${entry.time ? entry.time + ` hrs` : \"n/a\"}</span>\n      <span class=\"log-entry__label\">Avg Speed:</span>\n      <span>${entry.avgSpeed ? entry.avgSpeed + ` mi/hr` : \"n/a\"}</span>\n      <span class=\"log-entry__label\">Avg Elevation Gain:</span>\n      <span>${\n        entry.avgElevation\n          ? entry.avgElevation.toLocaleString() + ` ft/mi`\n          : \"n/a\"\n      }</span>\n      <span class=\"log-entry__label\">Rating:</span>\n      <span>${ratingMarkup}</span>\n      <span class=\"log-entry__label\">Notes:</span>\n      <span>${entry.notes ? entry.notes : \"n/a\"}</span>`;\n    return markup;\n  }\n\n  #generatePreviewMarkup() {\n    return this.#data\n      .map((entry) => this.#generateSinglePreviewMarkup(entry))\n      .join(\"\");\n  }\n\n  #generateSinglePreviewMarkup(entry) {\n    const markup = `\n    <li class=\"preview-list__entry\" data-log-id=\"${\n      entry.logID\n    }\" data-list-id=\"${entry.listID}\">\n      <button class='btn btn-icon btn-delete-entry'>\n        <svg class=\"btn-icon__icon\">\n          <use href=\"${icons}#icon-trash\"></use>\n        </svg>\n      </button>\n      <div class=\"preview-list__info\">\n        <h2 class=\"preview-list__label-primary\">\n          <strong>${entry.longDate} </strong> - ${entry.peaks.length} ${\n      entry.peaks.length > 1 ? \"Peaks\" : \"Peak\"\n    }\n        </h2>\n        <span>${entry.listTitle}</span>\n        <span class=\"preview-list__label-secondary\">${entry.mtnStr}</span>\n      </div>\n              \n              <button class=\"btn btn--green btn-view btn-view-log\">VIEW</button>\n            </li>`;\n    return markup;\n  }\n\n  #generateDeleteButtonMarkup(entry) {\n    console.log(entry);\n    const markup = `\n      <button class=\"btn btn-icon btn-delete-entry\" data-log-id='${entry.logID}'>\n        <svg class=\"btn-icon__icon--sm\">\n          <use href=\"${icons}#icon-trash\"></use>\n        </svg>\n      </button>\n      <span>Delete entry</span>`;\n    return markup;\n  }\n\n  #generateSelectRowMarkup(list) {\n    const markup = `<option value=\"${list.listID}\">${list.title}</option>`;\n    return markup;\n  }\n\n  #showNoEntriesMessage() {\n    const message = `\n    You haven't added any log entries ${\n      this.#noEntries ? \"\" : \"from this list\"\n    } yet. <br />\n    Click the button below to log your first entry!\n    `;\n    this.#noEntriesMessage.innerHTML = message;\n    this.#noLogEntries.classList.remove(\"hidden\");\n  }\n}\n\nexport default new LogView();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7RGJm\")).toString();","import icons from \"../../img/sprite.svg\";\n\nclass newEntryView {\n  #gridDate = document.querySelector(\".form-new-entry__date-grid\");\n  #gridPeakCheckboxes = document.querySelector(\n    \".form-new-entry__checkbox-grid\"\n  );\n  #gridStats = document.querySelector(\".form-new-entry__stats-grid\");\n  #statRows = [...document.querySelectorAll(\".form-new-entry__stat-row\")];\n  #statRowIcons = [...this.#gridStats.querySelectorAll(\".btn-icon__icon\")];\n  #statBtns = [...this.#gridStats.querySelectorAll(\".btn-add-stat\")];\n  #inputDate = document.querySelector(\"#date\");\n  #chooseListSelect = document.querySelector(\"#choose-list-new-entry\");\n  #inputElevation = document.querySelector(\"#elevation\");\n  #inputDistance = document.querySelector(\"#distance\");\n  #inputHours = document.querySelector(\"#hours\");\n  #inputMinutes = document.querySelector(\"#minutes\");\n  #inputNotes = document.querySelector(\"#notes\");\n  #wrapperStars = document.querySelector(\".form-new-entry__wrapper-stars\");\n  #allStarIcons = [...document.querySelectorAll(\".btn-star__icon\")];\n  #allStarButtons = [...document.querySelectorAll(\".btn-star\")];\n  #formNewEntry = document.querySelector(\"#form-new-entry\");\n  #btnClearForm = document.querySelector(\".btn-clear-form\");\n  #btnAddEntry = document.querySelector(\"#add-entry\");\n\n  constructor() {\n    this.#addHandlerToggleStat();\n    this.#addHandlerStarMouseover();\n    this.#addHandlerStarMouseout();\n    this.#addHandlerStarClick();\n  }\n\n  // PUBLIC METHODS\n\n  addHandlerClearForm(handler) {\n    this.#btnClearForm.addEventListener(\"click\", handler);\n  }\n\n  addHandlerDate(handler) {\n    this.#gridDate.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      const btn = e.target.closest(\".btn-date\");\n      if (!btn) return;\n      const date = btn.textContent.toLowerCase().trim();\n      handler(date);\n    });\n  }\n\n  addHandlerPeakListSelect(handler) {\n    this.#chooseListSelect.addEventListener(\n      \"change\",\n      function (e) {\n        const listID = e.target.value;\n        handler(listID);\n      }.bind(this)\n    );\n  }\n\n  addHandlerAddEntry(handler) {\n    this.#btnAddEntry.addEventListener(\n      \"click\",\n      function (e) {\n        e.preventDefault();\n        if (!this.#inputDate.value) {\n          alert(\"Please enter a date\");\n          return;\n        }\n\n        const peaks = this.#getCheckedPeaks();\n        if (peaks.length <= 0) {\n          alert(\"Choose at least one peak from a list\");\n          return;\n        }\n\n        const data = [\n          this.#inputDate.value,\n          peaks,\n          this.#chooseListSelect.value,\n          this.#chooseListSelect[this.#chooseListSelect.selectedIndex]\n            .textContent,\n          +this.#inputElevation.value,\n          +this.#inputDistance.value,\n          +this.#inputHours.value,\n          +this.#inputMinutes.value,\n          this.#inputNotes.value,\n          this.#getRating(),\n        ];\n        handler(data, this.#chooseListSelect.value);\n        this.clearForm();\n      }.bind(this)\n    );\n  }\n\n  changeDate(date) {\n    this.#inputDate.value = date;\n  }\n\n  clearForm() {\n    for (const starBtn of this.#allStarButtons) {\n      this.#clearStar(starBtn);\n      starBtn.dataset.filled = \"false\";\n    }\n    this.#gridPeakCheckboxes.innerHTML = \"\";\n    this.#gridPeakCheckboxes.classList.add(\"hidden\");\n    this.#statRowIcons.forEach(\n      (icon) => (icon.innerHTML = `<use href=\"${icons}#icon-add\"></use>`)\n    );\n    this.#statRows.forEach((row) => row.classList.add(\"invisible\"));\n    this.#formNewEntry.reset();\n  }\n\n  displayCheckboxes(displayArr, listID, checkedMtnID) {\n    this.#gridPeakCheckboxes.classList.remove(\"hidden\");\n    this.#gridPeakCheckboxes.innerHTML = \"\";\n    displayArr.forEach((peak) =>\n      this.#gridPeakCheckboxes.insertAdjacentHTML(\n        \"beforeend\",\n        `<input type=\"checkbox\" value=\"${peak.id}\"/><label\n            for=\"title\"\n            class=\"form__label--units\"\n            >${peak.name}\n          </label>`\n      )\n    );\n    if (checkedMtnID) {\n      this.#chooseListSelect.value = listID;\n      const checkbox = [\n        ...this.#gridPeakCheckboxes.querySelectorAll(\"input\"),\n      ].find((input) => +input.value === +checkedMtnID);\n      checkbox.checked = \"true\";\n    }\n  }\n\n  initializeListSelect(data) {\n    this.#chooseListSelect.insertAdjacentHTML(\n      \"beforeend\",\n      data.map((list) => this.#generateSelectRowMarkup(list)).join(\"\")\n    );\n  }\n\n  // PRIVATE METHODS\n\n  #addHandlerToggleStat() {\n    this.#gridStats.addEventListener(\"click\", this.#toggleStat.bind(this));\n  }\n\n  #toggleStat(e) {\n    e.preventDefault();\n    const clicked = e.target.closest(\".btn-add-stat\");\n    if (!clicked) return;\n    const icon = clicked.querySelector(\"use\");\n    const row = this.#statRows.find(\n      (row) => row.dataset.stat === clicked.dataset.stat\n    );\n    if (row.classList.contains(\"invisible\")) {\n      row.classList.remove(\"invisible\");\n      icon.setAttribute(\"href\", `${icons}#icon-remove`);\n    } else {\n      row.classList.add(\"invisible\");\n      icon.setAttribute(\"href\", `${icons}#icon-add`);\n    }\n  }\n\n  #addHandlerStarMouseover() {\n    this.#wrapperStars.addEventListener(\n      \"mouseover\",\n      this.#handleStarMouseOver.bind(this)\n    );\n  }\n\n  #addHandlerStarMouseout() {\n    this.#wrapperStars.addEventListener(\n      \"mouseout\",\n      this.#handleStarMouseOut.bind(this)\n    );\n  }\n\n  #addHandlerStarClick() {\n    this.#wrapperStars.addEventListener(\n      \"click\",\n      this.#handleStarClick.bind(this)\n    );\n  }\n\n  #handleStarMouseOver(e) {\n    const hovered = e.target.closest(\".btn-star\");\n    if (!hovered) return;\n    for (const starBtn of this.#allStarButtons) {\n      starBtn.dataset.num <= hovered.dataset.num\n        ? this.#fillStar(starBtn)\n        : this.#clearStar(starBtn);\n    }\n  }\n\n  #handleStarMouseOut() {\n    for (const starBtn of this.#allStarButtons) {\n      if (starBtn.dataset.filled === \"false\") {\n        this.#clearStar(starBtn);\n      } else {\n        this.#fillStar(starBtn);\n      }\n    }\n  }\n\n  #handleStarClick(e) {\n    e.preventDefault();\n    const clicked = e.target.closest(\".btn-star\");\n    if (!clicked) return;\n    for (const starBtn of this.#allStarButtons) {\n      if (starBtn.dataset.num <= clicked.dataset.num) {\n        this.#fillStar(starBtn);\n        starBtn.dataset.filled = \"true\";\n      } else {\n        this.#clearStar(starBtn);\n        starBtn.dataset.filled = \"false\";\n      }\n    }\n  }\n\n  #fillStar(starBtn) {\n    starBtn.querySelector(\"svg\").classList.add(\"btn-star__icon--full\");\n    starBtn\n      .querySelector(\"use\")\n      .setAttribute(\"href\", `${icons}#icon-star-solid`);\n  }\n\n  #clearStar(starBtn) {\n    starBtn.querySelector(\"svg\").classList.remove(\"btn-star__icon--full\");\n    starBtn.querySelector(\"use\").setAttribute(\"href\", `${icons}#icon-star`);\n  }\n\n  #getCheckedPeaks() {\n    const allCheckboxesArr = [\n      ...this.#gridPeakCheckboxes.querySelectorAll(\"input\"),\n    ];\n    const checkedPeaksIDArr = allCheckboxesArr\n      .filter((checkbox) => checkbox.checked)\n      .map((checkbox) => +checkbox.value);\n    return checkedPeaksIDArr;\n  }\n\n  #getRating() {\n    return +this.#allStarButtons.filter(\n      (star) => star.dataset.filled === \"true\"\n    ).length;\n  }\n\n  #generateSelectRowMarkup(list) {\n    const markup = `<option value=\"${list.listID}\">${list.title}</option>`;\n    return markup;\n  }\n}\n\nexport default new newEntryView();\n","class MainView {\n  #containerMain = document.querySelector(\".container-main\");\n  #allContainers = [...document.querySelectorAll(\".container\")];\n  #btnCloseContainer = document.querySelector(\".btn-close\");\n  #mainNavBtns = document.querySelectorAll(\".main-nav__btn\");\n  #mainNavList = document.querySelector(\".main-nav__list\");\n  #sidebarHidden = false;\n  #sidebar = document.querySelector(\".sidebar\");\n  #btnSidebar = document.querySelector(\".sidebar__btn\");\n  #btnSidebarIcon = document.querySelector(\".sidebar__btn--icon\");\n\n  constructor() {\n    this.#addHandlerSidebar();\n    this.#addHandlerEscapeKeydown();\n  }\n\n  // PUBLIC METHODS\n\n  addHandlerHideContainer(handler) {\n    this.#btnCloseContainer.addEventListener(\"click\", function () {\n      handler();\n    });\n  }\n\n  addHandlerBtnBack(handler) {\n    this.#containerMain.addEventListener(\"click\", function (e) {\n      const btn = e.target.closest(\".btn-back\");\n      if (!btn) return;\n      handler(btn.dataset.display);\n    });\n  }\n\n  addHandlerMainNav(handler) {\n    this.#mainNavList.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".main-nav__btn\");\n      if (!clicked) return;\n      const containerID = clicked.dataset.display;\n      handler(containerID);\n    });\n  }\n\n  showContainer(containerID) {\n    const containerObj = this.#allContainers.find((container) =>\n      container.classList.contains(`container-${containerID}`)\n    );\n    this.#allContainers.forEach((container) =>\n      container.classList.add(\"hidden\")\n    );\n    this.#containerMain.classList.remove(\"hidden\");\n    containerObj.classList.remove(\"hidden\");\n    this.#mainNavBtns.forEach((btn) => {\n      btn.classList.remove(\"main-nav__btn--active\");\n      btn.dataset.display === containerObj.dataset.navActive &&\n        btn.classList.add(\"main-nav__btn--active\");\n    });\n  }\n\n  hideContainer() {\n    this.#containerMain.classList.add(\"hidden\");\n    this.#allContainers.forEach((container) =>\n      container.classList.add(\"hidden\")\n    );\n    this.#mainNavBtns.forEach((btn) => {\n      btn.classList.remove(\"main-nav__btn--active\");\n      btn.dataset.display === \"map\" &&\n        btn.classList.add(\"main-nav__btn--active\");\n    });\n  }\n\n  // PRIVATE METHODS\n\n  #addHandlerSidebar() {\n    this.#btnSidebar.addEventListener(\n      \"click\",\n      function () {\n        this.#sidebarHidden = this.#sidebarHidden ? false : true;\n        this.#sidebar.style.marginLeft = `${\n          this.#sidebarHidden ? \"-17.8rem\" : \"0\"\n        }`;\n        this.#btnSidebarIcon.innerHTML = this.#sidebarHidden\n          ? \"chevron_right\"\n          : \"chevron_left\";\n      }.bind(this)\n    );\n  }\n\n  #addHandlerEscapeKeydown() {\n    document.addEventListener(\n      \"keydown\",\n      function (e) {\n        e.key === \"Escape\" &&\n          !this.#containerMain.classList.contains(\"hidden\") &&\n          this.closeMainContainer();\n      }.bind(this)\n    );\n  }\n}\n\nexport default new MainView();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"iPWdx\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8TcTG\")).toString();","import mtnIconRed from \"url:../../img/mtn-icon-red.png\";\nimport mtnIconGreen from \"url:../../img/mtn-icon-green.png\";\n\nclass MapView {\n  #map;\n  #markersArr = [];\n  #markersLayer;\n  #data;\n\n  // PUBLIC METHODS\n\n  loadMap(coords = [44.0444, -71.6684]) {\n    this.#map = new L.Map(\"map\", {\n      zoomControl: false,\n    }).setView(coords, 14);\n\n    L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 19,\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    L.control\n      .zoom({\n        position: \"bottomright\",\n      })\n      .addTo(this.#map);\n  }\n\n  plotListOnMap(data) {\n    this.#data = data;\n    this.clearMap();\n    this.#map.setView(this.#data.center, this.#data.zoom);\n    this.#createMarkerLayer();\n    this.#map.addLayer(this.#markersLayer);\n  }\n\n  clearMap() {\n    this.#markersLayer && this.#markersLayer.clearLayers();\n    this.#markersArr = [];\n  }\n\n  openPopup(mtnId) {\n    const marker = this.#markersArr.find(\n      (marker) => marker.options.id === +mtnId\n    );\n    marker.openPopup();\n  }\n\n  // PRIVATE METHODS\n\n  #createMarker(peak) {\n    const mtnIcon = L.icon({\n      iconUrl: `${peak.completed ? mtnIconGreen : mtnIconRed}`,\n      iconSize: [25, 20],\n    });\n    const marker = new L.Marker([peak.lat, peak.long], {\n      icon: mtnIcon,\n      id: peak.id,\n      riseOnHover: true,\n    });\n    marker.bindPopup(L.popup({})).setPopupContent(\n      `<div class='peak-popup' data-id=${peak.id}>\n        <span class='peak-popup__label-name'>${peak.name}</span>\n        <span class='peak-popup__label-elevation'>${peak.elevation} ft.</span>\n        <button class='btn btn-text btn-text-green btn-log-trip' data-mtn-id='${\n          peak.id\n        }' data-list-id='${this.#data.listID}'>LOG TRIP</button>\n      </div>`\n    );\n    marker.on(\"mouseover\", function () {\n      this.openPopup();\n    });\n    marker.on(\"click\", function () {\n      this.openPopup();\n    });\n    return marker;\n  }\n\n  #createMarkerLayer() {\n    this.#data.peaks.forEach((peak) =>\n      this.#markersArr.push(this.#createMarker(peak))\n    );\n    this.#markersLayer = L.layerGroup(this.#markersArr);\n  }\n}\n\nexport default new MapView();\n","import icons from \"../../img/sprite.svg\";\n\nclass PeakListsView {\n  #previewData;\n  #tableData;\n  #previewType;\n  #peakListsPreviewEl = document.querySelector(\".preview-peak-lists\");\n  #singleListContainer = document.querySelector(\".container-single-peak-list\");\n  #btnBack = this.#singleListContainer.querySelector(\".btn-back\");\n  #singleListHeading =\n    this.#singleListContainer.querySelector(\".heading-secondary\");\n  #singleListLabelNumber = this.#singleListContainer.querySelector(\n    \".peak-list__label-number\"\n  );\n  #progressBarWrapper = this.#singleListContainer.querySelector(\n    \".heading-progress-wrapper\"\n  );\n  #btnSaveListWrapper = this.#singleListContainer.querySelector(\n    \".heading-button-wrapper\"\n  );\n  #sortTableSelect = document.querySelector(\"#sort-table-select\");\n  #tableBody = document.querySelector(\".peak-list-table__body\");\n  #peakListBtnsWrapper = document.querySelector(\".preview-wrapper\");\n  #previewBtns = [...this.#peakListBtnsWrapper.querySelectorAll(\".btn-text\")];\n  #noSavedLists = document.querySelector(\".no-saved-lists\");\n\n  // PUBLIC METHODS\n\n  addHandlerTableRowHover(handler) {\n    this.#tableBody.addEventListener(\"mouseover\", function (e) {\n      const { mtnId } = e.target.closest(\".peak-list-table__row\").dataset;\n      handler(mtnId);\n    });\n  }\n\n  addHandlerLogTrip(handler) {\n    document.addEventListener(\n      \"click\",\n      function (e) {\n        const clicked = e.target.closest(\".btn-log-trip\");\n        if (!clicked) return;\n        const { listId, mtnId } = clicked.dataset;\n        handler(listId, mtnId);\n      }.bind(this)\n    );\n  }\n\n  addHandlerSavedListsPreview(handler) {\n    this.#peakListsPreviewEl.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".btn-save-peak-list\");\n      if (!clicked) return;\n      const { listId } = e.target.closest(\".preview-list__entry\").dataset;\n      handler(listId);\n    });\n  }\n\n  addHandlerSavedListsTable(handler) {\n    this.#btnSaveListWrapper.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".btn-save-peak-list\");\n      if (!clicked) return;\n      const listId = clicked.dataset.id;\n      handler(listId);\n    });\n  }\n\n  addHandlerPeakListView(handler) {\n    this.#peakListsPreviewEl.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".btn-view-list\");\n      if (!clicked) return;\n      const { listId } = e.target.closest(\".preview-list__entry\").dataset;\n      handler(listId);\n    });\n  }\n\n  addHandlerPeakListPreview(handler) {\n    this.#peakListBtnsWrapper.addEventListener(\n      \"click\",\n      function (e) {\n        const clicked = e.target.closest(\".btn-text\");\n        if (!clicked) return;\n        const { previewType } = clicked.dataset;\n        handler(previewType);\n      }.bind(this)\n    );\n  }\n\n  addHandlerSortTable(handler) {\n    this.#sortTableSelect.addEventListener(\n      \"change\",\n      function (e) {\n        const sortType = e.target.value;\n        const listID = this.#tableData.listID;\n        handler(listID, sortType);\n      }.bind(this)\n    );\n  }\n\n  renderPeakListsPreview(data) {\n    this.#previewData = data.data;\n    this.#previewType = data.previewType;\n    this.#setActivePreviewBtn(this.#previewType);\n    this.#peakListsPreviewEl.innerHTML = \"\";\n    if (this.#previewData.length) {\n      this.#noSavedLists.classList.add(\"hidden\");\n      this.#peakListsPreviewEl.insertAdjacentHTML(\n        \"beforeend\",\n        this.#generatePreviewMarkup(this.#previewData)\n      );\n    } else {\n      this.#noSavedLists.classList.remove(\"hidden\");\n    }\n  }\n\n  renderPeakListTable(data) {\n    this.#tableData = data;\n    console.log(this.#tableData);\n    this.#singleListHeading.innerHTML = `${this.#tableData.title}`;\n    this.#singleListLabelNumber.innerHTML = `${\n      this.#tableData.numCompleted\n    } of ${this.#tableData.peakCount} Peaks`;\n    this.#progressBarWrapper.innerHTML = `${this.#generateProgressBarMarkup(\n      this.#tableData\n    )}`;\n    this.#btnSaveListWrapper.innerHTML = this.#generateSaveButtonMarkup();\n    this.#tableBody.innerHTML = \"\";\n    this.#tableBody.insertAdjacentHTML(\n      \"beforeend\",\n      this.#generateTableMarkup()\n    );\n  }\n\n  // PRIVATE METHODS\n\n  #generateTableMarkup() {\n    return this.#tableData.peaks\n      .map((peak) => this.#generateTableRowMarkup(peak))\n      .join(\"\");\n  }\n\n  #generateTableRowMarkup(peak) {\n    const markup = `<tr class=\"peak-list-table__row ${\n      peak.completed ? \"peak-list-table__row--complete\" : \"\"\n    }\" data-mtn-id=\"${peak.id}\" data-list-id=\"${peak.id}\">\n        <td><strong>${peak.num}</strong></td>\n        <td style=\"text-align:left\">${peak.name}</td>\n        <td>${peak.state}</td>\n\n        <td>${peak.elevation.toLocaleString()}</td>\n        <td>${\n          peak.completed\n            ? `${peak.completedDate}`\n            : `<button class='btn btn-text btn-log-trip' data-mtn-id='${\n                peak.id\n              }' data-list-id='${this.#tableData.listID}'>LOG TRIP</button>`\n        }</td>\n      </tr>`;\n    return markup;\n  }\n\n  #generatePreviewMarkup() {\n    return this.#previewData\n      .map((list) => this.#generateSinglePreviewMarkup(list))\n      .join(\"\");\n  }\n\n  #generateSinglePreviewMarkup(list) {\n    const markup = `<li class=\"preview-list__entry\" data-list-id=\"${\n      list.listID\n    }\">\n      <button class=\"btn btn-icon btn-save-peak-list\" data-id='${list.listID}'>\n        <svg class=\"btn-icon__icon\">\n          <use href=\"${icons}#icon-${list.saved ? \"remove\" : \"add\"}\"></use>\n        </svg>\n      </button>\n      <div class=\"preview-list__info\">\n        <h2 class=\"preview-list__label-primary\"><strong>${\n          list.title\n        }</strong></h2>\n        <span class=\"preview-list__label-secondary\">${list.numCompleted} of ${\n      list.peakCount\n    } Peaks</span>\n        ${this.#generateProgressBarMarkup(list)}\n        <button class=\"btn btn--green btn-view btn-view-list\">VIEW</button>\n    </li>`;\n    return markup;\n  }\n\n  #generateProgressBarMarkup(list) {\n    const width = (list.numCompleted / list.peakCount) * 100;\n    const markup = `<div class='progress-bar'><div class='progress-bar__label'>${\n      Math.round(width * 10) / 10\n    }%</div><div class='progress-bar__progress' style=\"width:${width}%\"></div></div>\n      </div>`;\n    return markup;\n  }\n\n  #generateSaveButtonMarkup() {\n    const markup = `\n      <button class=\"btn btn-icon btn-save-peak-list\" data-id='${\n        this.#tableData.listID\n      }'>\n        <svg class=\"btn-icon__icon\">\n          <use href=\"${icons}#icon-${\n      this.#tableData.saved ? \"remove\" : \"add\"\n    }\"></use>\n        </svg>\n      </button>\n      <span>${\n        this.#tableData.saved ? \"Remove from\" : \"Add to\"\n      } my lists</span>`;\n    return markup;\n  }\n\n  #setActivePreviewBtn() {\n    this.#previewBtns.forEach((btn) =>\n      btn.classList.remove(\"btn-text--active\")\n    );\n    this.#previewBtns\n      .find((btn) => btn.dataset.previewType === this.#previewType)\n      .classList.add(\"btn-text--active\");\n  }\n}\n\nexport default new PeakListsView();\n","import * as model from \"./model.js\";\nimport logView from \"./views/logView.js\";\nimport newEntryView from \"./views/newEntryView.js\";\nimport mainView from \"./views/mainView.js\";\nimport mapView from \"./views/mapView.js\";\nimport peakListView from \"./views/peakListView.js\";\n\n/////////////////////////////////////////////////////////////////////////////////\n// MAIN VIEW\n\nconst controlBtnBack = function (containerID) {\n  mainView.showContainer(containerID);\n  if (containerID === \"all-peak-lists\") {\n    peakListView.renderPeakListsPreview(model.getPreviewData());\n  }\n  mapView.clearMap();\n};\n\nconst controlHideContainer = function () {\n  mainView.hideContainer();\n  newEntryView.clearForm();\n  mapView.clearMap();\n};\n\nconst controlMainNav = function (containerID) {\n  mapView.clearMap();\n  newEntryView.clearForm();\n  if (containerID === \"map\") {\n    mainView.hideContainer();\n    return;\n  }\n  mainView.showContainer(containerID);\n  if (containerID === \"log-preview\") {\n    logView.renderLogPreview(model.getLogEntries(\"all\"));\n  }\n  if (containerID === \"all-peak-lists\") {\n    peakListView.renderPeakListsPreview(model.getPreviewData());\n  }\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// MAP\n\nconst initializeMap = async function () {\n  try {\n    const pos = await model.getCoords();\n    const { latitude, longitude } = pos.coords;\n    mapView.loadMap([latitude, longitude]);\n  } catch {\n    mapView.loadMap();\n  }\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// PEAK LISTS\n\nconst controlPeakListTable = function (listID) {\n  mainView.showContainer(\"single-peak-list\");\n  peakListView.renderPeakListTable(model.getTableData(listID));\n  mapView.plotListOnMap(model.getMapData(listID));\n};\n\nconst controlPeakListPreview = function (previewType) {\n  model.setCurrentPreviewView(previewType);\n  peakListView.renderPeakListsPreview(model.getPreviewData());\n};\n\nconst controlLogTrip = function (listID, mtnID) {\n  mainView.showContainer(\"new-entry\");\n  newEntryView.displayCheckboxes(\n    model.getCheckboxDisplayArr(listID),\n    listID,\n    mtnID\n  );\n  mapView.plotListOnMap(model.getMapData(listID));\n};\n\nconst controlSavedListsPreview = function (listID) {\n  if (!model.state.savedLists.includes(listID)) {\n    model.addSavedList(listID);\n  } else {\n    model.removeSavedList(listID);\n  }\n  peakListView.renderPeakListsPreview(model.getPreviewData());\n};\n\nconst controlSavedListsTable = function (listID) {\n  console.log(listID);\n  if (!model.state.savedLists.includes(listID)) {\n    model.addSavedList(listID);\n  } else {\n    model.removeSavedList(listID);\n  }\n  peakListView.renderPeakListTable(model.getTableData(listID));\n};\n\nconst controlTableHover = function (mtnID) {\n  mapView.openPopup(mtnID);\n};\n\nconst controlSortTable = function (listID, sortType) {\n  model.setCurrentTableSort(sortType);\n  peakListView.renderPeakListTable(model.getTableData(listID));\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// TRIP LOG\n\nconst controlShowLogEntry = function (logID, listID) {\n  mainView.showContainer(\"log-entry\");\n  logView.renderLogEntry(model.getLogEntry(logID));\n  mapView.plotListOnMap(model.getMapData(listID));\n};\n\nconst controlDeleteLogEntry = function (logID) {\n  model.removeLogEntry(logID);\n  mainView.showContainer(\"log-preview\");\n  mapView.clearMap();\n  logView.renderLogPreview(model.getLogEntries());\n};\n\nconst controlLogAddEntry = function () {\n  mainView.showContainer(\"new-entry\");\n};\n\nconst controlLogSelect = function (listID) {\n  model.setCurrentLogSelect(listID);\n  logView.renderLogPreview(model.getLogEntries());\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// NEW ENTRY\n\nconst controlClearForm = function () {\n  newEntryView.clearForm();\n  mapView.clearMap();\n};\n\nconst controlFormAddEntry = function (formData, listID) {\n  model.addLogEntry(formData);\n  newEntryView.clearForm();\n  mapView.plotListOnMap(model.getMapData(listID));\n};\n\nconst controlNewEntryDate = function (date) {\n  newEntryView.changeDate(model.getDate(date));\n};\n\nconst controlPeakListSelect = function (listID) {\n  newEntryView.displayCheckboxes(model.getCheckboxDisplayArr(listID));\n  mapView.plotListOnMap(model.getMapData(listID));\n};\n\nconst init = function () {\n  initializeMap();\n  newEntryView.initializeListSelect(model.getSelectData());\n  newEntryView.addHandlerDate(controlNewEntryDate);\n  newEntryView.addHandlerPeakListSelect(controlPeakListSelect);\n  newEntryView.addHandlerAddEntry(controlFormAddEntry);\n  newEntryView.addHandlerClearForm(controlClearForm);\n  mainView.addHandlerHideContainer(controlHideContainer);\n  mainView.addHandlerMainNav(controlMainNav);\n  mainView.addHandlerBtnBack(controlBtnBack);\n  peakListView.addHandlerPeakListView(controlPeakListTable);\n  peakListView.addHandlerLogTrip(controlLogTrip);\n  peakListView.addHandlerSavedListsPreview(controlSavedListsPreview);\n  peakListView.addHandlerSavedListsTable(controlSavedListsTable);\n  peakListView.addHandlerPeakListPreview(controlPeakListPreview);\n  peakListView.addHandlerSortTable(controlSortTable);\n  peakListView.addHandlerTableRowHover(controlTableHover);\n  logView.initializeListSelect(model.getSelectData());\n  logView.addHandlerShowEntry(controlShowLogEntry);\n  logView.addHandlerDeleteEntryPreview(controlDeleteLogEntry);\n  logView.addHandlerDeleteEntry(controlDeleteLogEntry);\n  logView.addHandlerAddEntry(controlLogAddEntry);\n  logView.addHandlerLogSelect(controlLogSelect);\n};\n\ninit();\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$48ed222ad1402641$exports","$1c54660d8914672a$exports","$b96fb41ae694c3a9$exports","$c46e47f8479275d3$exports","$bf5b318995a17984$exports","$2d90cc7a78ab78a5$exports","$5122c08a5066d666$exports","$d6e4c6226fac3a9d$exports","$a30b12b0d9dde1ae$var$PeakList","constructor","data","this","title","listID","center","zoom","peakCount","peaks","$a30b12b0d9dde1ae$export$7ec75f2dccfbf183","$parcel$interopDefault","$a30b12b0d9dde1ae$var$uniquePeaks","Map","flatMap","peakList","map","peak","values","$a30b12b0d9dde1ae$export$b4e9e351ee5bd611","$a30b12b0d9dde1ae$export$fc28b19bbde4f054","forEach","set","name","elevation","sort","a","b","toLowerCase","localeCompare","$9d76df54ecc894c2$export$7b735fea22fb3db1","date","peakIDsArr","listTitle","distance","hours","min","notes","rating","logID","Date","peakID","push","get","init","mtnNames","mtnStr","slice","join","shortDate","Intl","DateTimeFormat","day","year","month","format","longDate","time","Math","round","avgSpeed","avgElevation","$0f1d4402dffacf5b$export$ca000e230c0caa3e","savedLists","logEntries","completedPeaks","listCounts","currentPreviewView","currentLogSelect","currentTableSort","$0f1d4402dffacf5b$var$getPeakList","find","list","$0f1d4402dffacf5b$var$getPeakListsArr","previewType","filter","includes","$0f1d4402dffacf5b$var$sortPeakList","sortType","$0f1d4402dffacf5b$export$427b684a6f25d171","listArr","firstHalf","ceil","secondHalf","displayArr","_","entries","$0f1d4402dffacf5b$export$6c3df0174020cea2","$0f1d4402dffacf5b$var$setLocalStorage","$0f1d4402dffacf5b$export$a9d160c95f392539","splice","indexOf","$0f1d4402dffacf5b$export$335df36763f4a7cc","entry","$0f1d4402dffacf5b$export$5e4d3c5b738eb64b","console","log","noEntries","$0f1d4402dffacf5b$export$a041a091ab6113c6","numCompleted","saved","logMatch","some","peakObj","num","state","completed","completedDate","$0f1d4402dffacf5b$export$18e1843897bcad8","$0f1d4402dffacf5b$export$6f46047ee61f45d3","lat","long","$0f1d4402dffacf5b$export$108710b19b854a6a","$0f1d4402dffacf5b$var$sortLogEntries","$0f1d4402dffacf5b$var$increaseListCounts","peakListObj","$0f1d4402dffacf5b$var$decreaseListCounts","peaklistObj","peakListID","localStorage","setItem","stringify","getItem","$c4d6a6f5fd11844a$exports","URL","resolve","import","meta","url","toString","$8ea54db9fb242c1c$export$2e2bcd8739ae039","logEntryContainer","document","querySelector","logPreviewContainer","noEntriesMessage","btnDeleteWrapper","logEntriesPreviewEl","chooseListSelect","logEntryEl","logEntryLabelNumber","logEntryHeading","btnAddEntry","noLogEntries","addHandlerAddEntry","handler","addEventListener","addHandlerShowEntry","e","clicked","target","closest","logId","listId","dataset","bind","addHandlerDeleteEntryPreview","confirm","addHandlerDeleteEntry","addHandlerLogSelect","value","initializeListSelect","insertAdjacentHTML","generateSelectRowMarkup","renderLogPreview","innerHTML","classList","add","generatePreviewMarkup","showNoEntriesMessage","renderLogEntry","textContent","generateDeleteButtonMarkup","generateLogEntryMarkup","peaksStr","toLocaleString","ratingMarkup","i1","generateSinglePreviewMarkup","entry1","entry2","message","remove","$b4f8f515098290ea$exports","$d166ed2563f0a62f$export$2e2bcd8739ae039","gridDate","gridPeakCheckboxes","gridStats","statRows","querySelectorAll","statRowIcons","statBtns","inputDate","inputElevation","inputDistance","inputHours","inputMinutes","inputNotes","wrapperStars","allStarIcons","allStarButtons","formNewEntry","btnClearForm","addHandlerToggleStat","addHandlerStarMouseover","addHandlerStarMouseout","addHandlerStarClick","addHandlerClearForm","addHandlerDate","preventDefault","btn","trim","addHandlerPeakListSelect","alert","getCheckedPeaks","selectedIndex","getRating","clearForm","changeDate","starBtn","clearStar","filled","icon","row","reset","displayCheckboxes","checkedMtnID","input","checked","toggleStat","stat","contains","setAttribute","handleStarMouseOver","handleStarMouseOut","handleStarClick","e1","hovered","fillStar","starBtn1","e2","clicked1","starBtn2","starBtn3","starBtn4","checkbox","star","$6fdf9156372b0124$export$2e2bcd8739ae039","containerMain","allContainers","btnCloseContainer","mainNavBtns","mainNavList","sidebarHidden","sidebar","btnSidebar","btnSidebarIcon","addHandlerSidebar","addHandlerEscapeKeydown","addHandlerHideContainer","addHandlerBtnBack","display","addHandlerMainNav","containerID","showContainer","containerObj","container","navActive","hideContainer","style","marginLeft","key","closeMainContainer","$5a77dfbe55474547$exports","$ef67a7a32827d3fa$exports","$716941e1f0265cb4$export$2e2bcd8739ae039","markersArr","markersLayer","loadMap","coords","L","zoomControl","setView","tileLayer","maxZoom","attribution","addTo","control","position","plotListOnMap","clearMap","createMarkerLayer","addLayer","clearLayers","openPopup","mtnId","marker","options","createMarker","mtnIcon","iconUrl","iconSize","Marker","riseOnHover","bindPopup","popup","setPopupContent","on","layerGroup","$1bcc6a30cf10e5c9$export$2e2bcd8739ae039","previewData","tableData","peakListsPreviewEl","singleListContainer","btnBack","singleListHeading","singleListLabelNumber","progressBarWrapper","btnSaveListWrapper","sortTableSelect","tableBody","peakListBtnsWrapper","previewBtns","noSavedLists","addHandlerTableRowHover","addHandlerLogTrip","addHandlerSavedListsPreview","addHandlerSavedListsTable","addHandlerPeakListView","addHandlerPeakListPreview","addHandlerSortTable","renderPeakListsPreview","setActivePreviewBtn","renderPeakListTable","generateProgressBarMarkup","generateSaveButtonMarkup","generateTableMarkup","generateTableRowMarkup","list1","width","$f50bd1f2915ed0f2$var$controlBtnBack","$f50bd1f2915ed0f2$var$controlHideContainer","$f50bd1f2915ed0f2$var$controlMainNav","$f50bd1f2915ed0f2$var$controlPeakListTable","$f50bd1f2915ed0f2$var$controlPeakListPreview","$0f1d4402dffacf5b$export$43b36a2f71ce749","$f50bd1f2915ed0f2$var$controlLogTrip","mtnID","$f50bd1f2915ed0f2$var$controlSavedListsPreview","$f50bd1f2915ed0f2$var$controlSavedListsTable","$f50bd1f2915ed0f2$var$controlTableHover","$f50bd1f2915ed0f2$var$controlSortTable","$0f1d4402dffacf5b$export$a6af2e4b5cac42e3","$f50bd1f2915ed0f2$var$controlShowLogEntry","$f50bd1f2915ed0f2$var$controlDeleteLogEntry","$0f1d4402dffacf5b$export$607e31f2b4813a7f","$f50bd1f2915ed0f2$var$controlLogAddEntry","$f50bd1f2915ed0f2$var$controlLogSelect","$0f1d4402dffacf5b$export$7453e94832db377f","$f50bd1f2915ed0f2$var$controlClearForm","$f50bd1f2915ed0f2$var$controlFormAddEntry","formData","max","unshift","$0f1d4402dffacf5b$export$f4cc72695e6df27a","$f50bd1f2915ed0f2$var$controlNewEntryDate","now","getTime","$0f1d4402dffacf5b$export$aa350b96d91cd94","$f50bd1f2915ed0f2$var$controlPeakListSelect","async","pos","Promise","reject","navigator","geolocation","getCurrentPosition","$0f1d4402dffacf5b$export$39e042fd83f1b62e","latitude","longitude","$f50bd1f2915ed0f2$var$initializeMap"],"version":3,"file":"index.2481262c.js.map"}