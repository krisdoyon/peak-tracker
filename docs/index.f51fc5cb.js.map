{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-8fab2fcb25f8cdcd.js","src/json/adk46.json","src/json/co14.json","src/json/me4k.json","src/json/ne100.json","src/json/ne4k.json","src/json/neHigh.json","src/json/nh4k.json","src/json/vt4k.json","src/json/usHigh.json","src/js/createPeakLists.js","src/js/logEntry.js","src/json/testData.json","src/js/views/modalView.js","src/js/model.js","node_modules/@parcel/runtime-js/lib/runtime-b54bd341dd7b02ac.js","src/js/views/view.js","src/js/views/logView.js","src/js/views/logPreviewView.js","src/js/views/logEntryView.js","src/js/views/newEntryView.js","src/js/views/mainView.js","node_modules/@parcel/runtime-js/lib/runtime-edbe808007557457.js","node_modules/@parcel/runtime-js/lib/runtime-ae31969aa877b0ad.js","node_modules/@parcel/runtime-js/lib/runtime-b673193cb34ae48c.js","src/js/views/mapView.js","src/js/views/peakListView.js","src/js/views/peakListPreviewView.js","src/js/views/peakListTableView.js","src/js/views/sidebarView.js","src/js/views/statsView.js","src/js/controller.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"dghd8\\\":\\\"index.f51fc5cb.js\\\",\\\"7RGJm\\\":\\\"sprite.f352a897.svg\\\",\\\"iPWdx\\\":\\\"mtn-icon-red.e90a5dc3.png\\\",\\\"8TcTG\\\":\\\"mtn-icon-green.47e0be93.png\\\",\\\"7TqKI\\\":\\\"marker-icon.3f7d3721.png\\\"}\"));","{\"title\":\"Adirondack High Peaks\",\"listID\":\"adk46\",\"peakCount\":46,\"peaks\":[{\"id\":973357,\"name\":\"Mt. Marcy\",\"lat\":44.112733,\"long\":-73.9237833,\"elevation\":5344,\"state\":\"NY\"},{\"id\":973340,\"name\":\"Algonquin Peak\",\"lat\":44.1436636,\"long\":-73.9865357,\"elevation\":5105,\"state\":\"NY\"},{\"id\":973353,\"name\":\"Mt. Haystack\",\"lat\":44.1056093,\"long\":-73.9004196,\"elevation\":4924,\"state\":\"NY\"},{\"id\":973360,\"name\":\"Mt. Skylight\",\"lat\":44.0994987,\"long\":-73.9306986,\"elevation\":4908,\"state\":\"NY\"},{\"id\":973364,\"name\":\"Whiteface Mountain\",\"lat\":44.3658804,\"long\":-73.9026456,\"elevation\":4816,\"state\":\"NY\"},{\"id\":973347,\"name\":\"Dix Mountain\",\"lat\":44.0822756,\"long\":-73.7862471,\"elevation\":4813,\"state\":\"NY\"},{\"id\":973351,\"name\":\"Gray Peak\",\"lat\":44.1114427,\"long\":-73.9348658,\"elevation\":4800,\"state\":\"NY\"},{\"id\":973355,\"name\":\"Iroquois Peak\",\"lat\":44.1369973,\"long\":-73.9982027,\"elevation\":4829,\"state\":\"NY\"},{\"id\":973341,\"name\":\"Basin Mountain\",\"lat\":44.1211639,\"long\":-73.8862527,\"elevation\":4852,\"state\":\"NY\"},{\"id\":973349,\"name\":\"Gothics\",\"lat\":44.1281079,\"long\":-73.8570849,\"elevation\":4724,\"state\":\"NY\"},{\"id\":947091,\"name\":\"Mt. Colden\",\"lat\":44.1269976,\"long\":-73.9598674,\"elevation\":4708,\"state\":\"NY\"},{\"id\":2611110,\"name\":\"Giant Mountain\",\"lat\":44.161165,\"long\":-73.720279,\"elevation\":4623,\"state\":\"NY\"},{\"id\":958617,\"name\":\"Nippletop\",\"lat\":44.0892202,\"long\":-73.8159708,\"elevation\":4554,\"state\":\"NY\"},{\"id\":964468,\"name\":\"Santanoni Peak\",\"lat\":44.0822811,\"long\":-74.1309855,\"elevation\":4596,\"state\":\"NY\"},{\"id\":962328,\"name\":\"Mt. Redfield\",\"lat\":44.094777,\"long\":-73.949866,\"elevation\":4603,\"state\":\"NY\"},{\"id\":971754,\"name\":\"Wright Peak\",\"lat\":44.1517187,\"long\":-73.9801468,\"elevation\":4564,\"state\":\"NY\"},{\"id\":959830,\"name\":\"Panther Peak\",\"lat\":44.0983915,\"long\":-74.132097,\"elevation\":4455,\"state\":\"NY\"},{\"id\":966981,\"name\":\"Table Top Mountain\",\"lat\":44.143663,\"long\":-73.9070876,\"elevation\":4295,\"state\":\"NY\"},{\"id\":2651608,\"name\":\"Rocky Peak\",\"lat\":44.1542177,\"long\":-73.7051718,\"elevation\":4403,\"state\":\"NY\"},{\"id\":971960,\"name\":\"Macomb Mountain\",\"lat\":44.0517211,\"long\":-73.7801349,\"elevation\":4396,\"state\":\"NY\"},{\"id\":953279,\"name\":\"Hough Peak\",\"lat\":44.0694981,\"long\":-73.7776352,\"elevation\":4393,\"state\":\"NY\"},{\"id\":964885,\"name\":\"Seward Mountain\",\"lat\":44.1597799,\"long\":-74.1993239,\"elevation\":4327,\"state\":\"NY\"},{\"id\":956573,\"name\":\"Mt. Marshall\",\"lat\":44.1275538,\"long\":-74.0118142,\"elevation\":4380,\"state\":\"NY\"},{\"id\":942362,\"name\":\"Allen Mountain\",\"lat\":44.0708892,\"long\":-73.9395871,\"elevation\":4321,\"state\":\"NY\"},{\"id\":943955,\"name\":\"Big Slide Mountain\",\"lat\":44.1822721,\"long\":-73.8704202,\"elevation\":4232,\"state\":\"NY\"},{\"id\":949720,\"name\":\"Esther Mountain\",\"lat\":44.3869916,\"long\":-73.8898673,\"elevation\":4232,\"state\":\"NY\"},{\"id\":968312,\"name\":\"Upper Wolfjaw Mountain\",\"lat\":44.1406072,\"long\":-73.8451402,\"elevation\":4190,\"state\":\"NY\"},{\"id\":956118,\"name\":\"Lower Wolfjaw Mountain\",\"lat\":44.1483845,\"long\":-73.8326399,\"elevation\":4190,\"state\":\"NY\"},{\"id\":966631,\"name\":\"Street Mountain\",\"lat\":44.1797741,\"long\":-74.0437616,\"elevation\":4022,\"state\":\"NY\"},{\"id\":960289,\"name\":\"Phelps Mountain\",\"lat\":44.1569957,\"long\":-73.9209775,\"elevation\":4137,\"state\":\"NY\"},{\"id\":948566,\"name\":\"Donaldson Mountain\",\"lat\":44.1539471,\"long\":-74.210991,\"elevation\":4062,\"state\":\"NY\"},{\"id\":964894,\"name\":\"Seymour Mountain\",\"lat\":44.1578347,\"long\":-74.1721003,\"elevation\":4055,\"state\":\"NY\"},{\"id\":964537,\"name\":\"Sawteeth\",\"lat\":44.1139417,\"long\":-73.8504175,\"elevation\":4114,\"state\":\"NY\"},{\"id\":965737,\"name\":\"South Dix\",\"lat\":44.060054,\"long\":-73.7743014,\"elevation\":4088,\"state\":\"NY\"},{\"id\":960994,\"name\":\"Porter Mountain\",\"lat\":44.2153262,\"long\":-73.8434754,\"elevation\":4058,\"state\":\"NY\"},{\"id\":947211,\"name\":\"Mt. Colvin\",\"lat\":44.0939424,\"long\":-73.8345829,\"elevation\":4049,\"state\":\"NY\"},{\"id\":949645,\"name\":\"Mt. Emmons\",\"lat\":44.1436698,\"long\":-74.2140464,\"elevation\":4022,\"state\":\"NY\"},{\"id\":949060,\"name\":\"Grace Peak\",\"lat\":44.0653314,\"long\":-73.7573564,\"elevation\":4006,\"state\":\"NY\"},{\"id\":944215,\"name\":\"Blake Peak\",\"lat\":44.081443,\"long\":-73.844583,\"elevation\":3976,\"state\":\"NY\"},{\"id\":946865,\"name\":\"Cliff Mountain\",\"lat\":44.1031102,\"long\":-73.9751452,\"elevation\":3940,\"state\":\"NY\"},{\"id\":959076,\"name\":\"Nye Mountain\",\"lat\":44.1931062,\"long\":-74.0240387,\"elevation\":3871,\"state\":\"NY\"},{\"id\":947539,\"name\":\"Couchsachraga Peak\",\"lat\":44.0956146,\"long\":-74.1601539,\"elevation\":3793,\"state\":\"NY\"},{\"id\":948403,\"name\":\"Dial Mountain\",\"lat\":44.1058859,\"long\":-73.7959703,\"elevation\":4020,\"state\":\"NY\"},{\"id\":970556,\"name\":\"Saddleback Mountain\",\"lat\":44.1264414,\"long\":-73.8748634,\"elevation\":4534,\"state\":\"NY\"},{\"id\":942572,\"name\":\"Armstrong Mountain\",\"lat\":44.1347741,\"long\":-73.8490291,\"elevation\":4360,\"state\":\"NY\"},{\"id\":945952,\"name\":\"Cascade Mountain\",\"lat\":44.2186594,\"long\":-73.860143,\"elevation\":4094,\"state\":\"NY\"}],\"description\":\"The Adirondack High Peaks (also known as the \\\"46ers\\\") are a collection of summits within Adirondack Park, the largest state park and largest publicly protected area in the lower 48 states. The original list was thought to contain all peaks over 4,000 ft. in elevation, but recent USGS surveys have shown four of the peaks slightly below this threshold.\"}","{\"title\":\"Colorado 14ers\",\"listID\":\"co14\",\"peakCount\":57,\"peaks\":[{\"id\":180381,\"name\":\"Mt. Elbert\",\"lat\":39.1178687,\"long\":-106.4452569,\"elevation\":14426,\"state\":\"CO\"},{\"id\":180119,\"name\":\"Mt. Massive\",\"lat\":39.1873242,\"long\":-106.4756085,\"elevation\":14419,\"state\":\"CO\"},{\"id\":189179,\"name\":\"Mt. Harvard\",\"lat\":38.9243492,\"long\":-106.3206758,\"elevation\":14406,\"state\":\"CO\"},{\"id\":192735,\"name\":\"Blanca Peak\",\"lat\":37.5775609,\"long\":-105.4855987,\"elevation\":14347,\"state\":\"CO\"},{\"id\":180393,\"name\":\"La Plata Peak\",\"lat\":39.0293628,\"long\":-106.4731089,\"elevation\":14334,\"state\":\"CO\"},{\"id\":188678,\"name\":\"Uncompahgre Peak\",\"lat\":38.0714529,\"long\":-107.4625289,\"elevation\":14308,\"state\":\"CO\"},{\"id\":181827,\"name\":\"Grays Peak\",\"lat\":39.6337372,\"long\":-105.8173702,\"elevation\":14275,\"state\":\"CO\"},{\"id\":179667,\"name\":\"Quandary Peak\",\"lat\":39.3972537,\"long\":-106.1063989,\"elevation\":14262,\"state\":\"CO\"},{\"id\":181829,\"name\":\"Torreys Peak\",\"lat\":39.6426923,\"long\":-105.8211948,\"elevation\":14265,\"state\":\"CO\"},{\"id\":189455,\"name\":\"Mt. Antero\",\"lat\":38.6740472,\"long\":-106.2462488,\"elevation\":14249,\"state\":\"CO\"},{\"id\":204979,\"name\":\"Longs Peak\",\"lat\":40.2548614,\"long\":-105.6162397,\"elevation\":14262,\"state\":\"CO\"},{\"id\":187461,\"name\":\"Mt. Wilson\",\"lat\":37.8392056,\"long\":-107.9915763,\"elevation\":14255,\"state\":\"CO\"},{\"id\":179957,\"name\":\"Mt. Cameron\",\"lat\":39.3463459,\"long\":-106.1189002,\"elevation\":14232,\"state\":\"CO\"},{\"id\":189451,\"name\":\"Mt. Shavano\",\"lat\":38.6189805,\"long\":-106.2392197,\"elevation\":14222,\"state\":\"CO\"},{\"id\":189170,\"name\":\"Mt. Belford\",\"lat\":38.9605767,\"long\":-106.3607818,\"elevation\":14170,\"state\":\"CO\"},{\"id\":189458,\"name\":\"Mt. Princeton\",\"lat\":38.7491503,\"long\":-106.2424463,\"elevation\":14196,\"state\":\"CO\"},{\"id\":189198,\"name\":\"Mt. Yale\",\"lat\":38.8441725,\"long\":-106.3139015,\"elevation\":14193,\"state\":\"CO\"},{\"id\":203951,\"name\":\"Crestone Needle\",\"lat\":37.9646991,\"long\":-105.5767188,\"elevation\":14166,\"state\":\"CO\"},{\"id\":179961,\"name\":\"Mt. Bross\",\"lat\":39.3349948,\"long\":-106.1071665,\"elevation\":14176,\"state\":\"CO\"},{\"id\":176576,\"name\":\"El Diente Peak\",\"lat\":37.8394323,\"long\":-108.0053368,\"elevation\":14140,\"state\":\"CO\"},{\"id\":204778,\"name\":\"Kit Carson Mountain\",\"lat\":37.9796989,\"long\":-105.6026169,\"elevation\":14186,\"state\":\"CO\"},{\"id\":189171,\"name\":\"Mt. Oxford\",\"lat\":38.9647934,\"long\":-106.3387735,\"elevation\":14140,\"state\":\"CO\"},{\"id\":203948,\"name\":\"Tabeguache Peak\",\"lat\":38.6256209,\"long\":-106.2506089,\"elevation\":14114,\"state\":\"CO\"},{\"id\":196432,\"name\":\"Mt. Sneffels\",\"lat\":38.0038447,\"long\":-107.7922734,\"elevation\":14150,\"state\":\"CO\"},{\"id\":204685,\"name\":\"Mt. Democrat\",\"lat\":39.3394723,\"long\":-106.1398604,\"elevation\":14144,\"state\":\"CO\"},{\"id\":175209,\"name\":\"Capitol Peak\",\"lat\":39.1501588,\"long\":-107.0827488,\"elevation\":14117,\"state\":\"CO\"},{\"id\":204770,\"name\":\"Pikes Peak\",\"lat\":38.8405839,\"long\":-105.0449035,\"elevation\":14114,\"state\":\"CO\"},{\"id\":175555,\"name\":\"Snowmass Mountain\",\"lat\":39.1186541,\"long\":-107.0664035,\"elevation\":14107,\"state\":\"CO\"},{\"id\":187990,\"name\":\"Windom Peak\",\"lat\":37.621313,\"long\":-107.5917613,\"elevation\":14084,\"state\":\"CO\"},{\"id\":187988,\"name\":\"Mt. Eolus\",\"lat\":37.6216871,\"long\":-107.6225967,\"elevation\":14088,\"state\":\"CO\"},{\"id\":196427,\"name\":\"Challenger Point\",\"lat\":37.9804151,\"long\":-105.6066013,\"elevation\":14091,\"state\":\"CO\"},{\"id\":203886,\"name\":\"Mt. Columbia\",\"lat\":38.9038441,\"long\":-106.2974478,\"elevation\":14055,\"state\":\"CO\"},{\"id\":189167,\"name\":\"Missouri Mountain\",\"lat\":38.9476104,\"long\":-106.3785409,\"elevation\":14062,\"state\":\"CO\"},{\"id\":192424,\"name\":\"Humboldt Peak\",\"lat\":37.9761388,\"long\":-105.5550716,\"elevation\":14062,\"state\":\"CO\"},{\"id\":182467,\"name\":\"Mt. Bierstadt\",\"lat\":39.5826432,\"long\":-105.6687551,\"elevation\":14058,\"state\":\"CO\"},{\"id\":187404,\"name\":\"Handies Peak\",\"lat\":37.9129617,\"long\":-107.5044497,\"elevation\":14048,\"state\":\"CO\"},{\"id\":192733,\"name\":\"Ellingwood Point\",\"lat\":37.5824644,\"long\":-105.4926087,\"elevation\":14062,\"state\":\"CO\"},{\"id\":192730,\"name\":\"Mt. Lindsey\",\"lat\":37.583803,\"long\":-105.4446957,\"elevation\":14062,\"state\":\"CO\"},{\"id\":193131,\"name\":\"Culebra Peak\",\"lat\":37.1222185,\"long\":-105.1857672,\"elevation\":14039,\"state\":\"CO\"},{\"id\":180207,\"name\":\"Mt. Sherman\",\"lat\":39.2251336,\"long\":-106.1699259,\"elevation\":14019,\"state\":\"CO\"},{\"id\":203320,\"name\":\"North Eolus\",\"lat\":37.6254409,\"long\":-107.6210325,\"elevation\":14058,\"state\":\"CO\"},{\"id\":204780,\"name\":\"Little Bear Peak\",\"lat\":37.5665804,\"long\":-105.4972025,\"elevation\":14035,\"state\":\"CO\"},{\"id\":187423,\"name\":\"Redcloud Peak\",\"lat\":37.9409934,\"long\":-107.4217338,\"elevation\":14039,\"state\":\"CO\"},{\"id\":180300,\"name\":\"Conundrum Peak\",\"lat\":39.0144457,\"long\":-106.86364,\"elevation\":14032,\"state\":\"CO\"},{\"id\":190463,\"name\":\"San Luis Peak\",\"lat\":37.9867825,\"long\":-106.9312952,\"elevation\":14016,\"state\":\"CO\"},{\"id\":180264,\"name\":\"North Maroon Peak\",\"lat\":39.076094,\"long\":-106.9870852,\"elevation\":14016,\"state\":\"CO\"},{\"id\":188661,\"name\":\"Wetterhorn Peak\",\"lat\":38.0606119,\"long\":-107.5108819,\"elevation\":13989,\"state\":\"CO\"},{\"id\":187455,\"name\":\"Wilson Peak\",\"lat\":37.8602995,\"long\":-107.9846517,\"elevation\":14025,\"state\":\"CO\"},{\"id\":179522,\"name\":\"Mt. of the Holy Cross\",\"lat\":39.4666238,\"long\":-106.481692,\"elevation\":13976,\"state\":\"CO\"},{\"id\":189155,\"name\":\"Huron Peak\",\"lat\":38.9455489,\"long\":-106.4381146,\"elevation\":14012,\"state\":\"CO\"},{\"id\":204748,\"name\":\"Sunshine Peak\",\"lat\":37.9227181,\"long\":-107.4255595,\"elevation\":14012,\"state\":\"CO\"},{\"id\":179956,\"name\":\"Mt. Lincoln\",\"lat\":39.351504,\"long\":-106.1113773,\"elevation\":14285,\"state\":\"CO\"},{\"id\":180301,\"name\":\"Castle Peak\",\"lat\":39.0096902,\"long\":-106.8612901,\"elevation\":14258,\"state\":\"CO\"},{\"id\":204716,\"name\":\"Mt. Evans\",\"lat\":39.5881224,\"long\":-105.6437272,\"elevation\":14235,\"state\":\"CO\"},{\"id\":180276,\"name\":\"Maroon Peak\",\"lat\":39.0706997,\"long\":-106.9888794,\"elevation\":14144,\"state\":\"CO\"},{\"id\":187843,\"name\":\"Sunlight Peak\",\"lat\":37.6272835,\"long\":-107.595797,\"elevation\":14055,\"state\":\"CO\"},{\"id\":180265,\"name\":\"Pyramid Peak\",\"lat\":39.0717385,\"long\":-106.9499676,\"elevation\":13993,\"state\":\"CO\"}],\"description\":\"The Colorado Fourteeners (14ers) are a collection of all summits over 14,000 ft. in elevation with at least 300 ft of topographic prominence across seven mountain ranges within the state of Colorado. Colorado is home to more fourteeners than any other state in the US. The tallest peak, Mt. Elbert, is the second tallest mountain in the lower 48 states.\"}","{\"title\":\"Maine 4,000 Footers\",\"listID\":\"me4k\",\"peakCount\":14,\"peaks\":[{\"id\":561737,\"name\":\"Mt. Katahdin (Baxter Peak)\",\"lat\":45.9042845,\"long\":-68.9213562,\"elevation\":5259,\"state\":\"ME\"},{\"id\":567535,\"name\":\"Mt. Katahdin (Hamlin Peak)\",\"lat\":45.92416,\"long\":-68.92767,\"elevation\":4757,\"state\":\"ME\"},{\"id\":564525,\"name\":\"Crocker Mountain\",\"lat\":45.04712,\"long\":-70.38273,\"elevation\":4226,\"state\":\"ME\"},{\"id\":572729,\"name\":\"Old Speck Mountain\",\"lat\":44.57092,\"long\":-70.95365,\"elevation\":4183,\"state\":\"ME\"},{\"id\":572313,\"name\":\"North Brother\",\"lat\":45.95716,\"long\":-68.98544,\"elevation\":4140,\"state\":\"ME\"},{\"id\":572033,\"name\":\"Bigelow Mountain (Avery Peak)\",\"lat\":45.14664,\"long\":-70.27585,\"elevation\":4068,\"state\":\"ME\"},{\"id\":561068,\"name\":\"Mt. Abraham\",\"lat\":44.9722782,\"long\":-70.3259007,\"elevation\":4032,\"state\":\"ME\"},{\"id\":581982,\"name\":\"South Crocker Mountain\",\"lat\":45.03619,\"long\":-70.37607,\"elevation\":4042,\"state\":\"ME\"},{\"id\":576826,\"name\":\"Saddleback Horn\",\"lat\":44.95119,\"long\":-70.48706,\"elevation\":3999,\"state\":\"ME\"},{\"id\":578873,\"name\":\"Mt. Redington\",\"lat\":45.02499,\"long\":-70.3887,\"elevation\":3999,\"state\":\"ME\"},{\"id\":561033,\"name\":\"Spaulding Mountain\",\"lat\":45.0028335,\"long\":-70.333401,\"elevation\":4009,\"state\":\"ME\"},{\"id\":576507,\"name\":\"Sugarloaf Mountain\",\"lat\":45.03169,\"long\":-70.31333,\"elevation\":4226,\"state\":\"ME\"},{\"id\":578186,\"name\":\"Bigelow Mountain (West Peak)\",\"lat\":45.14676,\"long\":-70.28835,\"elevation\":4131,\"state\":\"ME\"},{\"id\":574668,\"name\":\"Saddleback Mountain\",\"lat\":44.93641,\"long\":-70.50461,\"elevation\":4117,\"state\":\"ME\"}],\"description\":\"The Maine 4,000 Footers are a collection of summits over 4,000 ft. in elevation with at least 200 ft of topographic prominence across four mountain ranges within the state of Maine.The tallest mountain, Mt. Katahdin (Baxter Peak), is the Northern Terminus of the 2,000+ mile Appalachian Trail and the third tallest, Sugarloaf, is a popular ski mountain.\"}","{\"title\":\"New England 100 Highest\",\"listID\":\"ne100\",\"peakCount\":100,\"peaks\":[{\"id\":871352,\"name\":\"Mt. Washington\",\"lat\":44.2705781,\"long\":-71.3033287,\"elevation\":6273,\"state\":\"NH\"},{\"id\":871380,\"name\":\"Mt. Adams\",\"lat\":44.3206546,\"long\":-71.2915306,\"elevation\":5791,\"state\":\"NH\"},{\"id\":872101,\"name\":\"Mt. Jefferson\",\"lat\":44.304315,\"long\":-71.3166955,\"elevation\":5699,\"state\":\"NH\"},{\"id\":872313,\"name\":\"Mt. Monroe\",\"lat\":44.2552125,\"long\":-71.3214183,\"elevation\":5351,\"state\":\"NH\"},{\"id\":872247,\"name\":\"Mt. Madison\",\"lat\":44.3288173,\"long\":-71.2767796,\"elevation\":5351,\"state\":\"NH\"},{\"id\":872150,\"name\":\"Mt. Lafayette\",\"lat\":44.1608182,\"long\":-71.6444575,\"elevation\":5236,\"state\":\"NH\"},{\"id\":872176,\"name\":\"Mt. Lincoln\",\"lat\":44.1489451,\"long\":-71.6445258,\"elevation\":5085,\"state\":\"NH\"},{\"id\":872710,\"name\":\"South Twin Mountain\",\"lat\":44.187556,\"long\":-71.5548018,\"elevation\":4888,\"state\":\"NH\"},{\"id\":871629,\"name\":\"Carter Dome\",\"lat\":44.2673401,\"long\":-71.1792622,\"elevation\":4826,\"state\":\"NH\"},{\"id\":872324,\"name\":\"Mt. Moosilauke\",\"lat\":44.024502,\"long\":-71.8309164,\"elevation\":4813,\"state\":\"NH\"},{\"id\":871851,\"name\":\"Mt. Eisenhower\",\"lat\":44.2407341,\"long\":-71.3501812,\"elevation\":4757,\"state\":\"NH\"},{\"id\":872408,\"name\":\"North Twin Mountain\",\"lat\":44.2025557,\"long\":-71.5578576,\"elevation\":4751,\"state\":\"NH\"},{\"id\":871628,\"name\":\"Mt. Carrigain\",\"lat\":44.0936537,\"long\":-71.4466959,\"elevation\":4682,\"state\":\"NH\"},{\"id\":871556,\"name\":\"Mt. Bond\",\"lat\":44.1528345,\"long\":-71.5311895,\"elevation\":4685,\"state\":\"NH\"},{\"id\":872288,\"name\":\"Middle Carter Mountain\",\"lat\":44.3031109,\"long\":-71.1678106,\"elevation\":4603,\"state\":\"NH\"},{\"id\":1,\"name\":\"West Bond Mountain\",\"lat\":44.1547633,\"long\":-71.5436295,\"elevation\":4540,\"state\":\"NH\"},{\"id\":871925,\"name\":\"Mt. Garfield\",\"lat\":44.1872617,\"long\":-71.6106785,\"elevation\":4495,\"state\":\"NH\"},{\"id\":872169,\"name\":\"Mt. Liberty\",\"lat\":44.1158901,\"long\":-71.6420251,\"elevation\":4439,\"state\":\"NH\"},{\"id\":872698,\"name\":\"South Carter Mountain\",\"lat\":44.2897779,\"long\":-71.176635,\"elevation\":4419,\"state\":\"NH\"},{\"id\":872940,\"name\":\"Wildcat Mountain (A peak)\",\"lat\":44.2595144,\"long\":-71.201848,\"elevation\":4423,\"state\":\"NH\"},{\"id\":872006,\"name\":\"Mt. Hancock\",\"lat\":44.0836076,\"long\":-71.4934302,\"elevation\":4409,\"state\":\"NH\"},{\"id\":872707,\"name\":\"Kinsman Mountain (South Peak)\",\"lat\":44.1228429,\"long\":-71.7367508,\"elevation\":4331,\"state\":\"NH\"},{\"id\":873014,\"name\":\"Mt. Field\",\"lat\":44.196137,\"long\":-71.4331049,\"elevation\":4311,\"state\":\"NH\"},{\"id\":872440,\"name\":\"Mt. Osceola\",\"lat\":44.0014482,\"long\":-71.5359097,\"elevation\":4314,\"state\":\"NH\"},{\"id\":871894,\"name\":\"Mt. Flume\",\"lat\":44.1089459,\"long\":-71.6278579,\"elevation\":4318,\"state\":\"NH\"},{\"id\":872495,\"name\":\"Mt. Pierce\",\"lat\":44.2265226,\"long\":-71.3659732,\"elevation\":4304,\"state\":\"NH\"},{\"id\":872952,\"name\":\"Mt. Willey\",\"lat\":44.1835296,\"long\":-71.4207354,\"elevation\":4268,\"state\":\"NH\"},{\"id\":7,\"name\":\"Bondcliff\",\"lat\":44.1405773,\"long\":-71.5409195,\"elevation\":4265,\"state\":\"NH\"},{\"id\":872833,\"name\":\"Mt. Tripyramid\",\"lat\":43.9731659,\"long\":-71.4427801,\"elevation\":4163,\"state\":\"NH\"},{\"id\":865897,\"name\":\"Mt. Cabot\",\"lat\":44.5060061,\"long\":-71.4144768,\"elevation\":4163,\"state\":\"NH\"},{\"id\":871835,\"name\":\"Mt. Osceola (East Peak)\",\"lat\":44.0061704,\"long\":-71.5206316,\"elevation\":4134,\"state\":\"NH\"},{\"id\":872294,\"name\":\"Mt. Tripyramid (Middle Peak)\",\"lat\":43.9646744,\"long\":-71.4400968,\"elevation\":4114,\"state\":\"NH\"},{\"id\":873192,\"name\":\"Cannon Mountain\",\"lat\":44.156614,\"long\":-71.6988025,\"elevation\":4085,\"state\":\"NH\"},{\"id\":871992,\"name\":\"Mt. Hale\",\"lat\":44.2217224,\"long\":-71.5120232,\"elevation\":4062,\"state\":\"NH\"},{\"id\":872093,\"name\":\"Mt. Jackson\",\"lat\":44.2032358,\"long\":-71.3754007,\"elevation\":4042,\"state\":\"NH\"},{\"id\":872824,\"name\":\"Mt. Tom\",\"lat\":44.2105188,\"long\":-71.4460606,\"elevation\":4042,\"state\":\"NH\"},{\"id\":6,\"name\":\"Wildcat Mountain (D peak)\",\"lat\":44.2494098,\"long\":-71.2235995,\"elevation\":4062,\"state\":\"NH\"},{\"id\":872330,\"name\":\"Mt. Moriah\",\"lat\":44.3406387,\"long\":-71.1318489,\"elevation\":4029,\"state\":\"NH\"},{\"id\":872460,\"name\":\"Mt. Passaconaway\",\"lat\":43.9547374,\"long\":-71.3808824,\"elevation\":4045,\"state\":\"NH\"},{\"id\":873045,\"name\":\"Galehead Mountain\",\"lat\":44.1848105,\"long\":-71.5733908,\"elevation\":4016,\"state\":\"NH\"},{\"id\":872920,\"name\":\"Mt. Whiteface\",\"lat\":43.9339506,\"long\":-71.4059066,\"elevation\":3993,\"state\":\"NH\"},{\"id\":870689,\"name\":\"Mt. Waumbek\",\"lat\":44.4328282,\"long\":-71.4170236,\"elevation\":3996,\"state\":\"NH\"},{\"id\":872086,\"name\":\"Mt. Isolation\",\"lat\":44.2147796,\"long\":-71.3092406,\"elevation\":4003,\"state\":\"NH\"},{\"id\":872778,\"name\":\"Mt. Tecumseh\",\"lat\":43.9665408,\"long\":-71.5566086,\"elevation\":4009,\"state\":\"NH\"},{\"id\":2,\"name\":\"Mt. Hancock (South Peak)\",\"lat\":44.0732711,\"long\":-71.4869445,\"elevation\":4318,\"state\":\"NH\"},{\"id\":3,\"name\":\"Kinsman Mountain (North Peak)\",\"lat\":44.1333547,\"long\":-71.7368148,\"elevation\":4293,\"state\":\"NH\"},{\"id\":4,\"name\":\"Mt. Zealand\",\"lat\":44.1800207,\"long\":-71.5215792,\"elevation\":4260,\"state\":\"NH\"},{\"id\":5,\"name\":\"Owls Head\",\"lat\":44.1443341,\"long\":-71.6051095,\"elevation\":4025,\"state\":\"NH\"},{\"id\":561737,\"name\":\"Mt. Katahdin (Baxter Peak)\",\"lat\":45.9042845,\"long\":-68.9213562,\"elevation\":5259,\"state\":\"ME\"},{\"id\":567535,\"name\":\"Mt. Katahdin (Hamlin Peak)\",\"lat\":45.92416,\"long\":-68.92767,\"elevation\":4757,\"state\":\"ME\"},{\"id\":564525,\"name\":\"Crocker Mountain\",\"lat\":45.04712,\"long\":-70.38273,\"elevation\":4226,\"state\":\"ME\"},{\"id\":572729,\"name\":\"Old Speck Mountain\",\"lat\":44.57092,\"long\":-70.95365,\"elevation\":4183,\"state\":\"ME\"},{\"id\":572313,\"name\":\"North Brother\",\"lat\":45.95716,\"long\":-68.98544,\"elevation\":4140,\"state\":\"ME\"},{\"id\":572033,\"name\":\"Bigelow Mountain (Avery Peak)\",\"lat\":45.14664,\"long\":-70.27585,\"elevation\":4068,\"state\":\"ME\"},{\"id\":561068,\"name\":\"Mt. Abraham\",\"lat\":44.9722782,\"long\":-70.3259007,\"elevation\":4032,\"state\":\"ME\"},{\"id\":581982,\"name\":\"South Crocker Mountain\",\"lat\":45.03619,\"long\":-70.37607,\"elevation\":4042,\"state\":\"ME\"},{\"id\":576826,\"name\":\"Saddleback Horn\",\"lat\":44.95119,\"long\":-70.48706,\"elevation\":3999,\"state\":\"ME\"},{\"id\":578873,\"name\":\"Mt. Redington\",\"lat\":45.02499,\"long\":-70.3887,\"elevation\":3999,\"state\":\"ME\"},{\"id\":561033,\"name\":\"Spaulding Mountain\",\"lat\":45.0028335,\"long\":-70.333401,\"elevation\":4009,\"state\":\"ME\"},{\"id\":576507,\"name\":\"Sugarloaf Mountain\",\"lat\":45.03169,\"long\":-70.31333,\"elevation\":4226,\"state\":\"ME\"},{\"id\":578186,\"name\":\"Bigelow Mountain (West Peak)\",\"lat\":45.14676,\"long\":-70.28835,\"elevation\":4131,\"state\":\"ME\"},{\"id\":574668,\"name\":\"Saddleback Mountain\",\"lat\":44.93641,\"long\":-70.50461,\"elevation\":4117,\"state\":\"ME\"},{\"id\":1461774,\"name\":\"Mt. Mansfield\",\"lat\":44.5436627,\"long\":-72.8142903,\"elevation\":4383,\"state\":\"VT\"},{\"id\":1458086,\"name\":\"Killington Peak\",\"lat\":43.6045042,\"long\":-72.8201012,\"elevation\":4226,\"state\":\"VT\"},{\"id\":1456724,\"name\":\"Camels Hump\",\"lat\":44.3195001,\"long\":-72.8862309,\"elevation\":4071,\"state\":\"VT\"},{\"id\":1460843,\"name\":\"Mt. Ellen\",\"lat\":44.16005,\"long\":-72.9288358,\"elevation\":4078,\"state\":\"VT\"},{\"id\":1460513,\"name\":\"Mt. Abraham\",\"lat\":44.1204328,\"long\":-72.9360992,\"elevation\":4012,\"state\":\"VT\"},{\"id\":872622,\"name\":\"Sandwich Mountain\",\"lat\":43.9000705,\"long\":-71.4981311,\"elevation\":3983,\"state\":\"NH\"},{\"id\":870370,\"name\":\"The Bulge\",\"lat\":44.5146604,\"long\":-71.4082607,\"elevation\":3937,\"state\":\"NH\"},{\"id\":872374,\"name\":\"Mt. Nancy\",\"lat\":44.1225582,\"long\":-71.4047974,\"elevation\":3894,\"state\":\"NH\"},{\"id\":870384,\"name\":\"The Horn\",\"lat\":44.5180243,\"long\":-71.4000978,\"elevation\":3911,\"state\":\"NH\"},{\"id\":870718,\"name\":\"Mt. Weeks\",\"lat\":44.4616068,\"long\":-71.3818967,\"elevation\":3901,\"state\":\"NH\"},{\"id\":872855,\"name\":\"Vose Spur\",\"lat\":44.1030664,\"long\":-71.4346527,\"elevation\":3848,\"state\":\"NH\"},{\"id\":872798,\"name\":\"East Sleeper\",\"lat\":43.9542735,\"long\":-71.4352909,\"elevation\":3888,\"state\":\"NH\"},{\"id\":872632,\"name\":\"Scar Ridge\",\"lat\":44.0291171,\"long\":-71.5943792,\"elevation\":3773,\"state\":\"NH\"},{\"id\":872784,\"name\":\"The Cannon Balls\",\"lat\":44.1499416,\"long\":-71.7102279,\"elevation\":3766,\"state\":\"NH\"},{\"id\":13,\"name\":\"South Weeks\",\"lat\":44.4423379,\"long\":-71.3882565,\"elevation\":3881,\"state\":\"NH\"},{\"id\":14,\"name\":\"Peak Above the Nubble\",\"lat\":44.2229103,\"long\":-71.561377,\"elevation\":3812,\"state\":\"NH\"},{\"id\":575826,\"name\":\"South Brother\",\"lat\":45.944212,\"long\":-69.0017136,\"elevation\":3960,\"state\":\"ME\"},{\"id\":566912,\"name\":\"Goose Eye Mountain\",\"lat\":44.50269,\"long\":-70.99938,\"elevation\":3875,\"state\":\"ME\"},{\"id\":566418,\"name\":\"Fort Mountain\",\"lat\":45.96218,\"long\":-68.97473,\"elevation\":3855,\"state\":\"ME\"},{\"id\":578344,\"name\":\"White Cap Mountain\",\"lat\":45.23613,\"long\":-70.81808,\"elevation\":3848,\"state\":\"ME\"},{\"id\":576827,\"name\":\"The Horns\",\"lat\":45.145,\"long\":-70.32321,\"elevation\":3806,\"state\":\"ME\"},{\"id\":564149,\"name\":\"Mt. Coe\",\"lat\":45.93371,\"long\":-69.00901,\"elevation\":3786,\"state\":\"ME\"},{\"id\":565625,\"name\":\"East Kennebago Mountain\",\"lat\":45.12179,\"long\":-70.59967,\"elevation\":3783,\"state\":\"ME\"},{\"id\":561542,\"name\":\"Baldpate Mountain\",\"lat\":44.609244,\"long\":-70.892372,\"elevation\":3812,\"state\":\"ME\"},{\"id\":569102,\"name\":\"Kennebago Divide\",\"lat\":45.2183842,\"long\":-70.8153464,\"elevation\":3392,\"state\":\"ME\"},{\"id\":565831,\"name\":\"Elephant Mountain\",\"lat\":44.76807,\"long\":-70.78165,\"elevation\":3760,\"state\":\"ME\"},{\"id\":575683,\"name\":\"Snow Mountain (Oxford)\",\"lat\":45.16934,\"long\":-70.82684,\"elevation\":3783,\"state\":\"ME\"},{\"id\":575684,\"name\":\"Snow Mountain (Franklin)\",\"lat\":45.29143,\"long\":-70.70927,\"elevation\":3966,\"state\":\"ME\"},{\"id\":12,\"name\":\"Boundary Peak\",\"lat\":45.2670136,\"long\":-70.8412558,\"elevation\":3855,\"state\":\"ME\"},{\"id\":1461270,\"name\":\"Pico Peak\",\"lat\":43.6395035,\"long\":-72.8362132,\"elevation\":3947,\"state\":\"VT\"},{\"id\":1461479,\"name\":\"Stratton Mountain\",\"lat\":43.0862572,\"long\":-72.9248856,\"elevation\":3940,\"state\":\"VT\"},{\"id\":1457995,\"name\":\"Jay Peak\",\"lat\":44.9244904,\"long\":-72.5256705,\"elevation\":3786,\"state\":\"VT\"},{\"id\":1461816,\"name\":\"Equinox Mountain\",\"lat\":43.1659133,\"long\":-73.1173951,\"elevation\":3835,\"state\":\"VT\"},{\"id\":1458422,\"name\":\"Mendon Peak\",\"lat\":43.5954453,\"long\":-72.8454059,\"elevation\":3845,\"state\":\"VT\"},{\"id\":1460656,\"name\":\"Bread Loaf Mountain\",\"lat\":44.0021521,\"long\":-72.9416037,\"elevation\":3812,\"state\":\"VT\"},{\"id\":1461622,\"name\":\"Mt. Wilson\",\"lat\":44.0047016,\"long\":-72.9256359,\"elevation\":3766,\"state\":\"VT\"},{\"id\":1456415,\"name\":\"Big Jay\",\"lat\":44.9158795,\"long\":-72.5403939,\"elevation\":3763,\"state\":\"VT\"},{\"id\":1460797,\"name\":\"Dorset Mountain\",\"lat\":43.3092317,\"long\":-73.0281585,\"elevation\":3766,\"state\":\"VT\"}],\"description\":\"The New England 100 Highest are a collection of the one hundred highest mountain summits in New England spanning across the three northernmost states in New England. Fifty-nine (59) of the summits lie in New Hampshire, 27 are in Maine and 14 are in Vermont.\"}","{\"title\":\"New England 4,000 Footers\",\"listID\":\"ne4k\",\"peakCount\":67,\"peaks\":[{\"id\":561737,\"name\":\"Mt. Katahdin (Baxter Peak)\",\"lat\":45.9042845,\"long\":-68.9213562,\"elevation\":5259,\"state\":\"ME\"},{\"id\":567535,\"name\":\"Mt. Katahdin (Hamlin Peak)\",\"lat\":45.92416,\"long\":-68.92767,\"elevation\":4757,\"state\":\"ME\"},{\"id\":564525,\"name\":\"Crocker Mountain\",\"lat\":45.04712,\"long\":-70.38273,\"elevation\":4226,\"state\":\"ME\"},{\"id\":572729,\"name\":\"Old Speck Mountain\",\"lat\":44.57092,\"long\":-70.95365,\"elevation\":4183,\"state\":\"ME\"},{\"id\":572313,\"name\":\"North Brother\",\"lat\":45.95716,\"long\":-68.98544,\"elevation\":4140,\"state\":\"ME\"},{\"id\":572033,\"name\":\"Bigelow Mountain (Avery Peak)\",\"lat\":45.14664,\"long\":-70.27585,\"elevation\":4068,\"state\":\"ME\"},{\"id\":561068,\"name\":\"Mt. Abraham\",\"lat\":44.9722782,\"long\":-70.3259007,\"elevation\":4032,\"state\":\"ME\"},{\"id\":581982,\"name\":\"South Crocker Mountain\",\"lat\":45.03619,\"long\":-70.37607,\"elevation\":4042,\"state\":\"ME\"},{\"id\":576826,\"name\":\"Saddleback Horn\",\"lat\":44.95119,\"long\":-70.48706,\"elevation\":3999,\"state\":\"ME\"},{\"id\":578873,\"name\":\"Mt. Redington\",\"lat\":45.02499,\"long\":-70.3887,\"elevation\":3999,\"state\":\"ME\"},{\"id\":561033,\"name\":\"Spaulding Mountain\",\"lat\":45.0028335,\"long\":-70.333401,\"elevation\":4009,\"state\":\"ME\"},{\"id\":576507,\"name\":\"Sugarloaf Mountain\",\"lat\":45.03169,\"long\":-70.31333,\"elevation\":4226,\"state\":\"ME\"},{\"id\":578186,\"name\":\"Bigelow Mountain (West Peak)\",\"lat\":45.14676,\"long\":-70.28835,\"elevation\":4131,\"state\":\"ME\"},{\"id\":574668,\"name\":\"Saddleback Mountain\",\"lat\":44.93641,\"long\":-70.50461,\"elevation\":4117,\"state\":\"ME\"},{\"id\":1461774,\"name\":\"Mt. Mansfield\",\"lat\":44.5436627,\"long\":-72.8142903,\"elevation\":4383,\"state\":\"VT\"},{\"id\":1458086,\"name\":\"Killington Peak\",\"lat\":43.6045042,\"long\":-72.8201012,\"elevation\":4226,\"state\":\"VT\"},{\"id\":1456724,\"name\":\"Camels Hump\",\"lat\":44.3195001,\"long\":-72.8862309,\"elevation\":4071,\"state\":\"VT\"},{\"id\":1460843,\"name\":\"Mt. Ellen\",\"lat\":44.16005,\"long\":-72.9288358,\"elevation\":4078,\"state\":\"VT\"},{\"id\":1460513,\"name\":\"Mt. Abraham\",\"lat\":44.1204328,\"long\":-72.9360992,\"elevation\":4012,\"state\":\"VT\"},{\"id\":871352,\"name\":\"Mt. Washington\",\"lat\":44.2705781,\"long\":-71.3033287,\"elevation\":6273,\"state\":\"NH\"},{\"id\":871380,\"name\":\"Mt. Adams\",\"lat\":44.3206546,\"long\":-71.2915306,\"elevation\":5791,\"state\":\"NH\"},{\"id\":872101,\"name\":\"Mt. Jefferson\",\"lat\":44.304315,\"long\":-71.3166955,\"elevation\":5699,\"state\":\"NH\"},{\"id\":872313,\"name\":\"Mt. Monroe\",\"lat\":44.2552125,\"long\":-71.3214183,\"elevation\":5351,\"state\":\"NH\"},{\"id\":872247,\"name\":\"Mt. Madison\",\"lat\":44.3288173,\"long\":-71.2767796,\"elevation\":5351,\"state\":\"NH\"},{\"id\":872150,\"name\":\"Mt. Lafayette\",\"lat\":44.1608182,\"long\":-71.6444575,\"elevation\":5236,\"state\":\"NH\"},{\"id\":872176,\"name\":\"Mt. Lincoln\",\"lat\":44.1489451,\"long\":-71.6445258,\"elevation\":5085,\"state\":\"NH\"},{\"id\":872710,\"name\":\"South Twin Mountain\",\"lat\":44.187556,\"long\":-71.5548018,\"elevation\":4888,\"state\":\"NH\"},{\"id\":871629,\"name\":\"Carter Dome\",\"lat\":44.2673401,\"long\":-71.1792622,\"elevation\":4826,\"state\":\"NH\"},{\"id\":872324,\"name\":\"Mt. Moosilauke\",\"lat\":44.024502,\"long\":-71.8309164,\"elevation\":4813,\"state\":\"NH\"},{\"id\":871851,\"name\":\"Mt. Eisenhower\",\"lat\":44.2407341,\"long\":-71.3501812,\"elevation\":4757,\"state\":\"NH\"},{\"id\":872408,\"name\":\"North Twin Mountain\",\"lat\":44.2025557,\"long\":-71.5578576,\"elevation\":4751,\"state\":\"NH\"},{\"id\":871628,\"name\":\"Mt. Carrigain\",\"lat\":44.0936537,\"long\":-71.4466959,\"elevation\":4682,\"state\":\"NH\"},{\"id\":871556,\"name\":\"Mt. Bond\",\"lat\":44.1528345,\"long\":-71.5311895,\"elevation\":4685,\"state\":\"NH\"},{\"id\":872288,\"name\":\"Middle Carter Mountain\",\"lat\":44.3031109,\"long\":-71.1678106,\"elevation\":4603,\"state\":\"NH\"},{\"id\":1,\"name\":\"West Bond Mountain\",\"lat\":44.1547633,\"long\":-71.5436295,\"elevation\":4540,\"state\":\"NH\"},{\"id\":871925,\"name\":\"Mt. Garfield\",\"lat\":44.1872617,\"long\":-71.6106785,\"elevation\":4495,\"state\":\"NH\"},{\"id\":872169,\"name\":\"Mt. Liberty\",\"lat\":44.1158901,\"long\":-71.6420251,\"elevation\":4439,\"state\":\"NH\"},{\"id\":872698,\"name\":\"South Carter Mountain\",\"lat\":44.2897779,\"long\":-71.176635,\"elevation\":4419,\"state\":\"NH\"},{\"id\":872940,\"name\":\"Wildcat Mountain (A peak)\",\"lat\":44.2595144,\"long\":-71.201848,\"elevation\":4423,\"state\":\"NH\"},{\"id\":872006,\"name\":\"Mt. Hancock\",\"lat\":44.0836076,\"long\":-71.4934302,\"elevation\":4409,\"state\":\"NH\"},{\"id\":872707,\"name\":\"Kinsman Mountain (South Peak)\",\"lat\":44.1228429,\"long\":-71.7367508,\"elevation\":4331,\"state\":\"NH\"},{\"id\":873014,\"name\":\"Mt. Field\",\"lat\":44.196137,\"long\":-71.4331049,\"elevation\":4311,\"state\":\"NH\"},{\"id\":872440,\"name\":\"Mt. Osceola\",\"lat\":44.0014482,\"long\":-71.5359097,\"elevation\":4314,\"state\":\"NH\"},{\"id\":871894,\"name\":\"Mt. Flume\",\"lat\":44.1089459,\"long\":-71.6278579,\"elevation\":4318,\"state\":\"NH\"},{\"id\":872495,\"name\":\"Mt. Pierce\",\"lat\":44.2265226,\"long\":-71.3659732,\"elevation\":4304,\"state\":\"NH\"},{\"id\":872952,\"name\":\"Mt. Willey\",\"lat\":44.1835296,\"long\":-71.4207354,\"elevation\":4268,\"state\":\"NH\"},{\"id\":7,\"name\":\"Bondcliff\",\"lat\":44.1405773,\"long\":-71.5409195,\"elevation\":4265,\"state\":\"NH\"},{\"id\":872833,\"name\":\"Mt. Tripyramid\",\"lat\":43.9731659,\"long\":-71.4427801,\"elevation\":4163,\"state\":\"NH\"},{\"id\":865897,\"name\":\"Mt. Cabot\",\"lat\":44.5060061,\"long\":-71.4144768,\"elevation\":4163,\"state\":\"NH\"},{\"id\":871835,\"name\":\"Mt. Osceola (East Peak)\",\"lat\":44.0061704,\"long\":-71.5206316,\"elevation\":4134,\"state\":\"NH\"},{\"id\":872294,\"name\":\"Mt. Tripyramid (Middle Peak)\",\"lat\":43.9646744,\"long\":-71.4400968,\"elevation\":4114,\"state\":\"NH\"},{\"id\":873192,\"name\":\"Cannon Mountain\",\"lat\":44.156614,\"long\":-71.6988025,\"elevation\":4085,\"state\":\"NH\"},{\"id\":871992,\"name\":\"Mt. Hale\",\"lat\":44.2217224,\"long\":-71.5120232,\"elevation\":4062,\"state\":\"NH\"},{\"id\":872093,\"name\":\"Mt. Jackson\",\"lat\":44.2032358,\"long\":-71.3754007,\"elevation\":4042,\"state\":\"NH\"},{\"id\":872824,\"name\":\"Mt. Tom\",\"lat\":44.2105188,\"long\":-71.4460606,\"elevation\":4042,\"state\":\"NH\"},{\"id\":6,\"name\":\"Wildcat Mountain (D peak)\",\"lat\":44.2494098,\"long\":-71.2235995,\"elevation\":4062,\"state\":\"NH\"},{\"id\":872330,\"name\":\"Mt. Moriah\",\"lat\":44.3406387,\"long\":-71.1318489,\"elevation\":4029,\"state\":\"NH\"},{\"id\":872460,\"name\":\"Mt. Passaconaway\",\"lat\":43.9547374,\"long\":-71.3808824,\"elevation\":4045,\"state\":\"NH\"},{\"id\":873045,\"name\":\"Galehead Mountain\",\"lat\":44.1848105,\"long\":-71.5733908,\"elevation\":4016,\"state\":\"NH\"},{\"id\":872920,\"name\":\"Mt. Whiteface\",\"lat\":43.9339506,\"long\":-71.4059066,\"elevation\":3993,\"state\":\"NH\"},{\"id\":870689,\"name\":\"Mt. Waumbek\",\"lat\":44.4328282,\"long\":-71.4170236,\"elevation\":3996,\"state\":\"NH\"},{\"id\":872086,\"name\":\"Mt. Isolation\",\"lat\":44.2147796,\"long\":-71.3092406,\"elevation\":4003,\"state\":\"NH\"},{\"id\":872778,\"name\":\"Mt. Tecumseh\",\"lat\":43.9665408,\"long\":-71.5566086,\"elevation\":4009,\"state\":\"NH\"},{\"id\":2,\"name\":\"Mt. Hancock (South Peak)\",\"lat\":44.0732711,\"long\":-71.4869445,\"elevation\":4318,\"state\":\"NH\"},{\"id\":3,\"name\":\"Kinsman Mountain (North Peak)\",\"lat\":44.1333547,\"long\":-71.7368148,\"elevation\":4293,\"state\":\"NH\"},{\"id\":4,\"name\":\"Mt. Zealand\",\"lat\":44.1800207,\"long\":-71.5215792,\"elevation\":4260,\"state\":\"NH\"},{\"id\":5,\"name\":\"Owls Head\",\"lat\":44.1443341,\"long\":-71.6051095,\"elevation\":4025,\"state\":\"NH\"}],\"description\":\"The New England 4,000 footers are a collection of summits over 4,000 ft. in elevation with at least 200 ft of topographic prominence spanning across the three northernmost states in New England (Maine, New Hampshire and Vermont).\"}","{\"title\":\"New England State Highpoints\",\"listID\":\"neHigh\",\"peakCount\":6,\"peaks\":[{\"id\":871352,\"name\":\"Mt. Washington\",\"lat\":44.2705781,\"long\":-71.3033287,\"elevation\":6273,\"state\":\"NH\"},{\"id\":561737,\"name\":\"Mt. Katahdin (Baxter Peak)\",\"lat\":45.9042845,\"long\":-68.9213562,\"elevation\":5259,\"state\":\"ME\"},{\"id\":1461774,\"name\":\"Mt. Mansfield\",\"lat\":44.5436627,\"long\":-72.8142903,\"elevation\":4383,\"state\":\"VT\"},{\"id\":607428,\"name\":\"Mount Frissell (South Slope)\",\"lat\":42.049633,\"long\":-73.483042,\"elevation\":2451,\"state\":\"CT\"},{\"id\":1219566,\"name\":\"Jerimoth Hill\",\"lat\":41.8494158,\"long\":-71.7788736,\"elevation\":810,\"state\":\"RI\"},{\"id\":607448,\"name\":\"Mt. Greylock\",\"lat\":42.6371703,\"long\":-73.1659399,\"elevation\":3491,\"state\":\"MA\"}],\"description\":\"The New England State Highpoints are a collection of the highest points in each of the six states in New England. The highest point in Connecticut is not a mountain summit, but is on the border of Massachusetts on the slope of Mt. Frissell. It is one of only four states where the highest point is not a mountain summit (KS, DE and DC being the other three).\"}","{\"title\":\"New Hampshire 4,000 Footers\",\"listID\":\"nh4k\",\"peakCount\":48,\"peaks\":[{\"id\":871352,\"name\":\"Mt. Washington\",\"lat\":44.2705781,\"long\":-71.3033287,\"elevation\":6273,\"state\":\"NH\"},{\"id\":871380,\"name\":\"Mt. Adams\",\"lat\":44.3206546,\"long\":-71.2915306,\"elevation\":5791,\"state\":\"NH\"},{\"id\":872101,\"name\":\"Mt. Jefferson\",\"lat\":44.304315,\"long\":-71.3166955,\"elevation\":5699,\"state\":\"NH\"},{\"id\":872313,\"name\":\"Mt. Monroe\",\"lat\":44.2552125,\"long\":-71.3214183,\"elevation\":5351,\"state\":\"NH\"},{\"id\":872247,\"name\":\"Mt. Madison\",\"lat\":44.3288173,\"long\":-71.2767796,\"elevation\":5351,\"state\":\"NH\"},{\"id\":872150,\"name\":\"Mt. Lafayette\",\"lat\":44.1608182,\"long\":-71.6444575,\"elevation\":5236,\"state\":\"NH\"},{\"id\":872176,\"name\":\"Mt. Lincoln\",\"lat\":44.1489451,\"long\":-71.6445258,\"elevation\":5085,\"state\":\"NH\"},{\"id\":872710,\"name\":\"South Twin Mountain\",\"lat\":44.187556,\"long\":-71.5548018,\"elevation\":4888,\"state\":\"NH\"},{\"id\":871629,\"name\":\"Carter Dome\",\"lat\":44.2673401,\"long\":-71.1792622,\"elevation\":4826,\"state\":\"NH\"},{\"id\":872324,\"name\":\"Mt. Moosilauke\",\"lat\":44.024502,\"long\":-71.8309164,\"elevation\":4813,\"state\":\"NH\"},{\"id\":871851,\"name\":\"Mt. Eisenhower\",\"lat\":44.2407341,\"long\":-71.3501812,\"elevation\":4757,\"state\":\"NH\"},{\"id\":872408,\"name\":\"North Twin Mountain\",\"lat\":44.2025557,\"long\":-71.5578576,\"elevation\":4751,\"state\":\"NH\"},{\"id\":871628,\"name\":\"Mt. Carrigain\",\"lat\":44.0936537,\"long\":-71.4466959,\"elevation\":4682,\"state\":\"NH\"},{\"id\":871556,\"name\":\"Mt. Bond\",\"lat\":44.1528345,\"long\":-71.5311895,\"elevation\":4685,\"state\":\"NH\"},{\"id\":872288,\"name\":\"Middle Carter Mountain\",\"lat\":44.3031109,\"long\":-71.1678106,\"elevation\":4603,\"state\":\"NH\"},{\"id\":1,\"name\":\"West Bond Mountain\",\"lat\":44.1547633,\"long\":-71.5436295,\"elevation\":4540,\"state\":\"NH\"},{\"id\":871925,\"name\":\"Mt. Garfield\",\"lat\":44.1872617,\"long\":-71.6106785,\"elevation\":4495,\"state\":\"NH\"},{\"id\":872169,\"name\":\"Mt. Liberty\",\"lat\":44.1158901,\"long\":-71.6420251,\"elevation\":4439,\"state\":\"NH\"},{\"id\":872698,\"name\":\"South Carter Mountain\",\"lat\":44.2897779,\"long\":-71.176635,\"elevation\":4419,\"state\":\"NH\"},{\"id\":872940,\"name\":\"Wildcat Mountain (A peak)\",\"lat\":44.2595144,\"long\":-71.201848,\"elevation\":4423,\"state\":\"NH\"},{\"id\":872006,\"name\":\"Mt. Hancock\",\"lat\":44.0836076,\"long\":-71.4934302,\"elevation\":4409,\"state\":\"NH\"},{\"id\":872707,\"name\":\"Kinsman Mountain (South Peak)\",\"lat\":44.1228429,\"long\":-71.7367508,\"elevation\":4331,\"state\":\"NH\"},{\"id\":873014,\"name\":\"Mt. Field\",\"lat\":44.196137,\"long\":-71.4331049,\"elevation\":4311,\"state\":\"NH\"},{\"id\":872440,\"name\":\"Mt. Osceola\",\"lat\":44.0014482,\"long\":-71.5359097,\"elevation\":4314,\"state\":\"NH\"},{\"id\":871894,\"name\":\"Mt. Flume\",\"lat\":44.1089459,\"long\":-71.6278579,\"elevation\":4318,\"state\":\"NH\"},{\"id\":872495,\"name\":\"Mt. Pierce\",\"lat\":44.2265226,\"long\":-71.3659732,\"elevation\":4304,\"state\":\"NH\"},{\"id\":872952,\"name\":\"Mt. Willey\",\"lat\":44.1835296,\"long\":-71.4207354,\"elevation\":4268,\"state\":\"NH\"},{\"id\":7,\"name\":\"Bondcliff\",\"lat\":44.1405773,\"long\":-71.5409195,\"elevation\":4265,\"state\":\"NH\"},{\"id\":872833,\"name\":\"Mt. Tripyramid\",\"lat\":43.9731659,\"long\":-71.4427801,\"elevation\":4163,\"state\":\"NH\"},{\"id\":865897,\"name\":\"Mt. Cabot\",\"lat\":44.5060061,\"long\":-71.4144768,\"elevation\":4163,\"state\":\"NH\"},{\"id\":871835,\"name\":\"Mt. Osceola (East Peak)\",\"lat\":44.0061704,\"long\":-71.5206316,\"elevation\":4134,\"state\":\"NH\"},{\"id\":872294,\"name\":\"Mt. Tripyramid (Middle Peak)\",\"lat\":43.9646744,\"long\":-71.4400968,\"elevation\":4114,\"state\":\"NH\"},{\"id\":873192,\"name\":\"Cannon Mountain\",\"lat\":44.156614,\"long\":-71.6988025,\"elevation\":4085,\"state\":\"NH\"},{\"id\":871992,\"name\":\"Mt. Hale\",\"lat\":44.2217224,\"long\":-71.5120232,\"elevation\":4062,\"state\":\"NH\"},{\"id\":872093,\"name\":\"Mt. Jackson\",\"lat\":44.2032358,\"long\":-71.3754007,\"elevation\":4042,\"state\":\"NH\"},{\"id\":872824,\"name\":\"Mt. Tom\",\"lat\":44.2105188,\"long\":-71.4460606,\"elevation\":4042,\"state\":\"NH\"},{\"id\":6,\"name\":\"Wildcat Mountain (D peak)\",\"lat\":44.2494098,\"long\":-71.2235995,\"elevation\":4062,\"state\":\"NH\"},{\"id\":872330,\"name\":\"Mt. Moriah\",\"lat\":44.3406387,\"long\":-71.1318489,\"elevation\":4029,\"state\":\"NH\"},{\"id\":872460,\"name\":\"Mt. Passaconaway\",\"lat\":43.9547374,\"long\":-71.3808824,\"elevation\":4045,\"state\":\"NH\"},{\"id\":873045,\"name\":\"Galehead Mountain\",\"lat\":44.1848105,\"long\":-71.5733908,\"elevation\":4016,\"state\":\"NH\"},{\"id\":872920,\"name\":\"Mt. Whiteface\",\"lat\":43.9339506,\"long\":-71.4059066,\"elevation\":3993,\"state\":\"NH\"},{\"id\":870689,\"name\":\"Mt. Waumbek\",\"lat\":44.4328282,\"long\":-71.4170236,\"elevation\":3996,\"state\":\"NH\"},{\"id\":872086,\"name\":\"Mt. Isolation\",\"lat\":44.2147796,\"long\":-71.3092406,\"elevation\":4003,\"state\":\"NH\"},{\"id\":872778,\"name\":\"Mt. Tecumseh\",\"lat\":43.9665408,\"long\":-71.5566086,\"elevation\":4009,\"state\":\"NH\"},{\"id\":2,\"name\":\"Mt. Hancock (South Peak)\",\"lat\":44.0732711,\"long\":-71.4869445,\"elevation\":4318,\"state\":\"NH\"},{\"id\":3,\"name\":\"Kinsman Mountain (North Peak)\",\"lat\":44.1333547,\"long\":-71.7368148,\"elevation\":4293,\"state\":\"NH\"},{\"id\":4,\"name\":\"Mt. Zealand\",\"lat\":44.1800207,\"long\":-71.5215792,\"elevation\":4260,\"state\":\"NH\"},{\"id\":5,\"name\":\"Owls Head\",\"lat\":44.1443341,\"long\":-71.6051095,\"elevation\":4025,\"state\":\"NH\"}],\"description\":\"The New Hampshire 4,000 Footers (NH 48) are a collection of summits over 4,000 ft. in elevation with at least 200 ft of topographic prominence within the state of New Hampshire. All summits are located within the White Mountain National Forest. More than 1/3 of the peaks are located directly along or in close proximity to the Appalachian Trail.\"}","{\"title\":\"Vermont 4,000 Footers\",\"listID\":\"vt4k\",\"peakCount\":5,\"peaks\":[{\"id\":1461774,\"name\":\"Mt. Mansfield\",\"lat\":44.5436627,\"long\":-72.8142903,\"elevation\":4383,\"state\":\"VT\"},{\"id\":1458086,\"name\":\"Killington Peak\",\"lat\":43.6045042,\"long\":-72.8201012,\"elevation\":4226,\"state\":\"VT\"},{\"id\":1456724,\"name\":\"Camels Hump\",\"lat\":44.3195001,\"long\":-72.8862309,\"elevation\":4071,\"state\":\"VT\"},{\"id\":1460843,\"name\":\"Mt. Ellen\",\"lat\":44.16005,\"long\":-72.9288358,\"elevation\":4078,\"state\":\"VT\"},{\"id\":1460513,\"name\":\"Mt. Abraham\",\"lat\":44.1204328,\"long\":-72.9360992,\"elevation\":4012,\"state\":\"VT\"}],\"description\":\"The Vermont 4,000 Footers are a collection of summits over 4,000 ft. in elevation with at least 200 ft of topographic prominence within the state of Vermont. All five summits reside along the 272 mile “Long Trail”, the oldest long distance hiking trail in the United States.\"}","{\"title\":\"USA State Highpoints\",\"listID\":\"usHigh\",\"peakCount\":51,\"peaks\":[{\"id\":1414314,\"name\":\"Denali\",\"lat\":63.0691018,\"long\":-151.0062617,\"elevation\":20233,\"state\":\"AK\"},{\"id\":159374,\"name\":\"Cheaha Mountain\",\"lat\":33.485384,\"long\":-85.8085996,\"elevation\":2405,\"state\":\"AL\"},{\"id\":30290,\"name\":\"Humphreys Peak\",\"lat\":35.3463151,\"long\":-111.6779884,\"elevation\":12621,\"state\":\"AZ\"},{\"id\":67051,\"name\":\"Magazine Mountain\",\"lat\":35.167277,\"long\":-93.6449649,\"elevation\":2746,\"state\":\"AR\"},{\"id\":269051,\"name\":\"Mt. Whitney\",\"lat\":36.57857,\"long\":-118.2924218,\"elevation\":14478,\"state\":\"CA\"},{\"id\":180381,\"name\":\"Mt. Elbert\",\"lat\":39.1178687,\"long\":-106.4452569,\"elevation\":14426,\"state\":\"CO\"},{\"id\":607428,\"name\":\"Mount Frissell (South Slope)\",\"lat\":42.049633,\"long\":-73.483042,\"elevation\":2451,\"state\":\"CT\"},{\"id\":2496982,\"name\":\"Point Reno\",\"lat\":38.9517864,\"long\":-77.076023,\"elevation\":407,\"state\":\"DC\"},{\"id\":1851954,\"name\":\"Britton Hill\",\"lat\":30.9886961,\"long\":-86.282046,\"elevation\":344,\"state\":\"FL\"},{\"id\":354839,\"name\":\"Brasstown Bald\",\"lat\":34.8741923,\"long\":-83.8106479,\"elevation\":4774,\"state\":\"GA\"},{\"id\":366215,\"name\":\"Mauna Kea\",\"lat\":19.8206065,\"long\":-155.4681155,\"elevation\":13776,\"state\":\"HI\"},{\"id\":1851955,\"name\":\"Hawkeye Point\",\"lat\":43.4599668,\"long\":-95.7089033,\"elevation\":1670,\"state\":\"IA\"},{\"id\":378037,\"name\":\"Borah Peak\",\"lat\":44.1373404,\"long\":-113.7811392,\"elevation\":12647,\"state\":\"ID\"},{\"id\":423586,\"name\":\"Charles Mound\",\"lat\":42.5040283,\"long\":-90.2395964,\"elevation\":1234,\"state\":\"IL\"},{\"id\":1851956,\"name\":\"Hoosier Hill\",\"lat\":40.0002603,\"long\":-84.8509693,\"elevation\":1250,\"state\":\"IN\"},{\"id\":484933,\"name\":\"Mt. Sunflower\",\"lat\":39.0219757,\"long\":-102.0372428,\"elevation\":4035,\"state\":\"KS\"},{\"id\":496627,\"name\":\"Little Black Mountain\",\"lat\":36.8409229,\"long\":-83.0748906,\"elevation\":3487,\"state\":\"KY\"},{\"id\":542199,\"name\":\"Driskill Mountain\",\"lat\":32.4250483,\"long\":-92.8969723,\"elevation\":531,\"state\":\"LA\"},{\"id\":588826,\"name\":\"Backbone Mountain\",\"lat\":39.237329,\"long\":-79.4853308,\"elevation\":3360,\"state\":\"MD\"},{\"id\":1623751,\"name\":\"Mt. Arvon\",\"lat\":46.755813,\"long\":-88.155434,\"elevation\":1978,\"state\":\"MI\"},{\"id\":656081,\"name\":\"Eagle Mountain\",\"lat\":47.8973467,\"long\":-90.5606387,\"elevation\":2290,\"state\":\"MN\"},{\"id\":752501,\"name\":\"Taum Sauk Mountain\",\"lat\":37.5712766,\"long\":-90.7291683,\"elevation\":1772,\"state\":\"MO\"},{\"id\":692362,\"name\":\"Woodall Mountain\",\"lat\":34.7876908,\"long\":-88.2416081,\"elevation\":807,\"state\":\"MS\"},{\"id\":784177,\"name\":\"Granite Peak\",\"lat\":45.1634239,\"long\":-109.807608,\"elevation\":12759,\"state\":\"MT\"},{\"id\":1013745,\"name\":\"Mt. Mitchell\",\"lat\":35.7647624,\"long\":-82.2648609,\"elevation\":6663,\"state\":\"NC\"},{\"id\":1035239,\"name\":\"White Butte\",\"lat\":46.3869054,\"long\":-103.3027053,\"elevation\":3504,\"state\":\"ND\"},{\"id\":1851953,\"name\":\"Panorama Point\",\"lat\":41.0077144,\"long\":-104.0314615,\"elevation\":5430,\"state\":\"NE\"},{\"id\":877098,\"name\":\"High Point\",\"lat\":41.3208722,\"long\":-74.6615393,\"elevation\":1798,\"state\":\"NJ\"},{\"id\":928839,\"name\":\"Wheeler Peak\",\"lat\":36.5569142,\"long\":-105.416856,\"elevation\":13176,\"state\":\"NM\"},{\"id\":857652,\"name\":\"Boundary Peak\",\"lat\":37.846072,\"long\":-118.3510759,\"elevation\":13123,\"state\":\"NV\"},{\"id\":973357,\"name\":\"Mt. Marcy\",\"lat\":44.112733,\"long\":-73.9237833,\"elevation\":5344,\"state\":\"NY\"},{\"id\":1079572,\"name\":\"Campbell Hill\",\"lat\":40.3702615,\"long\":-83.720086,\"elevation\":1545,\"state\":\"OH\"},{\"id\":1090209,\"name\":\"Black Mesa\",\"lat\":36.845855,\"long\":-102.8802025,\"elevation\":4975,\"state\":\"OK\"},{\"id\":1143711,\"name\":\"Mt. Hood\",\"lat\":45.3733674,\"long\":-121.6957784,\"elevation\":11230,\"state\":\"OR\"},{\"id\":1209050,\"name\":\"Mt. Davis\",\"lat\":39.7858675,\"long\":-79.1766429,\"elevation\":3209,\"state\":\"PA\"},{\"id\":1015279,\"name\":\"Sassafras Mountain\",\"lat\":35.065108,\"long\":-82.7776292,\"elevation\":3537,\"state\":\"SC\"},{\"id\":1261770,\"name\":\"Black Elk Peak\",\"lat\":43.865991,\"long\":-103.5312013,\"elevation\":7247,\"state\":\"SD\"},{\"id\":1358489,\"name\":\"Guadalupe Peak\",\"lat\":31.8914269,\"long\":-104.8606624,\"elevation\":8753,\"state\":\"TX\"},{\"id\":1442332,\"name\":\"Kings Peak\",\"lat\":40.7763756,\"long\":-110.3728037,\"elevation\":13520,\"state\":\"UT\"},{\"id\":1485637,\"name\":\"Mt. Rogers\",\"lat\":36.6599777,\"long\":-81.544987,\"elevation\":5728,\"state\":\"VA\"},{\"id\":1326387,\"name\":\"Clingmans Dome\",\"lat\":35.562778,\"long\":-83.498535,\"elevation\":6644,\"state\":\"TN\"},{\"id\":1533614,\"name\":\"Mt. Rainier\",\"lat\":46.8528267,\"long\":-121.7604408,\"elevation\":14406,\"state\":\"WA\"},{\"id\":1575464,\"name\":\"Timms Hill\",\"lat\":45.4507963,\"long\":-90.1953351,\"elevation\":1949,\"state\":\"WI\"},{\"id\":1553014,\"name\":\"Spruce Knob\",\"lat\":38.6998284,\"long\":-79.5328253,\"elevation\":4862,\"state\":\"WV\"},{\"id\":1599903,\"name\":\"Gannett Peak\",\"lat\":43.1843012,\"long\":-109.6541217,\"elevation\":13815,\"state\":\"WY\"},{\"id\":871352,\"name\":\"Mt. Washington\",\"lat\":44.2705781,\"long\":-71.3033287,\"elevation\":6273,\"state\":\"NH\"},{\"id\":561737,\"name\":\"Mt. Katahdin (Baxter Peak)\",\"lat\":45.9042845,\"long\":-68.9213562,\"elevation\":5259,\"state\":\"ME\"},{\"id\":1461774,\"name\":\"Mt. Mansfield\",\"lat\":44.5436627,\"long\":-72.8142903,\"elevation\":4383,\"state\":\"VT\"},{\"id\":1219566,\"name\":\"Jerimoth Hill\",\"lat\":41.8494158,\"long\":-71.7788736,\"elevation\":810,\"state\":\"RI\"},{\"id\":607448,\"name\":\"Mt. Greylock\",\"lat\":42.6371703,\"long\":-73.1659399,\"elevation\":3491,\"state\":\"MA\"},{\"id\":20,\"name\":\"Ebright Azimuth\",\"lat\":39.835955,\"long\":-75.522182,\"elevation\":448,\"state\":\"DE\"}],\"description\":\"The USA State Highpoints are a collection of the highest points in each of the 50 United States plus the District of Columbia. Those actively attempting to complete this list are known as “highpointers”. Eight of the state highpoints are found in National Parks\"}","import adk46JSON from \"../json/adk46.json\";\nimport co14JSON from \"../json/co14.json\";\nimport me4kJSON from \"../json/me4k.json\";\nimport ne100JSON from \"../json/ne100.json\";\nimport ne4kJSON from \"../json/ne4k.json\";\nimport neHighJSON from \"../json/neHigh.json\";\nimport nh4kJSON from \"../json/nh4k.json\";\nimport vt4kJSON from \"../json/vt4k.json\";\nimport usHighJSON from \"../json/usHigh.json\";\n\nclass PeakList {\n  constructor(data) {\n    this.title = data.title;\n    this.listID = data.listID;\n    this.center = data.center;\n    this.zoom = data.zoom;\n    this.peakCount = data.peakCount;\n    this.peaks = data.peaks;\n    this.description = data.description;\n  }\n}\n\nconst adk46 = new PeakList(adk46JSON);\nconst co14 = new PeakList(co14JSON);\nconst me4k = new PeakList(me4kJSON);\nconst ne100 = new PeakList(ne100JSON);\nconst ne4k = new PeakList(ne4kJSON);\nconst neHigh = new PeakList(neHighJSON);\nconst nh4k = new PeakList(nh4kJSON);\nconst vt4k = new PeakList(vt4kJSON);\nconst usHigh = new PeakList(usHighJSON);\n\nconst peakListsArr = [\n  adk46,\n  co14,\n  me4k,\n  ne100,\n  ne4k,\n  neHigh,\n  nh4k,\n  vt4k,\n  usHigh,\n];\n\nconst uniquePeaks = [\n  ...new Map(\n    peakListsArr\n      .flatMap((peakList) => peakList.peaks)\n      .map((peak) => [peak.id, peak])\n  ).values(),\n];\n\npeakListsArr.sort((a, b) =>\n  a.title.toLowerCase().localeCompare(b.title.toLowerCase())\n);\n\nexport { peakListsArr, uniquePeaks };\n","import { uniquePeaks } from \"./createPeakLists.js\";\n\nexport class LogEntry {\n  peaks = [];\n  constructor(formData, logID, lists) {\n    formData.peakIDs.forEach((peakID) =>\n      this.peaks.push(uniquePeaks.find((peak) => peak.id === peakID))\n    );\n    this.stats = {\n      elevation: +formData.elevation || null,\n      distance: +formData.distance || null,\n      minutes: +formData.minutes || null,\n      hours: +formData.hours || null,\n    };\n    this.notes = formData.notes;\n    this.rating = +formData.rating;\n    this.logID = logID;\n    this.lists = lists;\n    this.#setPeakString();\n    this.#setDate(formData.date);\n    this.#setStats();\n  }\n\n  #setPeakString() {\n    const peakNames = this.peaks.map((peak) => peak.name);\n    this.peakString =\n      peakNames.length > 1\n        ? peakNames.slice(0, -1).join(\", \") + \" and \" + peakNames.slice(-1)\n        : peakNames[0];\n  }\n\n  #setDate(date) {\n    const fullDate = new Date(`${date}T00:00:00`);\n    this.date = {\n      fullDate,\n      day: new Intl.DateTimeFormat(\"en-US\", { day: \"2-digit\" }).format(\n        fullDate\n      ),\n      month: {\n        numeric: new Intl.DateTimeFormat(\"en-US\", { month: \"2-digit\" }).format(\n          fullDate\n        ),\n        alpha: new Intl.DateTimeFormat(\"en-US\", { month: \"long\" }).format(\n          fullDate\n        ),\n      },\n      year: new Intl.DateTimeFormat(\"en-US\", { year: \"numeric\" }).format(\n        fullDate\n      ),\n    };\n  }\n\n  #setStats() {\n    this.stats.time =\n      this.stats.hours || this.stats.minutes\n        ? Math.round((this.stats.hours + this.stats.minutes / 60) * 10) / 10\n        : null;\n    this.stats.avgSpeed =\n      this.stats.distance && this.stats.time\n        ? Math.round((this.stats.distance / this.stats.time) * 10) / 10\n        : null;\n    this.stats.avgElevation =\n      this.stats.elevation && this.stats.distance\n        ? Math.round(this.stats.elevation / this.stats.distance)\n        : null;\n  }\n}\n","{\n  \"listCounts\": {\n    \"adk46\": 3,\n    \"co14\": 5,\n    \"me4k\": 0,\n    \"ne100\": 14,\n    \"ne4k\": 14,\n    \"neHigh\": 1,\n    \"nh4k\": 14,\n    \"usHigh\": 1,\n    \"vt4k\": 0\n  },\n  \"allLogEntries\": [\n    {\n      \"peaks\": [\n        {\n          \"id\": 872150,\n          \"name\": \"Mt. Lafayette\",\n          \"lat\": 44.1608182,\n          \"long\": -71.6444575,\n          \"elevation\": 5236,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872176,\n          \"name\": \"Mt. Lincoln\",\n          \"lat\": 44.1489451,\n          \"long\": -71.6445258,\n          \"elevation\": 5085,\n          \"state\": \"NH\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 3800,\n        \"distance\": 8.1,\n        \"minutes\": 15,\n        \"hours\": 6,\n        \"time\": 6.3,\n        \"avgSpeed\": 1.3,\n        \"avgElevation\": 469\n      },\n      \"notes\": \"Hiked the Franconia Ridge Loop up Falling Waters Trail and down the Old Bridle Path. Chilly on the summits, saw a black bear on the way up!\",\n      \"rating\": 5,\n      \"logID\": 7,\n      \"lists\": {\n        \"ids\": [\"ne100\", \"ne4k\", \"nh4k\"],\n        \"titles\": [\n          \"New England 100 Highest\",\n          \"New England 4,000 Footers\",\n          \"New Hampshire 4,000 Footers\"\n        ]\n      },\n      \"peakString\": \"Mt. Lafayette and Mt. Lincoln\",\n      \"date\": {\n        \"fullDate\": \"2019-05-12T04:00:00.000Z\",\n        \"day\": \"12\",\n        \"month\": { \"numeric\": \"05\", \"alpha\": \"May\" },\n        \"year\": \"2019\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 872460,\n          \"name\": \"Mt. Passaconaway\",\n          \"lat\": 43.9547374,\n          \"long\": -71.3808824,\n          \"elevation\": 4045,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872833,\n          \"name\": \"Mt. Tripyramid\",\n          \"lat\": 43.9731659,\n          \"long\": -71.4427801,\n          \"elevation\": 4163,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872294,\n          \"name\": \"Mt. Tripyramid (Middle Peak)\",\n          \"lat\": 43.9646744,\n          \"long\": -71.4400968,\n          \"elevation\": 4114,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872920,\n          \"name\": \"Mt. Whiteface\",\n          \"lat\": 43.9339506,\n          \"long\": -71.4059066,\n          \"elevation\": 3993,\n          \"state\": \"NH\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 4600,\n        \"distance\": 18,\n        \"minutes\": 30,\n        \"hours\": 12,\n        \"time\": 12.5,\n        \"avgSpeed\": 1.4,\n        \"avgElevation\": 256\n      },\n      \"notes\": \"Completed the Kate Sleeper loop. Stayed overnight at Camp Rich off the summit of Mt. Passaconaway\",\n      \"rating\": 4,\n      \"logID\": 6,\n      \"lists\": {\n        \"ids\": [\"ne100\", \"ne4k\", \"nh4k\"],\n        \"titles\": [\n          \"New England 100 Highest\",\n          \"New England 4,000 Footers\",\n          \"New Hampshire 4,000 Footers\"\n        ]\n      },\n      \"peakString\": \"Mt. Passaconaway, Mt. Tripyramid, Mt. Tripyramid (Middle Peak) and Mt. Whiteface\",\n      \"date\": {\n        \"fullDate\": \"2021-07-10T04:00:00.000Z\",\n        \"day\": \"10\",\n        \"month\": { \"numeric\": \"07\", \"alpha\": \"July\" },\n        \"year\": \"2021\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 871851,\n          \"name\": \"Mt. Eisenhower\",\n          \"lat\": 44.2407341,\n          \"long\": -71.3501812,\n          \"elevation\": 4757,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872093,\n          \"name\": \"Mt. Jackson\",\n          \"lat\": 44.2032358,\n          \"long\": -71.3754007,\n          \"elevation\": 4042,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872313,\n          \"name\": \"Mt. Monroe\",\n          \"lat\": 44.2552125,\n          \"long\": -71.3214183,\n          \"elevation\": 5351,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872495,\n          \"name\": \"Mt. Pierce\",\n          \"lat\": 44.2265226,\n          \"long\": -71.3659732,\n          \"elevation\": 4304,\n          \"state\": \"NH\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 2000,\n        \"distance\": 9,\n        \"minutes\": 20,\n        \"hours\": 7,\n        \"time\": 7.3,\n        \"avgSpeed\": 1.2,\n        \"avgElevation\": 222\n      },\n      \"notes\": \"Second day of the presidential traverse. Day started off cloudy but cleared up about half way through.\",\n      \"rating\": 4,\n      \"logID\": 5,\n      \"lists\": {\n        \"ids\": [\"ne100\", \"ne4k\", \"nh4k\"],\n        \"titles\": [\n          \"New England 100 Highest\",\n          \"New England 4,000 Footers\",\n          \"New Hampshire 4,000 Footers\"\n        ]\n      },\n      \"peakString\": \"Mt. Eisenhower, Mt. Jackson, Mt. Monroe and Mt. Pierce\",\n      \"date\": {\n        \"fullDate\": \"2022-08-25T04:00:00.000Z\",\n        \"day\": \"25\",\n        \"month\": { \"numeric\": \"08\", \"alpha\": \"August\" },\n        \"year\": \"2022\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 871380,\n          \"name\": \"Mt. Adams\",\n          \"lat\": 44.3206546,\n          \"long\": -71.2915306,\n          \"elevation\": 5791,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872101,\n          \"name\": \"Mt. Jefferson\",\n          \"lat\": 44.304315,\n          \"long\": -71.3166955,\n          \"elevation\": 5699,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872247,\n          \"name\": \"Mt. Madison\",\n          \"lat\": 44.3288173,\n          \"long\": -71.2767796,\n          \"elevation\": 5351,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 871352,\n          \"name\": \"Mt. Washington\",\n          \"lat\": 44.2705781,\n          \"long\": -71.3033287,\n          \"elevation\": 6273,\n          \"state\": \"NH\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 5000,\n        \"distance\": 12,\n        \"minutes\": null,\n        \"hours\": 8,\n        \"time\": 8,\n        \"avgSpeed\": 1.5,\n        \"avgElevation\": 417\n      },\n      \"notes\": \"First day of the presidential traverse, stayed the night at Lake of the Clouds Hut. \",\n      \"rating\": 5,\n      \"logID\": 4,\n      \"lists\": {\n        \"ids\": [\"ne100\", \"ne4k\", \"nh4k\", \"neHigh\", \"usHigh\"],\n        \"titles\": [\n          \"New England 100 Highest\",\n          \"New England 4,000 Footers\",\n          \"New Hampshire 4,000 Footers\",\n          \"New England State Highpoints\",\n          \"USA State Highpoints\"\n        ]\n      },\n      \"peakString\": \"Mt. Adams, Mt. Jefferson, Mt. Madison and Mt. Washington\",\n      \"date\": {\n        \"fullDate\": \"2022-08-24T04:00:00.000Z\",\n        \"day\": \"24\",\n        \"month\": { \"numeric\": \"08\", \"alpha\": \"August\" },\n        \"year\": \"2022\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 204979,\n          \"name\": \"Longs Peak\",\n          \"lat\": 40.2548614,\n          \"long\": -105.6162397,\n          \"elevation\": 14262,\n          \"state\": \"CO\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 5000,\n        \"distance\": 15,\n        \"minutes\": null,\n        \"hours\": 12,\n        \"time\": 12,\n        \"avgSpeed\": 1.3,\n        \"avgElevation\": 333\n      },\n      \"notes\": \"Epic day...the keyhole route was intense!\",\n      \"rating\": 5,\n      \"logID\": 3,\n      \"lists\": { \"ids\": [\"co14\"], \"titles\": [\"Colorado 14ers\"] },\n      \"peakString\": \"Longs Peak\",\n      \"date\": {\n        \"fullDate\": \"2017-08-20T04:00:00.000Z\",\n        \"day\": \"20\",\n        \"month\": { \"numeric\": \"08\", \"alpha\": \"August\" },\n        \"year\": \"2017\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 179961,\n          \"name\": \"Mt. Bross\",\n          \"lat\": 39.3349948,\n          \"long\": -106.1071665,\n          \"elevation\": 14176,\n          \"state\": \"CO\"\n        },\n        {\n          \"id\": 179957,\n          \"name\": \"Mt. Cameron\",\n          \"lat\": 39.3463459,\n          \"long\": -106.1189002,\n          \"elevation\": 14232,\n          \"state\": \"CO\"\n        },\n        {\n          \"id\": 204685,\n          \"name\": \"Mt. Democrat\",\n          \"lat\": 39.3394723,\n          \"long\": -106.1398604,\n          \"elevation\": 14144,\n          \"state\": \"CO\"\n        },\n        {\n          \"id\": 179956,\n          \"name\": \"Mt. Lincoln\",\n          \"lat\": 39.351504,\n          \"long\": -106.1113773,\n          \"elevation\": 14285,\n          \"state\": \"CO\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 3100,\n        \"distance\": 7,\n        \"minutes\": 45,\n        \"hours\": 5,\n        \"time\": 5.8,\n        \"avgSpeed\": 1.2,\n        \"avgElevation\": 443\n      },\n      \"notes\": \"Had a great day, warm weather and saw lots of mountain goats!\",\n      \"rating\": 5,\n      \"logID\": 2,\n      \"lists\": { \"ids\": [\"co14\"], \"titles\": [\"Colorado 14ers\"] },\n      \"peakString\": \"Mt. Bross, Mt. Cameron, Mt. Democrat and Mt. Lincoln\",\n      \"date\": {\n        \"fullDate\": \"2016-06-24T04:00:00.000Z\",\n        \"day\": \"24\",\n        \"month\": { \"numeric\": \"06\", \"alpha\": \"June\" },\n        \"year\": \"2016\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 973340,\n          \"name\": \"Algonquin Peak\",\n          \"lat\": 44.1436636,\n          \"long\": -73.9865357,\n          \"elevation\": 5105,\n          \"state\": \"NY\"\n        },\n        {\n          \"id\": 973355,\n          \"name\": \"Iroquois Peak\",\n          \"lat\": 44.1369973,\n          \"long\": -73.9982027,\n          \"elevation\": 4829,\n          \"state\": \"NY\"\n        },\n        {\n          \"id\": 971754,\n          \"name\": \"Wright Peak\",\n          \"lat\": 44.1517187,\n          \"long\": -73.9801468,\n          \"elevation\": 4564,\n          \"state\": \"NY\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 4400,\n        \"distance\": 10.8,\n        \"minutes\": 30,\n        \"hours\": 8,\n        \"time\": 8.5,\n        \"avgSpeed\": 1.3,\n        \"avgElevation\": 407\n      },\n      \"notes\": \"Great first trip to the Adirondacks!\",\n      \"rating\": 5,\n      \"logID\": 1,\n      \"lists\": { \"ids\": [\"adk46\"], \"titles\": [\"Adirondack High Peaks\"] },\n      \"peakString\": \"Algonquin Peak, Iroquois Peak and Wright Peak\",\n      \"date\": {\n        \"fullDate\": \"2021-08-15T04:00:00.000Z\",\n        \"day\": \"15\",\n        \"month\": { \"numeric\": \"08\", \"alpha\": \"August\" },\n        \"year\": \"2021\"\n      }\n    }\n  ],\n  \"completedPeaks\": [\n    973340, 973355, 971754, 179961, 179957, 204685, 179956, 204979, 871380,\n    872101, 872247, 871352, 871851, 872093, 872313, 872495, 872460, 872833,\n    872294, 872920, 872150, 872176\n  ],\n  \"savedLists\": [\"adk46\", \"neHigh\", \"nh4k\", \"co14\"],\n  \"sidebarHidden\": false,\n  \"peakPreview\": {\n    \"previewType\": \"all\",\n    \"data\": \"\",\n    \"page\": 1,\n    \"resPerPage\": 6\n  },\n  \"peakTable\": { \"sortType\": \"elevation\", \"data\": \"\" },\n  \"logPreview\": {\n    \"selectValues\": { \"listID\": \"all\", \"month\": \"all\", \"year\": \"all\" },\n    \"page\": 1,\n    \"data\": \"\",\n    \"resPerPage\": 6\n  },\n  \"curLogEntry\": {},\n  \"stats\": {\n    \"selectValues\": { \"listID\": \"all\", \"month\": \"all\", \"year\": \"all\" },\n    \"data\": \"\"\n  },\n  \"map\": { \"data\": \"\" }\n}\n","class ModalView {\n  #modal = document.querySelector(\".modal\");\n  #overlay = document.querySelector(\".overlay\");\n  #btnClose = this.#modal.querySelector(\".btn-close\");\n  #btnLoadData = this.#modal.querySelector(\".btn-load-data\");\n  #btnStartScratch = this.#modal.querySelector(\".btn-start-scratch\");\n\n  constructor() {\n    this.#addHandlerCloseModal();\n  }\n\n  // PUBLIC METHODS\n\n  addHandlerLoadData(handler) {\n    this.#btnLoadData.addEventListener(\n      \"click\",\n      function () {\n        this.#closeModal();\n        handler();\n      }.bind(this)\n    );\n  }\n\n  openModal() {\n    this.#modal.classList.remove(\"hidden\");\n    this.#overlay.classList.remove(\"hidden\");\n  }\n\n  // PRIVATE METHODS\n\n  #addHandlerCloseModal() {\n    this.#btnClose.addEventListener(\"click\", this.#closeModal.bind(this));\n    this.#overlay.addEventListener(\"click\", this.#closeModal.bind(this));\n    this.#btnStartScratch.addEventListener(\n      \"click\",\n      this.#closeModal.bind(this)\n    );\n  }\n\n  #closeModal() {\n    this.#modal.classList.add(\"hidden\");\n    this.#overlay.classList.add(\"hidden\");\n  }\n}\n\nexport default new ModalView();\n","import { peakListsArr } from \"./createPeakLists.js\";\nimport { LogEntry } from \"./logEntry.js\";\nimport testData from \"../json/testData.json\";\nimport modalView from \"./views/modalView.js\";\n\n// STATE\n\nexport let state = {\n  listCounts: {},\n  allLogEntries: [],\n  completedPeaks: [],\n  savedLists: [],\n  sidebarHidden: false,\n  allSelectValues: { lists: \"\", months: \"\", years: \"\" },\n  peakPreview: {\n    previewType: \"all\",\n    data: {},\n    page: 1,\n    resPerPage: 6,\n  },\n  peakTable: {\n    sortType: \"elevation\",\n    data: {},\n  },\n  logPreview: {\n    curSelectValues: { listID: \"all\", month: \"all\", year: \"all\" },\n    entries: [],\n    page: 1,\n    resPerPage: 6,\n  },\n  curLogEntry: {},\n  stats: {\n    curSelectValues: { listID: \"all\", month: \"all\", year: \"all\" },\n    data: {},\n  },\n  map: {\n    data: {},\n  },\n  newEntry: {\n    curSelectValue: \"\",\n  },\n};\n\nexport let firstVisit = true;\n\n// NON EXPORTED FUNCTIONS\n\nconst sortPeakList = function (listID, sortType = \"elevation\") {\n  const peakList = { ...peakListsArr.find((list) => list.listID === listID) };\n  if (sortType === \"elevation\") {\n    peakList.peaks.sort((a, b) => b.elevation - a.elevation);\n  }\n  if (sortType === \"alphabetical\") {\n    peakList.peaks.sort((a, b) =>\n      a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n    );\n  }\n  if (sortType === \"state\") {\n    peakList.peaks.sort((a, b) =>\n      a.state.toLowerCase().localeCompare(b.state.toLowerCase())\n    );\n  }\n  return peakList;\n};\n\nconst setLogEntryID = function () {\n  const logID = state.allLogEntries.length\n    ? Math.max(...state.allLogEntries.map((entry) => entry.logID)) + 1\n    : 1;\n  return logID;\n};\n\nconst setLogEntryLists = function (peakIDs) {\n  let allLists = [];\n  peakIDs.forEach((peakID) => {\n    increaseListCounts(peakID);\n    const listMatches = getMatchingLists(peakID);\n    listMatches.forEach((list) => {\n      const listObj = {\n        listID: list.listID,\n        title: list.title,\n      };\n      if (!allLists.some((obj) => obj.listID === listObj.listID)) {\n        allLists.push(listObj);\n      }\n    });\n  });\n  allLists.sort((a, b) =>\n    a.title.toLowerCase().localeCompare(b.title.toLowerCase())\n  );\n  return allLists;\n};\n\nconst getLogEntry = function (logID) {\n  const entry = state.allLogEntries.find((entry) => entry.logID === logID);\n  return entry;\n};\n\nconst sortLogEntries = function () {\n  state.allLogEntries.sort(\n    (a, b) => new Date(b.date.fullDate) - new Date(a.date.fullDate)\n  );\n};\n\nconst filterLogEntries = function (listID, month, year) {\n  let entries =\n    listID === \"all\"\n      ? state.allLogEntries\n      : state.allLogEntries.filter((entry) =>\n          entry.lists.some((list) => list.listID === listID)\n        );\n  entries =\n    month === \"all\"\n      ? entries\n      : entries.filter((entry) => entry.date.month.numeric === month);\n  entries =\n    year === \"all\"\n      ? entries\n      : entries.filter((entry) => entry.date.year === year);\n  return entries;\n};\n\nconst getMatchingLists = function (peakID) {\n  // Used for setting log entry and list count data\n  const listMatches = [];\n  peakListsArr.forEach((peakList) => {\n    if (peakList.peaks.some((peak) => peak.id === peakID)) {\n      listMatches.push(peakList);\n    }\n  });\n  return listMatches;\n};\n\nconst increaseListCounts = function (peakID) {\n  const listMatches = getMatchingLists(peakID);\n  if (!state.completedPeaks.includes(peakID)) {\n    state.completedPeaks.push(peakID);\n    listMatches.forEach((list) => {\n      state.listCounts[list.listID] += 1;\n    });\n  }\n};\n\nconst decreaseListCounts = function (peakID) {\n  if (\n    !state.allLogEntries\n      .flatMap((entry) => entry.peaks)\n      .some((peak) => peak.id === peakID)\n  ) {\n    state.completedPeaks.splice(state.completedPeaks.indexOf(peakID), 1);\n    peakListsArr\n      .filter((peaklistObj) =>\n        peaklistObj.peaks.some((peak) => peak.id === peakID)\n      )\n      .map((peakList) => peakList.listID)\n      .forEach((peakListID) => state.listCounts[peakListID]--);\n  }\n};\n\nconst initializeListCounts = function () {\n  peakListsArr.forEach((list) => {\n    if (!state.listCounts[`${list.listID}`])\n      state.listCounts[`${list.listID}`] = 0;\n  });\n};\n\n// STORAGE\n\nconst setLocalStorage = function () {\n  localStorage.setItem(\"state\", JSON.stringify(state));\n};\n\nconst getLocalStorage = function () {\n  if (localStorage.state) state = JSON.parse(localStorage.getItem(\"state\"));\n};\n\nconst getSessionStorage = function () {\n  if (sessionStorage.firstVisit) {\n    firstVisit = JSON.parse(sessionStorage.getItem(\"firstVisit\"));\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////\n// EXPORTS\n\n// STORAGE\n\nexport const setSessionStorage = function () {\n  sessionStorage.setItem(\"firstVisit\", false);\n};\n\n// MAP\n\nexport const getCoords = async function () {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n};\n\nexport const getAddress = async function (lat, lon) {\n  const response = await fetch(\n    `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lon}&format=json`\n  );\n  if (!response.ok)\n    throw new Error(\n      `Could not get address...response status code from Nominatim: ${response.status}`\n    );\n  const data = await response.json();\n  return data;\n};\n\nexport const loadTestData = function () {\n  if (\n    confirm(\"Loading test data will overwrite all manual changes. Continue?\")\n  ) {\n    state = testData;\n    setLocalStorage();\n  }\n};\n\nexport const clearAllData = function () {\n  if (confirm(\"This action will delete all log entries. Continue?\")) {\n    localStorage.clear();\n    location.reload();\n  }\n};\n\nexport const loadMapData = function (type, id) {\n  let peaks, listID;\n  if (type === \"list\") {\n    listID = id;\n    peaks = sortPeakList(id).peaks;\n  }\n  if (type === \"log\") {\n    peaks = getLogEntry(id).peaks;\n  }\n  const data = {\n    peaks: peaks.map((peak) => {\n      let logMatch;\n      if (state.allLogEntries.length) {\n        logMatch = state.allLogEntries.find((entry) =>\n          entry.peaks.some((peakObj) => peakObj.id === peak.id)\n        );\n      }\n      return {\n        ...peak,\n        completed: state.completedPeaks.includes(peak.id) ? true : false,\n        completedDate: logMatch\n          ? `${logMatch.date.month.numeric}/${logMatch.date.day}/${logMatch.date.year}`\n          : false,\n      };\n    }),\n    type,\n    id,\n  };\n  state.map.data = data;\n  setLocalStorage();\n  // return data;\n};\n\nexport const updateSidebarHidden = function () {\n  state.sidebarHidden = state.sidebarHidden ? false : true;\n  setLocalStorage();\n};\n\n// PEAK LIST PREVIEW\n\nexport const addSavedList = function (listID) {\n  state.savedLists.push(listID);\n  setLocalStorage();\n};\n\nexport const removeSavedList = function (listID) {\n  state.savedLists.splice(state.savedLists.indexOf(listID), 1);\n  setLocalStorage();\n};\n\nexport const loadPeakListPreviewData = function () {\n  const data = peakListsArr.map((list) => {\n    return {\n      listID: list.listID,\n      title: list.title,\n      saved: state.savedLists.includes(list.listID) ? true : false,\n      numCompleted: state.listCounts[list.listID],\n      peakCount: list.peakCount,\n    };\n  });\n  state.peakPreview.data = data;\n  setLocalStorage();\n};\n\nexport const getListPreviewPage = function (previewType, page) {\n  state.peakPreview.page = page || state.peakPreview.page;\n  state.peakPreview.previewType = previewType || state.peakPreview.previewType;\n  const start = (state.peakPreview.page - 1) * state.peakPreview.resPerPage;\n  const end = state.peakPreview.page * state.peakPreview.resPerPage;\n  let allData;\n  if (state.peakPreview.previewType === \"all\") allData = state.peakPreview.data;\n  if (state.peakPreview.previewType === \"saved\")\n    allData = state.peakPreview.data.filter((list) =>\n      state.savedLists.includes(list.listID)\n    );\n  setLocalStorage();\n  return {\n    data: allData.slice(start, end),\n    previewType: state.peakPreview.previewType,\n    page: state.peakPreview.page,\n    numPages: Math.ceil(allData.length / state.peakPreview.resPerPage) || 1,\n  };\n};\n\n// PEAK LIST TABLE\n\nexport const loadTableData = function (listID, sortType) {\n  state.peakTable.sortType = sortType || state.peakTable.sortType;\n  const list = sortPeakList(listID, state.peakTable.sortType);\n  const data = {\n    listID: list.listID,\n    title: list.title,\n    description: list.description,\n    numCompleted: state.listCounts[listID],\n    saved: state.savedLists.includes(list.listID) ? true : false,\n    peakCount: list.peakCount,\n    peaks: list.peaks.map((peak, i) => {\n      let logMatch;\n      if (state.allLogEntries.length) {\n        logMatch = state.allLogEntries.find((entry) =>\n          entry.peaks.some((peakObj) => peakObj.id === peak.id)\n        );\n      }\n      return {\n        id: peak.id,\n        num: i + 1,\n        name: peak.name,\n        elevation: peak.elevation,\n        state: peak.state,\n        completed: logMatch ? true : false,\n        completedDate: logMatch\n          ? `${logMatch.date.month.numeric}/${logMatch.date.day}/${logMatch.date.year}`\n          : false,\n      };\n    }),\n    sortType: state.peakTable.sortType,\n  };\n  state.peakTable.data = data;\n  setLocalStorage();\n};\n\n// LOG PREVIEW\n\nexport const removeLogEntry = function (logID) {\n  const remove = getLogEntry(logID);\n  state.allLogEntries.splice(state.allLogEntries.indexOf(remove), 1);\n  remove.peaks.forEach((peak) => {\n    decreaseListCounts(peak.id);\n  });\n  setLocalStorage();\n};\n\nexport const getLogPreviewPage = function (curSelectValues, page = 1) {\n  state.logPreview.page = page || state.logPreview.page;\n  state.logPreview.curSelectValues =\n    curSelectValues || state.logPreview.curSelectValues;\n  const { listID, month, year } = state.logPreview.curSelectValues;\n  const start = (state.logPreview.page - 1) * state.logPreview.resPerPage;\n  const end = state.logPreview.page * state.logPreview.resPerPage;\n  state.logPreview.entries = filterLogEntries(listID, month, year);\n  return {\n    noEntries: (state.logPreview.noEntries = state.allLogEntries.length\n      ? false\n      : true),\n    entries: state.logPreview.entries.slice(start, end),\n    page: state.logPreview.page,\n    numPages:\n      Math.ceil(\n        state.logPreview.entries.length / state.logPreview.resPerPage\n      ) || 1,\n    allSelectValues: state.allSelectValues,\n    curSelectValues: state.logPreview.curSelectValues,\n  };\n};\n\n// LOG ENTRY\n\nexport const loadLogEntry = function (logID) {\n  const entry = getLogEntry(logID);\n  state.curLogEntry = entry;\n  setLocalStorage();\n};\n\n// STATS\n\nexport const getStatsData = function (curSelectValues) {\n  state.stats.curSelectValues = curSelectValues || state.stats.curSelectValues;\n  const { listID, month, year } = state.stats.curSelectValues;\n  const entries = filterLogEntries(listID, month, year);\n  const data = {\n    numberEntries: entries.length,\n    numberPeaks: [\n      ...new Set(\n        entries.flatMap((entry) => entry.peaks.map((peak) => peak.id))\n      ),\n    ].length,\n    totalDistance:\n      Math.round(\n        entries\n          .map((entry) => entry.stats.distance)\n          .reduce((acc, cur) => acc + cur, 0) * 10\n      ) / 10,\n    totalElevation: Math.round(\n      entries\n        .map((entry) => entry.stats.elevation)\n        .reduce((acc, cur) => acc + cur, 0)\n    ),\n    totalTime:\n      Math.round(\n        entries\n          .map((entry) => entry.stats.time)\n          .reduce((acc, cur) => acc + cur, 0) * 10\n      ) / 10,\n  };\n  state.stats.data = data;\n  setLocalStorage();\n  return {\n    data,\n    noEntries: state.allLogEntries.length ? false : true,\n    allSelectValues: state.allSelectValues,\n    curSelectValues: state.stats.curSelectValues,\n  };\n};\n\n// NEW ENTRY\n\nexport const getCheckboxData = function (listID, checkedID) {\n  state.newEntry.curSelectValue = listID;\n  state.newEntry.curCheckedID = checkedID;\n  setLocalStorage();\n  return {\n    listID,\n    checkedID: +checkedID || false,\n    peaks: sortPeakList(listID, \"alphabetical\").peaks,\n  };\n};\n\nexport const resetNewEntryState = function () {\n  state.newEntry.curSelectValue = \"\";\n  state.newEntry.curCheckedID = \"\";\n};\n\nexport const getDate = function (date) {\n  const options = {\n    day: \"numeric\",\n    month: \"numeric\",\n    year: \"numeric\",\n  };\n  const now = new Date();\n  if (date === \"today\")\n    return new Intl.DateTimeFormat(\"en-CA\", options).format(now);\n  if (date === \"yesterday\")\n    return new Intl.DateTimeFormat(\"en-CA\", options).format(\n      new Date(now.getTime() - 86400000)\n    );\n};\n\nexport const addLogEntry = function (formData) {\n  const logID = setLogEntryID();\n  const lists = setLogEntryLists(formData.peakIDs);\n  const entry = new LogEntry(formData, logID, lists);\n  state.allLogEntries.unshift(entry);\n  state.curLogEntry = entry;\n  resetNewEntryState();\n  sortLogEntries();\n  updateAllSelectValues();\n  setLocalStorage();\n};\n\n// SELECTS\n\nexport const getListSelectData = function () {\n  return peakListsArr.map((list) => {\n    return {\n      listID: list.listID,\n      title: list.title,\n    };\n  });\n};\n\nexport const updateAllSelectValues = function () {\n  const years = [\n    ...new Set(state.allLogEntries.map((entry) => entry.date.year)),\n  ].sort((a, b) => b - a);\n\n  const allLists = state.allLogEntries.flatMap((entry) => entry.lists);\n  const lists = [...new Set(allLists.map(JSON.stringify))].map(JSON.parse);\n  lists.sort((a, b) =>\n    a.title.toLowerCase().localeCompare(b.title.toLowerCase())\n  );\n  const allMonths = state.allLogEntries.flatMap((entry) => entry.date.month);\n  const months = [...new Set(allMonths.map(JSON.stringify))].map(JSON.parse);\n  months.sort((a, b) => a.numeric - b.numeric);\n  const allSelectValues = {\n    lists,\n    months,\n    years,\n  };\n  state.allSelectValues = allSelectValues;\n  setLocalStorage();\n};\n\nconst init = function () {\n  getLocalStorage();\n  initializeListCounts();\n  updateAllSelectValues();\n  setLocalStorage();\n  getSessionStorage();\n};\n\ninit();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7RGJm\")).toString();","export default class View {\n  href;\n  _navBtn;\n  _container;\n  _allContainers = document.querySelectorAll(\".container\");\n  _containerMain = document.querySelector(\".container-main\");\n  _allNavBtns = document.querySelectorAll(\".nav__btn\");\n\n  addHandlerNavClick(handler) {\n    this._navBtn.addEventListener(\"click\", function () {\n      handler();\n    });\n  }\n\n  showContainer() {\n    window.history.replaceState(null, \"\", this.href);\n    this._allContainers.forEach((container) =>\n      container.classList.add(\"hidden\")\n    );\n    this._containerMain.classList.remove(\"hidden\");\n    this._container.classList.remove(\"hidden\");\n    this._allNavBtns.forEach((btn) => btn.classList.remove(\"nav__btn--active\"));\n    this._navBtn.classList.add(\"nav__btn--active\");\n  }\n\n  hideContainer() {\n    this._containerMain.classList.add(\"hidden\");\n    this._allContainers.forEach((container) =>\n      container.classList.add(\"hidden\")\n    );\n  }\n}\n","import icons from \"../../img/sprite.svg\";\nimport View from \"./view.js\";\n\nexport default class LogView extends View {\n  _navBtn = document.querySelector(\"#nav-btn-log\");\n\n  // PUBLIC METHODS\n\n  addHandlerDeleteEntry(handler) {\n    this._container.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".btn-delete-entry\");\n      if (!clicked) return;\n      if (confirm(\"Are you sure you want to delete this entry?\")) {\n        const { logId } = clicked.dataset;\n        handler(+logId);\n      }\n    });\n  }\n\n  // PRIVATE METHODS\n\n  _generateDeleteButtonMarkup(entry, size) {\n    const markup = `\n      <button class=\"btn btn-icon btn-delete-entry\" data-log-id='${\n        entry.logID\n      }'>\n        <svg class=\"btn-icon__icon${size === \"small\" ? \"--sm\" : \"\"}\">\n          <use href=\"${icons}#icon-trash\"></use>\n        </svg>\n      </button>\n     `;\n    return markup;\n  }\n}\n","import LogView from \"./logView.js\";\n\nclass LogPreviewView extends LogView {\n  #data;\n  #entries;\n  #noEntries;\n  #curSelectValues;\n  #allSelectValues;\n  #page;\n  #numPages;\n  href = \"/log-preview\";\n  _container = document.querySelector(\".container-log-preview\");\n  #previewGrid = document.querySelector(\".preview-list--log-entries\");\n  #listSelect;\n  #monthSelect;\n  #yearSelect;\n  #allSelects;\n  #selectWrapper = this._container.querySelector(\".preview-wrapper\");\n\n  #btnAddEntry = this._container.querySelector(\".btn-add-entry\");\n  #noEntriesMessage = this._container.querySelector(\".no-data__message\");\n  #noLogEntries = document.querySelector(\".no-log-entries\");\n\n  // PUBLIC METHODS\n\n  addHandlerAddEntry(handler) {\n    this.#btnAddEntry.addEventListener(\"click\", handler);\n  }\n\n  addHandlerShowEntry(handler) {\n    this._container.addEventListener(\n      \"click\",\n      function (e) {\n        const clicked = e.target.closest(\".btn-view\");\n        if (!clicked) return;\n        const { logId } = clicked.closest(\".preview-list__entry\").dataset;\n        handler(+logId);\n      }.bind(this)\n    );\n  }\n\n  addHandlerLogSelects(handler) {\n    this.#selectWrapper.addEventListener(\n      \"change\",\n      function () {\n        const listID = this.#listSelect.value;\n        const month = this.#monthSelect.value;\n        const year = this.#yearSelect.value;\n        const currentSelectValues = { listID, month, year };\n        handler(currentSelectValues);\n      }.bind(this)\n    );\n  }\n\n  addHandlerPagination(handler) {\n    this.#selectWrapper.addEventListener(\n      \"click\",\n      function (e) {\n        const clicked = e.target.closest(\".btn-pagination\");\n        if (!clicked) return;\n        handler(this.#curSelectValues, +clicked.dataset.page);\n      }.bind(this)\n    );\n  }\n\n  render(data) {\n    this.#data = data;\n    this.#entries = data.entries;\n    this.#noEntries = data.noEntries;\n    this.#curSelectValues = data.curSelectValues;\n    this.#allSelectValues = data.allSelectValues;\n    this.#selectWrapper.innerHTML = this.#generateSelectWrapperMarkup();\n    this.#previewGrid.innerHTML = \"\";\n    if (data.entries.length) {\n      this.#noLogEntries.classList.add(\"hidden\");\n      this.#previewGrid.classList.remove(\"hidden\");\n      this.#previewGrid.insertAdjacentHTML(\n        \"beforeend\",\n        this.#generatePreviewMarkup()\n      );\n    } else {\n      this.#showNoEntriesMessage();\n      this.#previewGrid.classList.add(\"hidden\");\n    }\n    this.#listSelect = document.querySelector(\"#select-list-log-preview\");\n    this.#monthSelect = document.querySelector(\"#select-month-log-preview\");\n    this.#yearSelect = document.querySelector(\"#select-year-log-preview\");\n    this.#listSelect.value = this.#curSelectValues.listID;\n    this.#monthSelect.value = this.#curSelectValues.month;\n    this.#yearSelect.value = this.#curSelectValues.year;\n  }\n\n  // PRIVATE METHODS\n\n  #generatePreviewMarkup() {\n    return this.#entries\n      .map((entry) => this.#generateSinglePreviewMarkup(entry))\n      .join(\"\");\n  }\n\n  #generateSinglePreviewMarkup(entry) {\n    const markup = `\n    <li class=\"preview-list__entry\" data-log-id=\"${\n      entry.logID\n    }\" data-list-id=\"${entry.listID}\">\n      ${this._generateDeleteButtonMarkup(entry)}\n      <div class=\"preview-list__info\">\n        <h2 class=\"preview-list__label-primary\">\n          <strong>${entry.date.month.alpha} ${entry.date.day}, ${\n      entry.date.year\n    } </strong> - ${entry.peaks.length} ${\n      entry.peaks.length > 1 ? \"Peaks\" : \"Peak\"\n    }\n        </h2>\n        <span class=\"preview-list__label-secondary\">${entry.peakString}</span>\n      </div>\n              \n              <button class=\"btn btn--green btn-view btn-view-log\">VIEW</button>\n            </li>`;\n    return markup;\n  }\n\n  #generateListSelectRowMarkup(list) {\n    const markup = `<option value=\"${list.listID}\">${list.title}</option>`;\n    return markup;\n  }\n\n  #generateMonthSelectRowMarkup(month) {\n    const markup = `<option value=\"${month.numeric}\">${month.alpha}</option>`;\n    return markup;\n  }\n\n  #generateYearSelectRowMarkup(year) {\n    const markup = `<option value=\"${year}\">${year}</option>`;\n    return markup;\n  }\n\n  #generateSelectWrapperMarkup() {\n    const curPage = this.#data.page;\n    const numPages = this.#data.numPages;\n\n    // First page, other pages\n    if (curPage === 1 && numPages > 1) {\n      const markup = `\n      ${this.#generateSelectMarkup()}\n        <button data-page=\"2\" class=\"btn btn-pagination btn-pagination--next\">\n          <span>Page 2</span>\n        </button>`;\n      return markup;\n    }\n\n    // Last page, other pages\n    if (curPage === numPages && numPages > 1) {\n      const markup = `\n        <button data-page=\"${\n          numPages - 1\n        }\" class=\"btn btn-pagination btn-pagination--prev\">\n          <span>Page ${numPages - 1}</span>\n        </button>\n        ${this.#generateSelectMarkup()}`;\n      return markup;\n    }\n\n    // First page, no other pages\n    if (curPage === 1 && numPages === 1) {\n      const markup = this.#generateSelectMarkup();\n      return markup;\n    }\n\n    // Other page\n    if (curPage < numPages) {\n      const markup = `\n      <button data-page=\"${\n        curPage - 1\n      }\" class=\"btn btn-pagination btn-pagination--prev\">\n          <span>Page ${curPage - 1}</span>\n        </button>\n      ${this.#generateSelectMarkup()}\n        <button data-page=\"${\n          curPage + 1\n        }\" class=\"btn btn-pagination btn-pagination--next\">\n          <span>Page ${curPage + 1}</span>\n        </button>`;\n      return markup;\n    }\n  }\n\n  #generateSelectMarkup() {\n    const markup = `\n      <label for=\"select-list-log-preview\">Filter by list:</label>\n      <select class=\"select-list\" id=\"select-list-log-preview\">\n        <option value=\"all\" selected>All lists</option>\n        ${this.#allSelectValues.lists\n          .map(this.#generateListSelectRowMarkup)\n          .join(\"\")}\n      </select>\n      <label for=\"select-month-log-preview\">Filter by date:</label>\n      <select id=\"select-month-log-preview\">\n        <option value=\"all\" selected>All Months</option>\n        ${this.#allSelectValues.months\n          .map(this.#generateMonthSelectRowMarkup)\n          .join(\"\")}\n      </select>\n      <select id=\"select-year-log-preview\">\n        <option value=\"all\" selected>All years</option>\n        ${this.#allSelectValues.years\n          .map(this.#generateYearSelectRowMarkup)\n          .join(\"\")}\n      </select>`;\n    return markup;\n  }\n\n  #showNoEntriesMessage() {\n    const message = `\n    You haven't added any log entries ${\n      this.#noEntries ? \"yet\" : \"that match the selected filters\"\n    }. ${this.#noEntries ? \"Click\" : \"Adjust the filters or click\"}\n     the button below to log ${this.#noEntries ? \"your first\" : \"a new\"} entry!\n    `;\n    this.#noEntriesMessage.innerHTML = message;\n    this.#noLogEntries.classList.remove(\"hidden\");\n  }\n}\n\nexport default new LogPreviewView();\n\n`<button data-page=\"1\" class=\"btn btn-pagination btn-pagination--prev\">\n  <span>Page 1</span>\n</button>\n<label for=\"select-list-log-preview\">Filter by list:</label>\n\n<button data-page=\"2\" class=\"btn btn-pagination btn-pagination--next\">\n  <span>Page 2</span>\n</button>`;\n","import icons from \"../../img/sprite.svg\";\nimport LogView from \"./logView.js\";\n\nclass LogEntryView extends LogView {\n  href = \"/log-entry\";\n  #data;\n  _container = document.querySelector(\".container-log-entry\");\n  #logEntryEl = document.querySelector(\".log-entry\");\n  #logEntryLabelNumber = document.querySelector(\".log-entry__label-number\");\n  #logEntryHeading = document.querySelector(\".log-entry__heading\");\n  #btnDeleteWrapper = this._container.querySelector(\n    \".container__heading-button-wrapper\"\n  );\n  #peakListGrid = document.querySelector(\".log-entry__lists\");\n\n  // PUBLIC METHODS\n\n  addHandlerViewMap(handler) {\n    this.#logEntryEl.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".btn-view--sm\");\n      if (!clicked) return;\n      let { type, id } = clicked.dataset;\n      id = type === \"log\" ? +id : id;\n      handler(type, id);\n    });\n  }\n\n  render(entry) {\n    this.#logEntryEl.innerHTML = \"\";\n    this.#logEntryLabelNumber.textContent = `${entry.peaks.length} ${\n      entry.peaks.length > 1 ? \"Peaks\" : \"Peak\"\n    }`;\n    this.#logEntryHeading.textContent = `${entry.date.month.alpha} ${entry.date.day}, ${entry.date.year}`;\n    this.#btnDeleteWrapper.innerHTML = `${this._generateDeleteButtonMarkup(\n      entry,\n      \"small\"\n    )}<span>Delete entry</span>`;\n    this.#logEntryEl.insertAdjacentHTML(\n      \"beforeend\",\n      this.#generateLogEntryMarkup(entry)\n    );\n  }\n\n  // PRIVATE METHODS\n\n  #generateLogEntryMarkup(entry) {\n    const markup = `\n      <span class=\"log-entry__label\">Peak Lists:</span>\n      <div class=\"log-entry__lists\">${this.#generatePeakListMarkup(entry)}</div>\n      <span class=\"log-entry__label\">Peaks:</span>\n      <div class=\"log-entry__peaks\" style=\"grid-template-rows:repeat(${\n        entry.peaks.length\n      }, max-content)\">${this.#generatePeaksMarkup(entry)}</div>\n      <span class=\"log-entry__label\">Distance:</span>\n      <span>${\n        entry.stats.distance ? entry.stats.distance + ` mi` : \"n/a\"\n      }</span>\n      <span class=\"log-entry__label\">Elevation Gain:</span>\n      <span>${\n        entry.stats.elevation\n          ? entry.stats.elevation.toLocaleString() + ` ft`\n          : \"n/a\"\n      }</span>\n      <span class=\"log-entry__label\">Time:</span>\n      <span>${entry.stats.time ? entry.stats.time + ` hrs` : \"n/a\"}</span>\n      <span class=\"log-entry__label\">Avg Speed:</span>\n      <span>${\n        entry.stats.avgSpeed ? entry.stats.avgSpeed + ` mi/hr` : \"n/a\"\n      }</span>\n      <span class=\"log-entry__label\">Avg Elevation Gain:</span>\n      <span>${\n        entry.stats.avgElevation\n          ? entry.stats.avgElevation.toLocaleString() + ` ft/mi`\n          : \"n/a\"\n      }</span>\n      <span class=\"log-entry__label\">Rating:</span>\n      <span>${this.#generateRatingMarkup(entry.rating)}</span>\n      <span class=\"log-entry__label\">Notes:</span>\n      <span>${entry.notes ? entry.notes : \"n/a\"}</span>`;\n    return markup;\n  }\n\n  #generateRatingMarkup(rating) {\n    let markup = \"\";\n    if (rating) {\n      for (let i = 0; i < rating; i++) {\n        markup += `<svg class=\"btn-star__icon btn-star__icon--full\"><use href=\"${icons}#icon-star-solid\"></use></svg>`;\n      }\n      for (let i = 0; i < 5 - rating; i++) {\n        markup += `<svg class=\"btn-star__icon\"><use href=\"${icons}#icon-star\"></use></svg>`;\n      }\n    } else {\n      markup = \"n/a\";\n    }\n    return markup;\n  }\n\n  #generatePeaksMarkup(entry) {\n    let markup = \"\";\n    entry.peaks.forEach(\n      (peak) =>\n        (markup += `<span class='log-entry__peak'>${\n          peak.name\n        } - ${peak.elevation.toLocaleString()} ft</span>`)\n    );\n    markup += `<button class='btn btn--green btn-view--sm' data-type='log' data-id='${entry.logID}'>VIEW</button>`;\n    return markup;\n  }\n\n  #generatePeakListMarkup(entry) {\n    let markup = \"\";\n    entry.lists.forEach((list) => {\n      markup += `<span>${list.title}</span><button class='btn btn--green btn-view--sm' data-type='list' data-id='${list.listID}'>VIEW</button>`;\n    });\n    return markup;\n  }\n}\n\nexport default new LogEntryView();\n","import icons from \"../../img/sprite.svg\";\nimport View from \"./view.js\";\n\nclass newEntryView extends View {\n  href = \"/new-entry\";\n  _navBtn = document.querySelector(\"#nav-btn-new-entry\");\n  _container = document.querySelector(\".container-new-entry\");\n  #gridDate = document.querySelector(\".form-new-entry__date-grid\");\n  #gridPeakCheckboxes = document.querySelector(\n    \".form-new-entry__checkbox-grid\"\n  );\n  #gridStats = document.querySelector(\".form-new-entry__stats-grid\");\n  #statRows = [...document.querySelectorAll(\".form-new-entry__stat-row\")];\n  #statRowIcons = [...this.#gridStats.querySelectorAll(\".btn-icon__icon\")];\n  #statBtns = [...this.#gridStats.querySelectorAll(\".btn-add-stat\")];\n  #inputDate = document.querySelector(\"#date\");\n  #chooseListSelect = document.querySelector(\"#choose-list-new-entry\");\n  #inputElevation = document.querySelector(\"#elevation\");\n  #inputDistance = document.querySelector(\"#distance\");\n  #inputHours = document.querySelector(\"#hours\");\n  #inputMinutes = document.querySelector(\"#minutes\");\n  #inputNotes = document.querySelector(\"#notes\");\n  #wrapperStars = document.querySelector(\".form-new-entry__wrapper-stars\");\n  #allStarIcons = [...document.querySelectorAll(\".btn-star__icon\")];\n  #allStarButtons = [...document.querySelectorAll(\".btn-star\")];\n  #formNewEntry = document.querySelector(\"#form-new-entry\");\n  #btnClearForm = document.querySelector(\".btn-clear-form\");\n  #btnAddEntry = document.querySelector(\"#add-entry\");\n\n  constructor() {\n    super();\n    this.#addHandlerToggleStat();\n    this.#addHandlerStarMouseover();\n    this.#addHandlerStarMouseout();\n    this.#addHandlerStarClick();\n  }\n\n  // PUBLIC METHODS\n\n  addHandlerClearForm(handler) {\n    this.#btnClearForm.addEventListener(\"click\", handler);\n  }\n\n  addHandlerDate(handler) {\n    this.#gridDate.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      const btn = e.target.closest(\".btn-date\");\n      if (!btn) return;\n      const date = btn.textContent.toLowerCase().trim();\n      handler(date);\n    });\n  }\n\n  addHandlerPeakListSelect(handler) {\n    this.#chooseListSelect.addEventListener(\n      \"change\",\n      function (e) {\n        const listID = e.target.value;\n        handler(listID);\n      }.bind(this)\n    );\n  }\n\n  addHandlerAddEntry(handler) {\n    this.#btnAddEntry.addEventListener(\n      \"click\",\n      function (e) {\n        e.preventDefault();\n        const date = this.#inputDate.value;\n        if (!date) {\n          alert(\"Please enter a complete date in the format MM-DD-YYY\");\n          return;\n        }\n\n        if (\n          +date.slice(0, 4) < 1900 ||\n          new Date(date).getTime() > new Date().getTime()\n        ) {\n          alert(`Please enter a date between 01-01-1900 and today`);\n          return;\n        }\n\n        const peakIDs = this.#getCheckedPeaks();\n        if (peakIDs.length <= 0) {\n          alert(\"Please choose at least one peak from a list\");\n          return;\n        }\n\n        const formData = {\n          date,\n          peakIDs,\n          elevation: this.#inputElevation.value,\n          distance: this.#inputDistance.value,\n          hours: this.#inputHours.value,\n          minutes: this.#inputMinutes.value,\n          notes: this.#inputNotes.value,\n          rating: this.#getRating(),\n        };\n        handler(formData);\n        this.clearForm();\n      }.bind(this)\n    );\n  }\n\n  changeDate(date) {\n    this.#inputDate.value = date;\n  }\n\n  clearForm() {\n    for (const starBtn of this.#allStarButtons) {\n      this.#clearStar(starBtn);\n      starBtn.dataset.filled = \"false\";\n    }\n    this.#gridPeakCheckboxes.innerHTML = \"\";\n    this.#gridPeakCheckboxes.classList.add(\"hidden\");\n    this.#statRowIcons.forEach(\n      (icon) => (icon.innerHTML = `<use href=\"${icons}#icon-add\"></use>`)\n    );\n    this.#statRows.forEach((row) => row.classList.add(\"invisible\"));\n    this.#formNewEntry.reset();\n  }\n\n  displayCheckboxes(data) {\n    this.#gridPeakCheckboxes.classList.remove(\"hidden\");\n    this.#gridPeakCheckboxes.innerHTML = \"\";\n    data.peaks.forEach((peak) =>\n      this.#gridPeakCheckboxes.insertAdjacentHTML(\n        \"beforeend\",\n        this.#generateCheckboxMarkup(peak)\n      )\n    );\n    this.#chooseListSelect.value = data.listID;\n    if (data.checkedID) {\n      const checkbox = [\n        ...this.#gridPeakCheckboxes.querySelectorAll(\"input\"),\n      ].find((input) => +input.value === data.checkedID);\n      checkbox.checked = true;\n    }\n  }\n\n  initializeListSelect(data) {\n    this.#chooseListSelect.insertAdjacentHTML(\n      \"beforeend\",\n      data.map((list) => this.#generateSelectRowMarkup(list)).join(\"\")\n    );\n  }\n\n  // PRIVATE METHODS\n\n  #addHandlerToggleStat() {\n    this.#gridStats.addEventListener(\"click\", this.#toggleStat.bind(this));\n  }\n\n  #addHandlerStarMouseover() {\n    this.#wrapperStars.addEventListener(\n      \"mouseover\",\n      this.#handleStarMouseOver.bind(this)\n    );\n  }\n\n  #addHandlerStarMouseout() {\n    this.#wrapperStars.addEventListener(\n      \"mouseout\",\n      this.#handleStarMouseOut.bind(this)\n    );\n  }\n\n  #addHandlerStarClick() {\n    this.#wrapperStars.addEventListener(\n      \"click\",\n      this.#handleStarClick.bind(this)\n    );\n  }\n\n  #handleStarMouseOver(e) {\n    const hovered = e.target.closest(\".btn-star\");\n    if (!hovered) return;\n    for (const starBtn of this.#allStarButtons) {\n      starBtn.dataset.num <= hovered.dataset.num\n        ? this.#fillStar(starBtn)\n        : this.#clearStar(starBtn);\n    }\n  }\n\n  #handleStarMouseOut() {\n    for (const starBtn of this.#allStarButtons) {\n      if (starBtn.dataset.filled === \"false\") {\n        this.#clearStar(starBtn);\n      } else {\n        this.#fillStar(starBtn);\n      }\n    }\n  }\n\n  #handleStarClick(e) {\n    e.preventDefault();\n    const clicked = e.target.closest(\".btn-star\");\n    if (!clicked) return;\n    for (const starBtn of this.#allStarButtons) {\n      if (starBtn.dataset.num <= clicked.dataset.num) {\n        this.#fillStar(starBtn);\n        starBtn.dataset.filled = \"true\";\n      } else {\n        this.#clearStar(starBtn);\n        starBtn.dataset.filled = \"false\";\n      }\n    }\n  }\n\n  #fillStar(starBtn) {\n    starBtn.querySelector(\"svg\").classList.add(\"btn-star__icon--full\");\n    starBtn\n      .querySelector(\"use\")\n      .setAttribute(\"href\", `${icons}#icon-star-solid`);\n  }\n\n  #clearStar(starBtn) {\n    starBtn.querySelector(\"svg\").classList.remove(\"btn-star__icon--full\");\n    starBtn.querySelector(\"use\").setAttribute(\"href\", `${icons}#icon-star`);\n  }\n\n  #generateCheckboxMarkup(peak) {\n    const markup = `\n    <li>\n      <label class=\"form-new-entry__checkbox-container\">${peak.name}\n        <input type=\"checkbox\" value=\"${peak.id}\"/>\n        <span class=\"form-new-entry__checkmark\"></span>\n      </label>\n    </li>\n    `;\n    return markup;\n  }\n\n  #toggleStat(e) {\n    e.preventDefault();\n    const clicked = e.target.closest(\".btn-add-stat\");\n    if (!clicked) return;\n    const icon = clicked.querySelector(\"use\");\n    const row = this.#statRows.find(\n      (row) => row.dataset.stat === clicked.dataset.stat\n    );\n    if (row.classList.contains(\"invisible\")) {\n      row.classList.remove(\"invisible\");\n      icon.setAttribute(\"href\", `${icons}#icon-remove`);\n    } else {\n      row.classList.add(\"invisible\");\n      icon.setAttribute(\"href\", `${icons}#icon-add`);\n    }\n  }\n\n  #getCheckedPeaks() {\n    const allCheckboxesArr = [\n      ...this.#gridPeakCheckboxes.querySelectorAll(\"input\"),\n    ];\n    const checkedPeaksIDArr = allCheckboxesArr\n      .filter((checkbox) => checkbox.checked)\n      .map((checkbox) => +checkbox.value);\n    return checkedPeaksIDArr;\n  }\n\n  #getRating() {\n    return +this.#allStarButtons.filter(\n      (star) => star.dataset.filled === \"true\"\n    ).length;\n  }\n\n  #generateSelectRowMarkup(list) {\n    const markup = `<option value=\"${list.listID}\">${list.title}</option>`;\n    return markup;\n  }\n}\n\nexport default new newEntryView();\n","class MainView {\n  #containerMain = document.querySelector(\".container-main\");\n  #btnCloseContainer = this.#containerMain.querySelector(\".btn-close\");\n  #allContainers = document.querySelectorAll(\".container\");\n  #mapNavBtn = document.querySelector(\"#nav-btn-map\");\n  #allNavBtns = document.querySelectorAll(\".nav__btn\");\n\n  constructor() {\n    this.#addHandlerEscapeKeydown();\n    this.#addHandlerRemovePreload();\n  }\n\n  // PUBLIC METHODS\n\n  addHandlerPageLoad(handler) {\n    window.addEventListener(\"load\", function () {\n      window.location.pathname.slice(1) ||\n        this.window.history.replaceState(null, \"\", \"/map\");\n      handler();\n    });\n  }\n\n  addHandlerCloseContainer(handler) {\n    this.#btnCloseContainer.addEventListener(\"click\", handler);\n  }\n\n  addHandlerBtnBack(handler) {\n    this.#containerMain.addEventListener(\"click\", function (e) {\n      const btn = e.target.closest(\".btn-back\");\n      if (!btn) return;\n      handler(btn.dataset.display);\n    });\n  }\n\n  closeContainer() {\n    window.history.replaceState(null, \"\", \"/map\");\n    this.#containerMain.classList.add(\"hidden\");\n    this.#allContainers.forEach((container) =>\n      container.classList.add(\"hidden\")\n    );\n    this.#allNavBtns.forEach((btn) => btn.classList.remove(\"nav__btn--active\"));\n    this.#mapNavBtn.classList.add(\"nav__btn--active\");\n  }\n\n  // PRIVATE METHODS\n\n  #addHandlerEscapeKeydown() {\n    document.addEventListener(\n      \"keydown\",\n      function (e) {\n        e.key === \"Escape\" &&\n          !this.#containerMain.classList.contains(\"hidden\") &&\n          this.closeContainer();\n      }.bind(this)\n    );\n  }\n\n  #addHandlerRemovePreload() {\n    window.addEventListener(\n      \"load\",\n      function () {\n        this.#containerMain.classList.remove(\"preload\");\n      }.bind(this)\n    );\n  }\n}\n\nexport default new MainView();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"iPWdx\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8TcTG\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7TqKI\")).toString();","import mtnIconRed from \"url:../../img/mtn-icon-red.png\";\nimport mtnIconGreen from \"url:../../img/mtn-icon-green.png\";\nimport markerIcon from \"url:../../img/marker-icon.png\";\n\nclass MapView {\n  href = \"/map\";\n  #navBtn = document.querySelector(\"#nav-btn-map\");\n  #allNavBtns = document.querySelectorAll(\".nav__btn\");\n  #map;\n  #markersArr = [];\n  #markersLayer;\n  #data;\n  #locationMarker;\n  #btnLocation = document.querySelector(\".btn-location\");\n  #btnLoadData = document.querySelector(\"#btn-load-data-map\");\n  #btnClearData = document.querySelector(\"#btn-clear-data-map\");\n\n  // PUBLIC METHODS\n\n  addHandlerNavClick(handler) {\n    this.#navBtn.addEventListener(\n      \"click\",\n      function () {\n        this.#allNavBtns.forEach((btn) =>\n          btn.classList.remove(\"nav__btn--active\")\n        );\n        this.#navBtn.classList.add(\"nav__btn--active\");\n        handler();\n      }.bind(this)\n    );\n  }\n\n  addHandlerLoadData(handler) {\n    this.#btnLoadData.addEventListener(\"click\", handler);\n  }\n\n  addHandlerClearAllData(handler) {\n    this.#btnClearData.addEventListener(\"click\", handler);\n  }\n\n  addHandlerGetLocation(handler) {\n    this.#btnLocation.addEventListener(\"click\", handler);\n  }\n\n  loadMap() {\n    this.#map = new L.Map(\"map\", {\n      zoomControl: false,\n    }).setView([39.402244340292775, -108.45703125000001], 4);\n\n    L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 19,\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    L.control\n      .zoom({\n        position: \"bottomright\",\n      })\n      .addTo(this.#map);\n  }\n\n  setMapView(coords) {\n    this.#map.setView(coords, 16);\n    const icon = L.icon({\n      iconUrl: markerIcon,\n      iconAnchor: [0, 41],\n      popupAnchor: [12, -20],\n    });\n    this.#locationMarker = new L.Marker(coords, {\n      icon: icon,\n    });\n\n    this.#locationMarker.addTo(this.#map);\n  }\n\n  addLocationPopup(address) {\n    this.#locationMarker\n      .bindPopup(L.popup({}))\n      .setPopupContent(`<div class='location-popup'>${address}</div>`);\n    this.#locationMarker.on(\"mouseover\", function () {\n      this.openPopup();\n    });\n    this.#locationMarker.on(\"click\", function () {\n      this.openPopup();\n    });\n    this.#locationMarker.openPopup();\n  }\n\n  plotPeaksOnMap(data) {\n    this.#data = data.data;\n    this.clearMap();\n    this.#createMarkerLayer();\n    this.#map.addLayer(this.#markersLayer);\n    this.#map.fitBounds(this.#markersLayer.getBounds(), {\n      paddingTopLeft: [650, 0],\n      maxZoom: 10,\n    });\n  }\n\n  clearMap() {\n    this.#markersLayer && this.#markersLayer.clearLayers();\n    this.#markersArr = [];\n  }\n\n  openPopup(peakId) {\n    const marker = this.#markersArr.find(\n      (marker) => marker.options.id === +peakId\n    );\n    marker.openPopup();\n  }\n\n  // PRIVATE METHODS\n\n  #createMarker(peak) {\n    const mtnIcon = L.icon({\n      iconUrl: `${peak.completed ? mtnIconGreen : mtnIconRed}`,\n      iconSize: [25, 20],\n    });\n    const marker = new L.Marker([peak.lat, peak.long], {\n      icon: mtnIcon,\n      id: peak.id,\n      riseOnHover: true,\n    });\n    marker\n      .bindPopup(L.popup({}))\n      .setPopupContent(this.#generatePopupMarkup(peak));\n    marker.on(\"mouseover\", function () {\n      this.openPopup();\n    });\n    marker.on(\"click\", function () {\n      this.openPopup();\n    });\n    return marker;\n  }\n\n  #createMarkerLayer() {\n    this.#markersLayer = new L.featureGroup();\n    this.#data.peaks.forEach((peak) => {\n      const marker = this.#createMarker(peak);\n      this.#markersArr.push(marker);\n      this.#markersLayer.addLayer(marker);\n    });\n  }\n\n  #generatePopupMarkup(peak) {\n    const markup = `<div class='peak-popup' data-id=${peak.id}>\n        <span class='peak-popup__label-name'>${peak.name}</span>\n        <span class='peak-popup__label-elevation'>${peak.elevation.toLocaleString()} ft.</span>\n        ${\n          peak.completed\n            ? this.#generateCompletedDateMarkup(peak)\n            : this.#generateLogTripButtonMarkup(peak)\n        }\n      </div>`;\n    return markup;\n  }\n\n  #generateLogTripButtonMarkup(peak) {\n    const markup = `<button class='btn btn-text btn-text-green btn-log-trip' data-peak-id='${\n      peak.id\n    }' data-list-id='${this.#data.id}'>LOG TRIP</button>`;\n    return markup;\n  }\n\n  #generateCompletedDateMarkup(peak) {\n    const markup = `<span class=\"peak-popup__label-date\"><strong>Hiked On:</strong><br/>${peak.completedDate}</span>`;\n    return markup;\n  }\n}\n\nexport default new MapView();\n","import View from \"./view.js\";\n\nexport default class PeakListView extends View {\n  _navBtn = document.querySelector(\"#nav-btn-peak-lists\");\n\n  // PUBLIC METHODS\n\n  addHandlerSavedLists(handler) {\n    this._container.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".btn-save-peak-list\");\n      if (!clicked) return;\n      const { listId } = clicked.dataset;\n      handler(listId);\n    });\n  }\n\n  // PRIVATE METHODS\n\n  _generateProgressBarMarkup(list) {\n    const width = (list.numCompleted / list.peakCount) * 100;\n    const markup = `<div class='progress-bar'><div class='progress-bar__label'>${\n      Math.round(width * 10) / 10\n    }%</div><div class='progress-bar__progress' style=\"width:${width}%\"></div></div>\n      </div>`;\n    return markup;\n  }\n}\n","import icons from \"../../img/sprite.svg\";\nimport PeakListView from \"./peakListView.js\";\n\nclass PeakListPreviewView extends PeakListView {\n  href = \"/peak-list-preview\";\n  _container = document.querySelector(\".container-peak-list-preview\");\n  #data;\n  #previewType;\n  #page;\n  #numPages;\n  #previewGrid = document.querySelector(\".preview-list--peak-lists\");\n  #btnsWrapper = this._container.querySelector(\".preview-wrapper\");\n  #noSavedLists = document.querySelector(\".no-saved-lists\");\n\n  // PUBLIC METHODS\n\n  addHandlerPagination(handler) {\n    this.#btnsWrapper.addEventListener(\n      \"click\",\n      function (e) {\n        const clicked = e.target.closest(\".btn-pagination\");\n        if (!clicked) return;\n        handler(this.#previewType, +clicked.dataset.page);\n      }.bind(this)\n    );\n  }\n\n  addHandlerViewTable(handler) {\n    this.#previewGrid.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".btn-view-list\");\n      if (!clicked) return;\n      const { listId } = clicked.dataset;\n      handler(listId);\n    });\n  }\n\n  addHandlerPreviewType(handler) {\n    this.#btnsWrapper.addEventListener(\n      \"click\",\n      function (e) {\n        const clicked = e.target.closest(\".btn-text\");\n        if (!clicked) return;\n        const { previewType } = clicked.dataset;\n        handler(previewType, 1);\n      }.bind(this)\n    );\n  }\n\n  render(data) {\n    this.#data = data;\n    this.#previewType = data.previewType;\n    this.#previewGrid.innerHTML = \"\";\n    if (this.#data.data.length) {\n      this.#noSavedLists.classList.add(\"hidden\");\n      this.#previewGrid.classList.remove(\"hidden\");\n      this.#previewGrid.insertAdjacentHTML(\n        \"beforeend\",\n        this.#generatePreviewMarkup(this.#data.data)\n      );\n    } else {\n      this.#previewGrid.classList.add(\"hidden\");\n      this.#noSavedLists.classList.remove(\"hidden\");\n    }\n    this.#btnsWrapper.innerHTML = \"\";\n    this.#btnsWrapper.insertAdjacentHTML(\n      \"beforeend\",\n      this.#generateWrapperBtnMarkup()\n    );\n  }\n\n  // PRIVATE METHODS\n\n  #generatePreviewMarkup() {\n    return this.#data.data\n      .map((list) => this.#generateSinglePreviewMarkup(list))\n      .join(\"\");\n  }\n\n  #generateSinglePreviewMarkup(list) {\n    const markup = `<li class=\"preview-list__entry\">\n      <button class=\"btn btn-icon btn-save-peak-list\" data-list-id='${\n        list.listID\n      }'>\n        <svg class=\"btn-icon__icon\">\n          <use href=\"${icons}#icon-${list.saved ? \"remove\" : \"add\"}\"></use>\n        </svg>\n      </button>\n      <div class=\"preview-list__info\">\n        <h2 class=\"preview-list__label-primary\"><strong>${\n          list.title\n        }</strong></h2>\n        <span class=\"preview-list__label-secondary\">${list.numCompleted} of ${\n      list.peakCount\n    } Peaks</span>\n        ${this._generateProgressBarMarkup(list)}\n        <button class=\"btn btn--green btn-view btn-view-list\" data-list-id=\"${\n          list.listID\n        }\">VIEW</button>\n    </li>`;\n    return markup;\n  }\n\n  #generateWrapperBtnMarkup() {\n    const curPage = this.#data.page;\n    const numPages = this.#data.numPages;\n\n    // First page, other pages\n    if (curPage === 1 && numPages > 1) {\n      const markup = `\n      ${this.#generatePreviewButtonMarkup()}\n        <button data-page=\"2\" class=\"btn btn-pagination btn-pagination--next\">\n          <span>Page 2</span>\n        </button>`;\n      return markup;\n    }\n\n    // Last page, other pages\n    if (curPage === numPages && numPages > 1) {\n      const markup = `\n        <button data-page=\"${\n          numPages - 1\n        }\" class=\"btn btn-pagination btn-pagination--prev\">\n          <span>Page ${numPages - 1}</span>\n        </button>\n        ${this.#generatePreviewButtonMarkup()}`;\n      return markup;\n    }\n\n    // First page, no other pages\n    if (curPage === 1 && numPages === 1) {\n      const markup = this.#generatePreviewButtonMarkup();\n      return markup;\n    }\n\n    // Other page\n    if (curPage < numPages) {\n      const markup = `\n      <button data-page=\"${\n        curPage - 1\n      }\" class=\"btn btn-pagination btn-pagination--prev\">\n          <span>Page ${curPage - 1}</span>\n        </button>\n      ${this.#generatePreviewButtonMarkup()}\n        <button data-page=\"${\n          curPage + 1\n        }\" class=\"btn btn-pagination btn-pagination--next\">\n          <span>Page ${curPage + 1}</span>\n        </button>`;\n      return markup;\n    }\n  }\n\n  #generatePreviewButtonMarkup() {\n    const markup = `\n    <button class=\"btn btn-text btn-text--light btn-all-lists ${\n      this.#previewType === \"all\" ? \"btn-text--active\" : \"\"\n    }\" data-preview-type=\"all\">\n      All lists\n    </button>\n    <button class=\"btn btn-text btn-text--light btn-saved-lists ${\n      this.#previewType === \"saved\" ? \"btn-text--active\" : \"\"\n    }\" data-preview-type=\"saved\">\n      Saved lists\n    </button>`;\n    return markup;\n  }\n}\n\nexport default new PeakListPreviewView();\n","import icons from \"../../img/sprite.svg\";\nimport PeakListView from \"./peakListView.js\";\n\nclass PeakListTableView extends PeakListView {\n  href = \"/peak-list-table\";\n  #data;\n  _container = document.querySelector(\".container-peak-list-table\");\n  #containerHeading = this._container.querySelector(\".container__heading\");\n  #labelNumber = this._container.querySelector(\".peak-list__label-number\");\n  #progressBarWrapper = this._container.querySelector(\n    \".container__heading-progress-wrapper\"\n  );\n  #btnSaveListWrapper = this._container.querySelector(\n    \".container__heading-button-wrapper\"\n  );\n  #sortTableSelect = document.querySelector(\"#sort-table-select\");\n  #description = document.querySelector(\".peak-list-description\");\n  #tableBody = document.querySelector(\".peak-list-table__body\");\n\n  // PUBLIC METHODS\n\n  addHandlerRowHover(handler) {\n    this.#tableBody.addEventListener(\"mouseover\", function (e) {\n      const { peakId } = e.target.closest(\".peak-list-table__row\").dataset;\n      handler(peakId);\n    });\n  }\n\n  addHandlerLogTrip(handler) {\n    document.addEventListener(\n      \"click\",\n      function (e) {\n        const clicked = e.target.closest(\".btn-log-trip\");\n        if (!clicked) return;\n        const { listId, peakId } = clicked.dataset;\n        handler(listId, peakId);\n      }.bind(this)\n    );\n  }\n\n  addHandlerSortTable(handler) {\n    this.#sortTableSelect.addEventListener(\n      \"change\",\n      function (e) {\n        const sortType = e.target.value;\n        const listID = this.#data.listID;\n        handler(listID, sortType);\n      }.bind(this)\n    );\n  }\n\n  render(data) {\n    this.#data = data.data;\n    this.#sortTableSelect.value = this.#data.sortType;\n    this.#containerHeading.innerHTML = `${this.#data.title}`;\n    this.#labelNumber.innerHTML = `${this.#data.numCompleted} of ${\n      this.#data.peakCount\n    } Peaks`;\n    this.#progressBarWrapper.innerHTML = this._generateProgressBarMarkup(\n      this.#data\n    );\n    this.#btnSaveListWrapper.innerHTML = this.#generateSaveButtonMarkup();\n    this.#description.innerHTML = data.data.description;\n    this.#tableBody.innerHTML = this.#generateTableMarkup();\n  }\n\n  // PRIVATE METHODS\n\n  #generateTableMarkup() {\n    return this.#data.peaks\n      .map((peak) => this.#generateTableRowMarkup(peak))\n      .join(\"\");\n  }\n\n  #generateTableRowMarkup(peak) {\n    const markup = `<tr class=\"peak-list-table__row ${\n      peak.completed ? \"peak-list-table__row--complete\" : \"\"\n    }\" data-peak-id=\"${peak.id}\">\n        <td><strong>${peak.num}</strong></td>\n        <td style=\"text-align:left\">${peak.name}</td>\n        <td>${peak.state}</td>\n\n        <td>${peak.elevation.toLocaleString()}</td>\n        <td>${\n          peak.completed\n            ? `${peak.completedDate}`\n            : `<button class='btn btn-text btn-log-trip' data-peak-id='${\n                peak.id\n              }' data-list-id='${this.#data.listID}'>LOG TRIP</button>`\n        }</td>\n      </tr>`;\n    return markup;\n  }\n\n  #generateSaveButtonMarkup() {\n    const markup = `\n      <button class=\"btn btn-icon btn-save-peak-list\" data-list-id='${\n        this.#data.listID\n      }'>\n        <svg class=\"btn-icon__icon\">\n          <use href=\"${icons}#icon-${\n      this.#data.saved ? \"remove\" : \"add\"\n    }\"></use>\n        </svg>\n      </button>\n      <span>${this.#data.saved ? \"Remove from\" : \"Add to\"} my lists</span>`;\n    return markup;\n  }\n}\n\nexport default new PeakListTableView();\n","import icons from \"../../img/sprite.svg\";\n\nclass SidebarView {\n  #containerMain = document.querySelector(\".container-main\");\n  #sidebar = document.querySelector(\".sidebar\");\n  #btnSidebar = document.querySelector(\".sidebar__btn\");\n  #btnSidebarIcon = this.#btnSidebar.querySelector(\"use\");\n  #btnAbout = document.querySelector(\".btn-about\");\n\n  // PUBLIC METHODS\n\n  constructor() {\n    this.#addHandlerRemovePreload();\n  }\n\n  addHandlerSidebar(handler) {\n    this.#btnSidebar.addEventListener(\"click\", handler);\n  }\n\n  addHandlerBtnAbout(handler) {\n    this.#btnAbout.addEventListener(\"click\", handler);\n  }\n\n  toggleSidebar(sidebarHidden) {\n    [this.#sidebar, this.#containerMain].forEach(\n      (element) =>\n        (element.style.marginLeft = `${sidebarHidden ? \"-18.2rem\" : \"0\"}`)\n    );\n    this.#btnSidebarIcon.setAttribute(\n      \"href\",\n      `${icons}#icon-${sidebarHidden ? \"chevron-right\" : \"chevron-left\"}`\n    );\n  }\n\n  // PRIVATE METHODS\n\n  #addHandlerRemovePreload() {\n    window.addEventListener(\n      \"load\",\n      function () {\n        this.#sidebar.classList.remove(\"preload\");\n      }.bind(this)\n    );\n  }\n}\n\nexport default new SidebarView();\n","import View from \"./view.js\";\n\nclass StatsView extends View {\n  href = \"/stats\";\n  _navBtn = document.querySelector(\"#nav-btn-stats\");\n  _container = document.querySelector(\".container-stats\");\n  #data;\n  #allSelectValues;\n  #curSelectValues;\n  #noEntries;\n  #statsGrid = document.querySelector(\".stats-grid\");\n  #selectWrapper = this._container.querySelector(\".preview-wrapper\");\n  #listSelect;\n  #monthSelect;\n  #yearSelect;\n  #btnAddEntry = this._container.querySelector(\".btn-add-entry\");\n  #noEntriesMessage = this._container.querySelector(\".no-data__message\");\n  #noLogEntries = document.querySelector(\".no-stats\");\n\n  // PUBLIC METHODS\n\n  addHandlerAddEntry(handler) {\n    this.#btnAddEntry.addEventListener(\"click\", handler);\n  }\n\n  addHandlerLogSelects(handler) {\n    this.#selectWrapper.addEventListener(\n      \"change\",\n      function () {\n        const listID = this.#listSelect.value;\n        const month = this.#monthSelect.value;\n        const year = this.#yearSelect.value;\n        const currentSelectValues = { listID, month, year };\n        handler(currentSelectValues);\n      }.bind(this)\n    );\n  }\n\n  render(data) {\n    this.#data = data.data;\n    this.#allSelectValues = data.allSelectValues;\n    this.#curSelectValues = data.curSelectValues;\n    this.#noEntries = data.noEntries;\n    this.#statsGrid.innerHTML = \"\";\n    if (data.data.numberEntries > 0) {\n      this.#statsGrid.classList.remove(\"hidden\");\n      this.#noLogEntries.classList.add(\"hidden\");\n      this.#statsGrid.insertAdjacentHTML(\n        \"beforeend\",\n        this.#generateStatsMarkup()\n      );\n    } else {\n      this.#statsGrid.classList.add(\"hidden\");\n      this.#showNoEntriesMessage();\n    }\n    this.#selectWrapper.innerHTML = this.#generateSelectMarkup();\n    this.#listSelect = document.querySelector(\"#select-list-stats\");\n    this.#monthSelect = document.querySelector(\"#select-month-stats\");\n    this.#yearSelect = document.querySelector(\"#select-year-stats\");\n    this.#listSelect.value = this.#curSelectValues.listID;\n    this.#monthSelect.value = this.#curSelectValues.month;\n    this.#yearSelect.value = this.#curSelectValues.year;\n  }\n\n  // PRIVATE METHODS\n\n  #generateListSelectRowMarkup(list) {\n    const markup = `<option value=\"${list.listID}\">${list.title}</option>`;\n    return markup;\n  }\n\n  #generateMonthSelectRowMarkup(month) {\n    const markup = `<option value=\"${month.numeric}\">${month.alpha}</option>`;\n    return markup;\n  }\n\n  #generateYearSelectRowMarkup(year) {\n    const markup = `<option value=\"${year}\">${year}</option>`;\n    return markup;\n  }\n\n  #generateSelectMarkup() {\n    const markup = `\n      <label for=\"select-list-stats\">Filter by list:</label>\n      <select class=\"select-list\" id=\"select-list-stats\">\n        <option value=\"all\" selected>All lists</option>\n        ${this.#allSelectValues.lists\n          .map(this.#generateListSelectRowMarkup)\n          .join(\"\")}\n      </select>\n      <label for=\"select-month-stats\">Filter by date:</label>\n      <select id=\"select-month-stats\">\n        <option value=\"all\" selected>All Months</option>\n        ${this.#allSelectValues.months\n          .map(this.#generateMonthSelectRowMarkup)\n          .join(\"\")}\n      </select>\n      <select id=\"select-year-stats\">\n        <option value=\"all\" selected>All years</option>\n        ${this.#allSelectValues.years\n          .map(this.#generateYearSelectRowMarkup)\n          .join(\"\")}\n      </select>`;\n    return markup;\n  }\n\n  #generateStatsMarkup() {\n    const markup = `\n      <span class=\"stats-grid__label\">Number of Log Entries:</span>\n      <span>${this.#data.numberEntries} ${\n      this.#data.numberEntries === 1 ? \"entry\" : \"entries\"\n    }</span>\n      <span class=\"stats-grid__label\">Total Completed Peaks:</span>\n      <span>${this.#data.numberPeaks} ${\n      this.#data.numberPeaks === 1 ? \"peak\" : \"peaks\"\n    }</span>\n      <span class=\"stats-grid__label\">Total Distance:</span>\n      <span>${\n        this.#data.totalDistance ? `${this.#data.totalDistance} mi` : \"n/a\"\n      }</span>\n      <span class=\"stats-grid__label\">Total Elevation Gain:</span>\n      <span>${\n        this.#data.totalElevation\n          ? `${this.#data.totalElevation.toLocaleString()} ft`\n          : \"n/a\"\n      } </span>\n      <span class=\"stats-grid__label\">Total Time:</span>\n      <span>${\n        this.#data.totalTime ? `${this.#data.totalTime} hrs` : \"n/a\"\n      } </span>`;\n    return markup;\n  }\n\n  #showNoEntriesMessage() {\n    const message = `\n    You haven't added any log entries ${\n      this.#noEntries ? \"yet\" : \"that match the selected filters\"\n    }. ${this.#noEntries ? \"Click\" : \"Adjust the filters or click\"}\n     the button below to log ${this.#noEntries ? \"your first\" : \"a new\"} entry!\n    `;\n    this.#noEntriesMessage.innerHTML = message;\n    this.#noLogEntries.classList.remove(\"hidden\");\n  }\n}\n\nexport default new StatsView();\n","import * as model from \"./model.js\";\nimport logPreviewView from \"./views/logPreviewView.js\";\nimport logEntryView from \"./views/logEntryView.js\";\nimport newEntryView from \"./views/newEntryView.js\";\nimport mainView from \"./views/mainView.js\";\nimport mapView from \"./views/mapView.js\";\nimport modalView from \"./views/modalView.js\";\nimport peakListPreviewView from \"./views/peakListPreviewView.js\";\nimport peakListTableView from \"./views/peakListTableView.js\";\nimport sidebarView from \"./views/sidebarView.js\";\nimport statsView from \"./views/statsView.js\";\n\n/////////////////////////////////////////////////////////////////////////////////\n// MAIN VIEW\n\nconst controlPageLoad = function () {\n  const href = window.location.pathname.slice(1);\n  href === \"map\" && controlMap();\n  href === \"peak-list-preview\" && controlPeakListPreview();\n  href === \"peak-list-table\" && controlPeakListTable();\n  href === \"log-preview\" && controlLogPreview();\n  href === \"log-entry\" && controlLogEntry();\n  href === \"stats\" && controlStats();\n  href === \"new-entry\" && controlNewEntry();\n};\n\nconst controlGoBack = function (containerID) {\n  if (containerID === \"peak-list-preview\") {\n    model.loadPeakListPreviewData();\n    peakListPreviewView.render(\n      model.getListPreviewPage(model.state.peakPreview.previewType, 1)\n    );\n    peakListPreviewView.showContainer();\n  }\n  if (containerID === \"log-preview\") {\n    logPreviewView.render(\n      model.getLogPreviewPage(model.state.logPreview.curSelectValues, 1)\n    );\n    logPreviewView.showContainer();\n  }\n  mapView.clearMap();\n};\n\nconst controlLoadTestData = function () {\n  model.loadTestData();\n  logPreviewView.render(model.getLogPreviewPage());\n  logPreviewView.showContainer();\n};\n\nconst controlClearAllData = function () {\n  model.clearAllData();\n};\n\nconst controlOpenModal = function () {\n  modalView.openModal();\n};\n\nconst controlFirstVisit = function () {\n  model.firstVisit && modalView.openModal();\n  model.setSessionStorage();\n};\n\nconst controlSidebar = function () {\n  model.updateSidebarHidden();\n  sidebarView.toggleSidebar(model.state.sidebarHidden);\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// MAP\n\nconst controlMap = function () {\n  mainView.closeContainer();\n  mapView.clearMap();\n};\n\nconst controlLocation = async function () {\n  let latitude, longitude;\n  try {\n    const pos = await model.getCoords();\n    latitude = pos.coords.latitude;\n    longitude = pos.coords.longitude;\n    mapView.setMapView([latitude, longitude]);\n  } catch (err) {\n    alert(\n      \"Could not get your location. You must have location services enabled to use this feature.\"\n    );\n    console.error(err);\n    return;\n  }\n  try {\n    const res = await model.getAddress(latitude, longitude);\n    const address = res.display_name;\n    mapView.addLocationPopup(address);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// PEAK LIST PREVIEW\n\nconst controlPeakListPreview = function (\n  previewType = model.state.peakPreview.previewType,\n  page = 1\n) {\n  mapView.clearMap();\n  model.loadPeakListPreviewData();\n  peakListPreviewView.render(model.getListPreviewPage(previewType, page));\n  peakListPreviewView.showContainer();\n};\n\nconst controlLogTrip = function (listID, checkedID) {\n  model.loadMapData(\"list\", listID);\n  newEntryView.displayCheckboxes(model.getCheckboxData(listID, checkedID));\n  mapView.plotPeaksOnMap(model.state.map);\n  newEntryView.showContainer();\n};\n\nconst controlSavedListsPreview = function (listID) {\n  !model.state.savedLists.includes(listID)\n    ? model.addSavedList(listID)\n    : model.removeSavedList(listID);\n  model.loadPeakListPreviewData();\n  peakListPreviewView.render(model.getListPreviewPage());\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// PEAK LIST TABLE\n\nconst controlPeakListTable = function (\n  listID = model.state.peakTable.data.listID\n) {\n  model.loadTableData(listID);\n  model.loadMapData(\"list\", listID);\n  peakListTableView.render(model.state.peakTable);\n  mapView.plotPeaksOnMap(model.state.map);\n  peakListTableView.showContainer();\n};\n\nconst controlSavedListsTable = function (listID) {\n  !model.state.savedLists.includes(listID)\n    ? model.addSavedList(listID)\n    : model.removeSavedList(listID);\n  model.loadTableData(listID);\n  peakListTableView.render(model.state.peakTable);\n};\n\nconst controlTableRowHover = function (peakID) {\n  mapView.openPopup(peakID);\n};\n\nconst controlTableSort = function (listID, sortType) {\n  model.loadTableData(listID, sortType);\n  peakListTableView.render(model.state.peakTable);\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// LOG PREVIEW\n\nconst controlLogPreview = function (\n  curSelectValues = model.state.logPreview.curSelectValues,\n  page = 1\n) {\n  mapView.clearMap();\n  logPreviewView.render(model.getLogPreviewPage(curSelectValues, page));\n  logPreviewView.showContainer();\n};\n\nconst controlDeleteLogEntry = function (logID) {\n  model.removeLogEntry(logID);\n  mapView.clearMap();\n  logPreviewView.render(model.getLogPreviewPage());\n  logPreviewView.showContainer();\n};\n\nconst controlLogSelects = function (curSelectValues, page = 1) {\n  logPreviewView.render(model.getLogPreviewPage(curSelectValues, page));\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// LOG ENTRY\n\nconst controlLogEntry = function (logID = model.state.curLogEntry.logID) {\n  model.loadLogEntry(logID);\n  model.loadMapData(\"log\", logID);\n  logEntryView.render(model.state.curLogEntry);\n  mapView.plotPeaksOnMap(model.state.map);\n  logEntryView.showContainer();\n};\n\nconst controlLogViewBtns = function (type, id) {\n  model.loadMapData(type, id);\n  mapView.plotPeaksOnMap(model.state.map);\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// STATS\n\nconst controlStats = function () {\n  mapView.clearMap();\n  statsView.render(model.getStatsData());\n  statsView.showContainer();\n};\n\nconst controlStatsSelects = function (selectValues) {\n  statsView.render(model.getStatsData(selectValues));\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// NEW ENTRY\n\nconst controlNewEntry = function () {\n  if (model.state.newEntry.curSelectValue) {\n    model.loadMapData(\"list\", model.state.newEntry.curSelectValue);\n    newEntryView.displayCheckboxes(\n      model.getCheckboxData(model.state.newEntry.curSelectValue)\n    );\n    mapView.plotPeaksOnMap(model.state.map);\n  }\n  newEntryView.showContainer();\n};\n\nconst controlClearForm = function () {\n  model.resetNewEntryState();\n  newEntryView.clearForm();\n  mapView.clearMap();\n};\n\nconst controlFormAddEntry = function (formData) {\n  model.addLogEntry(formData);\n  model.loadMapData(\"log\", model.state.curLogEntry.logID);\n  logEntryView.render(model.state.curLogEntry);\n  mapView.plotPeaksOnMap(model.state.map);\n  logEntryView.showContainer();\n};\n\nconst controlNewEntryDate = function (date) {\n  newEntryView.changeDate(model.getDate(date));\n};\n\nconst controlFormSelect = function (listID) {\n  model.loadMapData(\"list\", listID);\n  newEntryView.displayCheckboxes(model.getCheckboxData(listID));\n  mapView.plotPeaksOnMap(model.state.map);\n};\n\nconst init = function () {\n  mapView.loadMap();\n  mapView.addHandlerNavClick(controlMap);\n  mapView.addHandlerGetLocation(controlLocation);\n  mapView.addHandlerLoadData(controlLoadTestData);\n  mapView.addHandlerClearAllData(controlClearAllData);\n\n  modalView.addHandlerLoadData(controlLoadTestData);\n\n  mainView.addHandlerCloseContainer(controlMap);\n  mainView.addHandlerBtnBack(controlGoBack);\n\n  mainView.addHandlerPageLoad(controlPageLoad);\n\n  sidebarView.addHandlerBtnAbout(controlOpenModal);\n  sidebarView.addHandlerSidebar(controlSidebar);\n  sidebarView.toggleSidebar(model.state.sidebarHidden);\n\n  peakListPreviewView.addHandlerViewTable(controlPeakListTable);\n  peakListPreviewView.addHandlerSavedLists(controlSavedListsPreview);\n  peakListPreviewView.addHandlerPreviewType(controlPeakListPreview);\n  peakListPreviewView.addHandlerPagination(controlPeakListPreview);\n\n  peakListPreviewView.addHandlerNavClick(controlPeakListPreview);\n  peakListTableView.addHandlerSortTable(controlTableSort);\n  peakListTableView.addHandlerRowHover(controlTableRowHover);\n  peakListTableView.addHandlerSavedLists(controlSavedListsTable);\n  peakListTableView.addHandlerLogTrip(controlLogTrip);\n\n  logPreviewView.addHandlerNavClick(controlLogPreview);\n  logPreviewView.addHandlerShowEntry(controlLogEntry);\n  logPreviewView.addHandlerDeleteEntry(controlDeleteLogEntry);\n  logPreviewView.addHandlerAddEntry(controlNewEntry);\n  logPreviewView.addHandlerLogSelects(controlLogSelects);\n  logPreviewView.addHandlerPagination(controlLogPreview);\n\n  logEntryView.addHandlerDeleteEntry(controlDeleteLogEntry);\n  logEntryView.addHandlerViewMap(controlLogViewBtns);\n\n  newEntryView.initializeListSelect(model.getListSelectData());\n  newEntryView.addHandlerNavClick(controlNewEntry);\n  newEntryView.addHandlerDate(controlNewEntryDate);\n  newEntryView.addHandlerPeakListSelect(controlFormSelect);\n  newEntryView.addHandlerAddEntry(controlFormAddEntry);\n  newEntryView.addHandlerClearForm(controlClearForm);\n\n  statsView.addHandlerLogSelects(controlStatsSelects);\n  statsView.addHandlerAddEntry(controlNewEntry);\n  statsView.addHandlerNavClick(controlStats);\n\n  controlFirstVisit();\n};\n\ninit();\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$48ed222ad1402641$exports","$1c54660d8914672a$exports","$b96fb41ae694c3a9$exports","$c46e47f8479275d3$exports","$bf5b318995a17984$exports","$2d90cc7a78ab78a5$exports","$5122c08a5066d666$exports","$d6e4c6226fac3a9d$exports","$0e3d2784bd1ba2e4$exports","$8627607136ac9d84$var$PeakList","constructor","data","this","title","listID","center","zoom","peakCount","peaks","description","$8627607136ac9d84$export$7ec75f2dccfbf183","$parcel$interopDefault","$8627607136ac9d84$export$3de09edcb98d4f84","Map","flatMap","peakList","map","peak","values","sort","a","b","toLowerCase","localeCompare","$9d76df54ecc894c2$export$7b735fea22fb3db1","formData","logID","lists","peakIDs","forEach","peakID","push","find","stats","elevation","distance","minutes","hours","notes","rating","setPeakString","setDate","date","setStats","peakNames","name","peakString","slice","join","fullDate","Date","day","Intl","DateTimeFormat","format","month","numeric","alpha","year","time","Math","round","avgSpeed","avgElevation","$776e14004b98fe74$exports","$bcf5b9f62c105673$export$2e2bcd8739ae039","modal","document","querySelector","overlay","btnClose","btnLoadData","btnStartScratch","addHandlerCloseModal","addHandlerLoadData","handler","addEventListener","closeModal","bind","openModal","classList","remove","add","$0f1d4402dffacf5b$export$ca000e230c0caa3e","listCounts","allLogEntries","completedPeaks","savedLists","sidebarHidden","allSelectValues","months","years","peakPreview","previewType","page","resPerPage","peakTable","sortType","logPreview","curSelectValues","entries","curLogEntry","newEntry","curSelectValue","$0f1d4402dffacf5b$export$a26d33daaca12f4a","$0f1d4402dffacf5b$var$sortPeakList","list","state","$0f1d4402dffacf5b$var$getLogEntry","entry","$0f1d4402dffacf5b$var$filterLogEntries","filter","some","$0f1d4402dffacf5b$var$getMatchingLists","listMatches","$0f1d4402dffacf5b$var$increaseListCounts","includes","$0f1d4402dffacf5b$var$setLocalStorage","localStorage","setItem","stringify","$0f1d4402dffacf5b$export$efb6fdfbf9b50fa1","type","logMatch","peakObj","completed","completedDate","$0f1d4402dffacf5b$export$6c3df0174020cea2","$0f1d4402dffacf5b$export$a9d160c95f392539","splice","indexOf","$0f1d4402dffacf5b$export$9edcedc1e8790593","saved","numCompleted","$0f1d4402dffacf5b$export$7e96b11c174cab90","start","end","allData","numPages","ceil","$0f1d4402dffacf5b$export$facd8360026737dd","num","$0f1d4402dffacf5b$export$607e31f2b4813a7f","peaklistObj","peakListID","$0f1d4402dffacf5b$export$84d24be07dc3f990","noEntries","$0f1d4402dffacf5b$export$185e652f798f50e2","numberEntries","numberPeaks","Set","totalDistance","reduce","acc","cur","totalElevation","totalTime","$0f1d4402dffacf5b$export$81ee0326c62c7930","checkedID","curCheckedID","$0f1d4402dffacf5b$export$5ecf5119e31f8347","$0f1d4402dffacf5b$export$f4cc72695e6df27a","max","allLists","listObj","obj","$0f1d4402dffacf5b$var$setLogEntryLists","unshift","$0f1d4402dffacf5b$export$ec727720e712cbf7","allMonths","getItem","sessionStorage","firstVisit","$b4f8f515098290ea$exports","URL","resolve","import","meta","url","toString","$b2d7157267813d3a$export$2e2bcd8739ae039","href","_navBtn","_container","_allContainers","querySelectorAll","_containerMain","_allNavBtns","addHandlerNavClick","showContainer","window","history","replaceState","container","btn","hideContainer","$8ea54db9fb242c1c$export$2e2bcd8739ae039","addHandlerDeleteEntry","e","clicked","target","closest","confirm","logId","dataset","_generateDeleteButtonMarkup","size","$063ec7a661e33df7$export$2e2bcd8739ae039","previewGrid","listSelect","monthSelect","yearSelect","allSelects","selectWrapper","btnAddEntry","noEntriesMessage","noLogEntries","addHandlerAddEntry","addHandlerShowEntry","addHandlerLogSelects","value","addHandlerPagination","render","innerHTML","generateSelectWrapperMarkup","insertAdjacentHTML","generatePreviewMarkup","showNoEntriesMessage","generateSinglePreviewMarkup","generateListSelectRowMarkup","generateMonthSelectRowMarkup","generateYearSelectRowMarkup","curPage","generateSelectMarkup","message","$95bfa2fbd86df866$export$2e2bcd8739ae039","logEntryEl","logEntryLabelNumber","logEntryHeading","btnDeleteWrapper","peakListGrid","addHandlerViewMap","textContent","generateLogEntryMarkup","generatePeakListMarkup","generatePeaksMarkup","toLocaleString","generateRatingMarkup","markup1","i1","entry1","markup2","entry2","markup3","$d166ed2563f0a62f$export$2e2bcd8739ae039","gridDate","gridPeakCheckboxes","gridStats","statRows","statRowIcons","statBtns","inputDate","chooseListSelect","inputElevation","inputDistance","inputHours","inputMinutes","inputNotes","wrapperStars","allStarIcons","allStarButtons","formNewEntry","btnClearForm","super","addHandlerToggleStat","addHandlerStarMouseover","addHandlerStarMouseout","addHandlerStarClick","addHandlerClearForm","addHandlerDate","preventDefault","trim","addHandlerPeakListSelect","alert","getTime","getCheckedPeaks","getRating","clearForm","changeDate","starBtn","clearStar","filled","icon","row","reset","displayCheckboxes","generateCheckboxMarkup","input","checked","initializeListSelect","generateSelectRowMarkup","toggleStat","handleStarMouseOver","handleStarMouseOut","handleStarClick","hovered","fillStar","starBtn1","e1","starBtn2","starBtn3","setAttribute","starBtn4","e2","clicked1","stat","contains","checkbox","star","$6fdf9156372b0124$export$2e2bcd8739ae039","containerMain","btnCloseContainer","allContainers","mapNavBtn","allNavBtns","addHandlerEscapeKeydown","addHandlerRemovePreload","addHandlerPageLoad","location","pathname","addHandlerCloseContainer","addHandlerBtnBack","display","closeContainer","key","$5a77dfbe55474547$exports","$ef67a7a32827d3fa$exports","$af404b75bee524d1$exports","$716941e1f0265cb4$export$2e2bcd8739ae039","navBtn","markersArr","markersLayer","locationMarker","btnLocation","btnClearData","addHandlerClearAllData","addHandlerGetLocation","loadMap","L","zoomControl","setView","tileLayer","maxZoom","attribution","addTo","control","position","setMapView","coords","iconUrl","iconAnchor","popupAnchor","Marker","addLocationPopup","address","bindPopup","popup","setPopupContent","on","openPopup","plotPeaksOnMap","clearMap","createMarkerLayer","addLayer","fitBounds","getBounds","paddingTopLeft","clearLayers","peakId","marker","options","createMarker","mtnIcon","iconSize","lat","long","riseOnHover","generatePopupMarkup","featureGroup","peak1","generateCompletedDateMarkup","generateLogTripButtonMarkup","peak2","peak3","$1bcc6a30cf10e5c9$export$2e2bcd8739ae039","addHandlerSavedLists","listId","_generateProgressBarMarkup","width","$9d590e17e8c7b16a$export$2e2bcd8739ae039","btnsWrapper","noSavedLists","addHandlerViewTable","addHandlerPreviewType","generateWrapperBtnMarkup","generatePreviewButtonMarkup","$b38b7893ee55a695$export$2e2bcd8739ae039","containerHeading","labelNumber","progressBarWrapper","btnSaveListWrapper","sortTableSelect","tableBody","addHandlerRowHover","addHandlerLogTrip","addHandlerSortTable","generateSaveButtonMarkup","generateTableMarkup","generateTableRowMarkup","$ea9152ebdcdab405$export$2e2bcd8739ae039","sidebar","btnSidebar","btnSidebarIcon","btnAbout","addHandlerSidebar","addHandlerBtnAbout","toggleSidebar","element","style","marginLeft","$fd3b802b6fc95ceb$export$2e2bcd8739ae039","statsGrid","generateStatsMarkup","$f50bd1f2915ed0f2$var$controlPageLoad","$f50bd1f2915ed0f2$var$controlMap","$f50bd1f2915ed0f2$var$controlPeakListPreview","$f50bd1f2915ed0f2$var$controlPeakListTable","$f50bd1f2915ed0f2$var$controlLogPreview","$f50bd1f2915ed0f2$var$controlLogEntry","$f50bd1f2915ed0f2$var$controlStats","$f50bd1f2915ed0f2$var$controlNewEntry","$f50bd1f2915ed0f2$var$controlGoBack","containerID","$f50bd1f2915ed0f2$var$controlLoadTestData","$f50bd1f2915ed0f2$var$controlClearAllData","clear","reload","$f50bd1f2915ed0f2$var$controlOpenModal","$f50bd1f2915ed0f2$var$controlFirstVisit","$f50bd1f2915ed0f2$var$controlSidebar","$f50bd1f2915ed0f2$var$controlLocation","async","latitude","longitude","pos","Promise","reject","navigator","geolocation","getCurrentPosition","$0f1d4402dffacf5b$export$39e042fd83f1b62e","err","console","error","lon","response","fetch","ok","status","json","$0f1d4402dffacf5b$export$88411125f012957a","display_name","err1","$f50bd1f2915ed0f2$var$controlLogTrip","$f50bd1f2915ed0f2$var$controlSavedListsPreview","$f50bd1f2915ed0f2$var$controlSavedListsTable","$f50bd1f2915ed0f2$var$controlTableRowHover","$f50bd1f2915ed0f2$var$controlTableSort","$f50bd1f2915ed0f2$var$controlDeleteLogEntry","$f50bd1f2915ed0f2$var$controlLogSelects","$0f1d4402dffacf5b$export$94f5adac15db6865","$f50bd1f2915ed0f2$var$controlLogViewBtns","$f50bd1f2915ed0f2$var$controlStatsSelects","selectValues","$f50bd1f2915ed0f2$var$controlClearForm","$f50bd1f2915ed0f2$var$controlFormAddEntry","$f50bd1f2915ed0f2$var$controlNewEntryDate","now","$0f1d4402dffacf5b$export$aa350b96d91cd94","$f50bd1f2915ed0f2$var$controlFormSelect"],"version":3,"file":"index.f51fc5cb.js.map"}