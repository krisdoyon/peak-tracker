function e(e,t,a,n){Object.defineProperty(e,t,{get:a,set:n,enumerable:!0,configurable:!0})}function t(e){return e&&e.__esModule?e.default:e}var a="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},n={},l={},s=a.parcelRequiree77b;null==s&&((s=function(e){if(e in n)return n[e].exports;if(e in l){var t=l[e];delete l[e];var a={id:e,exports:{}};return n[e]=a,t.call(a.exports,a,a.exports),a.exports}var s=new Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}).register=function(e,t){l[e]=t},a.parcelRequiree77b=s),s.register("dRo73",(function(t,a){var n,l;e(t.exports,"register",(()=>n),(e=>n=e)),e(t.exports,"resolve",(()=>l),(e=>l=e));var s={};n=function(e){for(var t=Object.keys(e),a=0;a<t.length;a++)s[t[a]]=e[t[a]]},l=function(e){var t=s[e];if(null==t)throw new Error("Could not resolve bundle with id "+e);return t}})),s("dRo73").register(JSON.parse('{"iGHC6":"index.3a0aa52b.js","afYtt":"sprite.f7117ab3.svg","6poQO":"sprite.f7117ab3.svg","abS4L":"mtn-icon-red.e90a5dc3.png","2eIQh":"mtn-icon-green.47e0be93.png"}'));class i{constructor(e,t,a,n,l){this.title=e,this.listID=t,this.peaks=a,this.peakCount=a.length,this.center=n,this.zoom=l}}const r=new i("Colorado 14ers","co14",[{id:180381,name:"Mt. Elbert",lat:39.1178687,long:-106.4452569,elevFeet:14426,elevMeters:4397,state:"CO"},{id:180119,name:"Mt. Massive",lat:39.1873242,long:-106.4756085,elevFeet:14419,elevMeters:4395,state:"CO"},{id:189179,name:"Mt. Harvard",lat:38.9243492,long:-106.3206758,elevFeet:14406,elevMeters:4391,state:"CO"},{id:192735,name:"Blanca Peak",lat:37.5775609,long:-105.4855987,elevFeet:14347,elevMeters:4373,state:"CO"},{id:180393,name:"La Plata Peak",lat:39.0293628,long:-106.4731089,elevFeet:14334,elevMeters:4369,state:"CO"},{id:188678,name:"Uncompahgre Peak",lat:38.0714529,long:-107.4625289,elevFeet:14308,elevMeters:4361,state:"CO"},{id:181827,name:"Grays Peak",lat:39.6337372,long:-105.8173702,elevFeet:14275,elevMeters:4351,state:"CO"},{id:179667,name:"Quandary Peak",lat:39.3972537,long:-106.1063989,elevFeet:14262,elevMeters:4347,state:"CO"},{id:181829,name:"Torreys Peak",lat:39.6426923,long:-105.8211948,elevFeet:14265,elevMeters:4348,state:"CO"},{id:189455,name:"Mt. Antero",lat:38.6740472,long:-106.2462488,elevFeet:14249,elevMeters:4343,state:"CO"},{id:204979,name:"Longs Peak",lat:40.2548614,long:-105.6162397,elevFeet:14262,elevMeters:4347,state:"CO"},{id:187461,name:"Mt. Wilson",lat:37.8392056,long:-107.9915763,elevFeet:14255,elevMeters:4345,state:"CO"},{id:179957,name:"Mt. Cameron",lat:39.3463459,long:-106.1189002,elevFeet:14232,elevMeters:4338,state:"CO"},{id:189451,name:"Mt. Shavano",lat:38.6189805,long:-106.2392197,elevFeet:14222,elevMeters:4335,state:"CO"},{id:189170,name:"Mt. Belford",lat:38.9605767,long:-106.3607818,elevFeet:14170,elevMeters:4319,state:"CO"},{id:189458,name:"Mt. Princeton",lat:38.7491503,long:-106.2424463,elevFeet:14196,elevMeters:4327,state:"CO"},{id:189198,name:"Mt. Yale",lat:38.8441725,long:-106.3139015,elevFeet:14193,elevMeters:4326,state:"CO"},{id:203951,name:"Crestone Needle",lat:37.9646991,long:-105.5767188,elevFeet:14166,elevMeters:4318,state:"CO"},{id:179961,name:"Mt. Bross",lat:39.3349948,long:-106.1071665,elevFeet:14176,elevMeters:4321,state:"CO"},{id:176576,name:"El Diente Peak",lat:37.8394323,long:-108.0053368,elevFeet:14140,elevMeters:4310,state:"CO"},{id:204778,name:"Kit Carson Mountain",lat:37.9796989,long:-105.6026169,elevFeet:14186,elevMeters:4324,state:"CO"},{id:189171,name:"Mt. Oxford",lat:38.9647934,long:-106.3387735,elevFeet:14140,elevMeters:4310,state:"CO"},{id:203948,name:"Tabeguache Peak",lat:38.6256209,long:-106.2506089,elevFeet:14114,elevMeters:4302,state:"CO"},{id:196432,name:"Mt. Sneffels",lat:38.0038447,long:-107.7922734,elevFeet:14150,elevMeters:4313,state:"CO"},{id:204685,name:"Mt. Democrat",lat:39.3394723,long:-106.1398604,elevFeet:14144,elevMeters:4311,state:"CO"},{id:175209,name:"Capitol Peak",lat:39.1501588,long:-107.0827488,elevFeet:14117,elevMeters:4303,state:"CO"},{id:204770,name:"Pikes Peak",lat:38.8405839,long:-105.0449035,elevFeet:14114,elevMeters:4302,state:"CO"},{id:175555,name:"Snowmass Mountain",lat:39.1186541,long:-107.0664035,elevFeet:14107,elevMeters:4300,state:"CO"},{id:187990,name:"Windom Peak",lat:37.621313,long:-107.5917613,elevFeet:14084,elevMeters:4293,state:"CO"},{id:187988,name:"Mt. Eolus",lat:37.6216871,long:-107.6225967,elevFeet:14088,elevMeters:4294,state:"CO"},{id:196427,name:"Challenger Point",lat:37.9804151,long:-105.6066013,elevFeet:14091,elevMeters:4295,state:"CO"},{id:203886,name:"Mt. Columbia",lat:38.9038441,long:-106.2974478,elevFeet:14055,elevMeters:4284,state:"CO"},{id:189167,name:"Missouri Mountain",lat:38.9476104,long:-106.3785409,elevFeet:14062,elevMeters:4286,state:"CO"},{id:192424,name:"Humboldt Peak",lat:37.9761388,long:-105.5550716,elevFeet:14062,elevMeters:4286,state:"CO"},{id:182467,name:"Mt. Bierstadt",lat:39.5826432,long:-105.6687551,elevFeet:14058,elevMeters:4285,state:"CO"},{id:187404,name:"Handies Peak",lat:37.9129617,long:-107.5044497,elevFeet:14048,elevMeters:4282,state:"CO"},{id:192733,name:"Ellingwood Point",lat:37.5824644,long:-105.4926087,elevFeet:14062,elevMeters:4286,state:"CO"},{id:192730,name:"Mt. Lindsey",lat:37.583803,long:-105.4446957,elevFeet:14062,elevMeters:4286,state:"CO"},{id:193131,name:"Culebra Peak",lat:37.1222185,long:-105.1857672,elevFeet:14039,elevMeters:4279,state:"CO"},{id:180207,name:"Mt. Sherman",lat:39.2251336,long:-106.1699259,elevFeet:14019,elevMeters:4273,state:"CO"},{id:203320,name:"North Eolus",lat:37.6254409,long:-107.6210325,elevFeet:14058,elevMeters:4285,state:"CO"},{id:204780,name:"Little Bear Peak",lat:37.5665804,long:-105.4972025,elevFeet:14035,elevMeters:4278,state:"CO"},{id:187423,name:"Redcloud Peak",lat:37.9409934,long:-107.4217338,elevFeet:14039,elevMeters:4279,state:"CO"},{id:180300,name:"Conundrum Peak",lat:39.0144457,long:-106.86364,elevFeet:14032,elevMeters:4277,state:"CO"},{id:190463,name:"San Luis Peak",lat:37.9867825,long:-106.9312952,elevFeet:14016,elevMeters:4272,state:"CO"},{id:180264,name:"North Maroon Peak",lat:39.076094,long:-106.9870852,elevFeet:14016,elevMeters:4272,state:"CO"},{id:188661,name:"Wetterhorn Peak",lat:38.0606119,long:-107.5108819,elevFeet:13989,elevMeters:4264,state:"CO"},{id:187455,name:"Wilson Peak",lat:37.8602995,long:-107.9846517,elevFeet:14025,elevMeters:4275,state:"CO"},{id:179522,name:"Mt. of the Holy Cross",lat:39.4666238,long:-106.481692,elevFeet:13976,elevMeters:4260,state:"CO"},{id:189155,name:"Huron Peak",lat:38.9455489,long:-106.4381146,elevFeet:14012,elevMeters:4271,state:"CO"},{id:204748,name:"Sunshine Peak",lat:37.9227181,long:-107.4255595,elevFeet:14012,elevMeters:4271,state:"CO"},{id:179956,name:"Mt. Lincoln",lat:39.351504,long:-106.1113773,elevFeet:14285,elevMeters:4354,state:"CO"},{id:180301,name:"Castle Peak",lat:39.0096902,long:-106.8612901,elevFeet:14258,elevMeters:4346,state:"CO"},{id:204716,name:"Mt. Evans",lat:39.5881224,long:-105.6437272,elevFeet:14235,elevMeters:4339,state:"CO"},{id:180276,name:"Maroon Peak",lat:39.0706997,long:-106.9888794,elevFeet:14144,elevMeters:4311,state:"CO"},{id:187843,name:"Sunlight Peak",lat:37.6272835,long:-107.595797,elevFeet:14055,elevMeters:4284,state:"CO"},{id:180265,name:"Pyramid Peak",lat:39.0717385,long:-106.9499676,elevFeet:13993,elevMeters:4265,state:"CO"}],[38.76958342598271,-108.5459199218751],8),o=new i("Maine 4,000 Footers","me4k",[{id:561737,name:"Mt. Katahdin (Baxter Peak)",lat:45.9042845,long:-68.9213562,elevFeet:5259,elevMeters:1603,state:"ME"},{id:567535,name:"Mt. Katahdin (Hamlin Peak)",lat:45.92416,long:-68.92767,elevFeet:4757,elevMeters:1450,state:"ME"},{id:564525,name:"Crocker Mountain",lat:45.04712,long:-70.38273,elevFeet:4226,elevMeters:1288,state:"ME"},{id:572729,name:"Old Speck Mountain",lat:44.57092,long:-70.95365,elevFeet:4183,elevMeters:1275,state:"ME"},{id:572313,name:"North Brother",lat:45.95716,long:-68.98544,elevFeet:4140,elevMeters:1262,state:"ME"},{id:572033,name:"Bigelow Mountain (Avery Peak)",lat:45.14664,long:-70.27585,elevFeet:4068,elevMeters:1240,state:"ME"},{id:561068,name:"Mt. Abraham",lat:44.9722782,long:-70.3259007,elevFeet:4032,elevMeters:1229,state:"ME"},{id:581982,name:"South Crocker Mountain",lat:45.03619,long:-70.37607,elevFeet:4042,elevMeters:1232,state:"ME"},{id:576826,name:"Saddleback Horn",lat:44.95119,long:-70.48706,elevFeet:3999,elevMeters:1219,state:"ME"},{id:578873,name:"Mt. Redington",lat:45.02499,long:-70.3887,elevFeet:3999,elevMeters:1219,state:"ME"},{id:561033,name:"Spaulding Mountain",lat:45.0028335,long:-70.333401,elevFeet:4009,elevMeters:1222,state:"ME"},{id:576507,name:"Sugarloaf Mountain",lat:45.03169,long:-70.31333,elevFeet:4226,elevMeters:1288,state:"ME"},{id:578186,name:"Bigelow Mountain (West Peak)",lat:45.14676,long:-70.28835,elevFeet:4131,elevMeters:1259,state:"ME"},{id:574668,name:"Saddleback Mountain",lat:44.93641,long:-70.50461,elevFeet:4117,elevMeters:1255,state:"ME"}],[45.11352900692261,-72.22412109375001],8),d=new i("New Hampshire 4,000 Footers","nh4k",[{id:871352,name:"Mt. Washington",lat:44.2705781,long:-71.3033287,elevFeet:6273,elevMeters:1912,state:"NH"},{id:871380,name:"Mt. Adams",lat:44.3206546,long:-71.2915306,elevFeet:5791,elevMeters:1765,state:"NH"},{id:872101,name:"Mt. Jefferson",lat:44.304315,long:-71.3166955,elevFeet:5699,elevMeters:1737,state:"NH"},{id:872313,name:"Mt. Monroe",lat:44.2552125,long:-71.3214183,elevFeet:5351,elevMeters:1631,state:"NH"},{id:872247,name:"Mt. Madison",lat:44.3288173,long:-71.2767796,elevFeet:5351,elevMeters:1631,state:"NH"},{id:872150,name:"Mt. Lafayette",lat:44.1608182,long:-71.6444575,elevFeet:5236,elevMeters:1596,state:"NH"},{id:872176,name:"Mt. Lincoln",lat:44.1489451,long:-71.6445258,elevFeet:5085,elevMeters:1550,state:"NH"},{id:872710,name:"South Twin Mountain",lat:44.187556,long:-71.5548018,elevFeet:4888,elevMeters:1490,state:"NH"},{id:871629,name:"Carter Dome",lat:44.2673401,long:-71.1792622,elevFeet:4826,elevMeters:1471,state:"NH"},{id:872324,name:"Mt. Moosilauke",lat:44.024502,long:-71.8309164,elevFeet:4813,elevMeters:1467,state:"NH"},{id:871851,name:"Mt. Eisenhower",lat:44.2407341,long:-71.3501812,elevFeet:4757,elevMeters:1450,state:"NH"},{id:872408,name:"North Twin Mountain",lat:44.2025557,long:-71.5578576,elevFeet:4751,elevMeters:1448,state:"NH"},{id:871628,name:"Mt. Carrigain",lat:44.0936537,long:-71.4466959,elevFeet:4682,elevMeters:1427,state:"NH"},{id:871556,name:"Mt. Bond",lat:44.1528345,long:-71.5311895,elevFeet:4685,elevMeters:1428,state:"NH"},{id:872288,name:"Middle Carter Mountain",lat:44.3031109,long:-71.1678106,elevFeet:4603,elevMeters:1403,state:"NH"},{id:1,name:"West Bond Mountain",lat:44.1547633,long:-71.5436295,elevFeet:4540,elevMeters:1384,state:"NH"},{id:871925,name:"Mt. Garfield",lat:44.1872617,long:-71.6106785,elevFeet:4495,elevMeters:1370,state:"NH"},{id:872169,name:"Mt. Liberty",lat:44.1158901,long:-71.6420251,elevFeet:4439,elevMeters:1353,state:"NH"},{id:872698,name:"South Carter Mountain",lat:44.2897779,long:-71.176635,elevFeet:4419,elevMeters:1347,state:"NH"},{id:872940,name:"Wildcat Mountain (A peak)",lat:44.2595144,long:-71.201848,elevFeet:4423,elevMeters:1348,state:"NH"},{id:872006,name:"Mt. Hancock",lat:44.0836076,long:-71.4934302,elevFeet:4409,elevMeters:1344,state:"NH"},{id:872707,name:"Kinsman Mountain (South Peak)",lat:44.1228429,long:-71.7367508,elevFeet:4331,elevMeters:1320,state:"NH"},{id:873014,name:"Mt. Field",lat:44.196137,long:-71.4331049,elevFeet:4311,elevMeters:1314,state:"NH"},{id:872440,name:"Mt. Osceola",lat:44.0014482,long:-71.5359097,elevFeet:4314,elevMeters:1315,state:"NH"},{id:871894,name:"Mt. Flume",lat:44.1089459,long:-71.6278579,elevFeet:4318,elevMeters:1316,state:"NH"},{id:872495,name:"Mt. Pierce",lat:44.2265226,long:-71.3659732,elevFeet:4304,elevMeters:1312,state:"NH"},{id:872952,name:"Mt. Willey",lat:44.1835296,long:-71.4207354,elevFeet:4268,elevMeters:1301,state:"NH"},{id:7,name:"Bondcliff",lat:44.1405773,long:-71.5409195,elevFeet:4265,elevMeters:1300,state:"NH"},{id:872833,name:"Mt. Tripyramid",lat:43.9731659,long:-71.4427801,elevFeet:4163,elevMeters:1269,state:"NH"},{id:865897,name:"Mt. Cabot",lat:44.5060061,long:-71.4144768,elevFeet:4163,elevMeters:1269,state:"NH"},{id:871835,name:"Mt. Osceola (East Peak)",lat:44.0061704,long:-71.5206316,elevFeet:4134,elevMeters:1260,state:"NH"},{id:872294,name:"Mt. Tripyramid (Middle Peak)",lat:43.9646744,long:-71.4400968,elevFeet:4114,elevMeters:1254,state:"NH"},{id:873192,name:"Cannon Mountain",lat:44.156614,long:-71.6988025,elevFeet:4085,elevMeters:1245,state:"NH"},{id:871992,name:"Mt. Hale",lat:44.2217224,long:-71.5120232,elevFeet:4062,elevMeters:1238,state:"NH"},{id:872093,name:"Mt. Jackson",lat:44.2032358,long:-71.3754007,elevFeet:4042,elevMeters:1232,state:"NH"},{id:872824,name:"Mt. Tom",lat:44.2105188,long:-71.4460606,elevFeet:4042,elevMeters:1232,state:"NH"},{id:6,name:"Wildcat Mountain (D peak)",lat:44.2494098,long:-71.2235995,elevFeet:4062,elevMeters:1238,state:"NH"},{id:872330,name:"Mt. Moriah",lat:44.3406387,long:-71.1318489,elevFeet:4029,elevMeters:1228,state:"NH"},{id:872460,name:"Mt. Passaconaway",lat:43.9547374,long:-71.3808824,elevFeet:4045,elevMeters:1233,state:"NH"},{id:873045,name:"Galehead Mountain",lat:44.1848105,long:-71.5733908,elevFeet:4016,elevMeters:1224,state:"NH"},{id:872920,name:"Mt. Whiteface",lat:43.9339506,long:-71.4059066,elevFeet:3993,elevMeters:1217,state:"NH"},{id:870689,name:"Mt. Waumbek",lat:44.4328282,long:-71.4170236,elevFeet:3996,elevMeters:1218,state:"NH"},{id:872086,name:"Mt. Isolation",lat:44.2147796,long:-71.3092406,elevFeet:4003,elevMeters:1220,state:"NH"},{id:872778,name:"Mt. Tecumseh",lat:43.9665408,long:-71.5566086,elevFeet:4009,elevMeters:1222,state:"NH"},{id:2,name:"Mt. Hancock (South Peak)",lat:44.0732711,long:-71.4869445,elevFeet:4318,elevMeters:1316,state:"NH"},{id:3,name:"Kinsman Mountain (North Peak)",lat:44.1333547,long:-71.7368148,elevFeet:4293,elevMeters:1309,state:"NH"},{id:4,name:"Mt. Zealand",lat:44.1800207,long:-71.5215792,elevFeet:4260,elevMeters:1300,state:"NH"},{id:5,name:"Owls Head",lat:44.1443341,long:-71.6051095,elevFeet:4025,elevMeters:1227,state:"NH"}],[44.20681942220478,-72.09640502929689],10),v=new i("Vermont 4,000 Footers","vt4k",[{id:1461774,name:"Mt. Mansfield",lat:44.5436627,long:-72.8142903,elevFeet:4383,elevMeters:1336,state:"VT"},{id:1458086,name:"Killington Peak",lat:43.6045042,long:-72.8201012,elevFeet:4226,elevMeters:1288,state:"VT"},{id:1456724,name:"Camels Hump",lat:44.3195001,long:-72.8862309,elevFeet:4071,elevMeters:1241,state:"VT"},{id:1460843,name:"Mt. Ellen",lat:44.16005,long:-72.9288358,elevFeet:4078,elevMeters:1243,state:"VT"},{id:1460513,name:"Mt. Abraham",lat:44.1204328,long:-72.9360992,elevFeet:4012,elevMeters:1223,state:"VT"}],[44.08363928284644,-74.08355712890626],9),c=new i("New England State Highpoints","neHigh",[{id:871352,name:"Mt. Washington",lat:44.2705781,long:-71.3033287,elevFeet:6273,elevMeters:1912,state:"NH"},{id:579940,name:"Mt. Katahdin",lat:45.9042845,long:-68.9213562,elevFeet:5259,elevMeters:1603,state:"ME"},{id:1461774,name:"Mt. Mansfield",lat:44.5436627,long:-72.8142903,elevFeet:4383,elevMeters:1336,state:"VT"},{id:205348,name:"Bear Mountain",lat:42.0448138,long:-73.4548423,elevFeet:2323,elevMeters:708,state:"CT"},{id:1219566,name:"Jerimoth Hill",lat:41.8494158,long:-71.7788736,elevFeet:810,elevMeters:247,state:"RI"},{id:607448,name:"Mt. Greylock",lat:42.6371703,long:-73.1659399,elevFeet:3491,elevMeters:1064,state:"MA"}],[43.739352079154706,-76.03637695312501],7),g=new i("Adirondack High Peaks","adk46",[{id:973357,name:"Mount Marcy",lat:44.112733,long:-73.9237833,elevFeet:5344,elevMeters:1629,state:"NY"},{id:973340,name:"Algonquin Peak",lat:44.1436636,long:-73.9865357,elevFeet:5105,elevMeters:1556,state:"NY"},{id:973353,name:"Mount Haystack",lat:44.1056093,long:-73.9004196,elevFeet:4924,elevMeters:1501,state:"NY"},{id:973360,name:"Mount Skylight",lat:44.0994987,long:-73.9306986,elevFeet:4908,elevMeters:1496,state:"NY"},{id:973364,name:"Whiteface Mountain",lat:44.3658804,long:-73.9026456,elevFeet:4816,elevMeters:1468,state:"NY"},{id:973347,name:"Dix Mountain",lat:44.0822756,long:-73.7862471,elevFeet:4813,elevMeters:1467,state:"NY"},{id:973351,name:"Gray Peak",lat:44.1114427,long:-73.9348658,elevFeet:4800,elevMeters:1463,state:"NY"},{id:973355,name:"Iroquois Peak",lat:44.1369973,long:-73.9982027,elevFeet:4829,elevMeters:1472,state:"NY"},{id:973341,name:"Basin Mountain",lat:44.1211639,long:-73.8862527,elevFeet:4852,elevMeters:1479,state:"NY"},{id:973349,name:"Gothics",lat:44.1281079,long:-73.8570849,elevFeet:4724,elevMeters:1440,state:"NY"},{id:947091,name:"Mount Colden",lat:44.1269976,long:-73.9598674,elevFeet:4708,elevMeters:1435,state:"NY"},{id:2611110,name:"Giant Mountain",lat:44.161165,long:-73.720279,elevFeet:4623,elevMeters:1409,state:"NY"},{id:958617,name:"Nippletop",lat:44.0892202,long:-73.8159708,elevFeet:4554,elevMeters:1388,state:"NY"},{id:964468,name:"Santanoni Peak",lat:44.0822811,long:-74.1309855,elevFeet:4596,elevMeters:1401,state:"NY"},{id:962328,name:"Mount Redfield",lat:44.094777,long:-73.949866,elevFeet:4603,elevMeters:1403,state:"NY"},{id:971754,name:"Wright Peak",lat:44.1517187,long:-73.9801468,elevFeet:4564,elevMeters:1391,state:"NY"},{id:959830,name:"Panther Peak",lat:44.0983915,long:-74.132097,elevFeet:4455,elevMeters:1358,state:"NY"},{id:966981,name:"Table Top Mountain",lat:44.143663,long:-73.9070876,elevFeet:4295,elevMeters:1309,state:"NY"},{id:2651608,name:"Rocky Peak",lat:44.1542177,long:-73.7051718,elevFeet:4403,elevMeters:1342,state:"NY"},{id:971960,name:"Macomb Mountain",lat:44.0517211,long:-73.7801349,elevFeet:4396,elevMeters:1340,state:"NY"},{id:953279,name:"Hough Peak",lat:44.0694981,long:-73.7776352,elevFeet:4393,elevMeters:1339,state:"NY"},{id:964885,name:"Seward Mountain",lat:44.1597799,long:-74.1993239,elevFeet:4327,elevMeters:1319,state:"NY"},{id:956573,name:"Mount Marshall",lat:44.1275538,long:-74.0118142,elevFeet:4380,elevMeters:1335,state:"NY"},{id:942362,name:"Allen Mountain",lat:44.0708892,long:-73.9395871,elevFeet:4321,elevMeters:1317,state:"NY"},{id:943955,name:"Big Slide Mountain",lat:44.1822721,long:-73.8704202,elevFeet:4232,elevMeters:1290,state:"NY"},{id:949720,name:"Esther Mountain",lat:44.3869916,long:-73.8898673,elevFeet:4232,elevMeters:1290,state:"NY"},{id:968312,name:"Upper Wolfjaw Mountain",lat:44.1406072,long:-73.8451402,elevFeet:4190,elevMeters:1277,state:"NY"},{id:956118,name:"Lower Wolfjaw Mountain",lat:44.1483845,long:-73.8326399,elevFeet:4190,elevMeters:1277,state:"NY"},{id:966631,name:"Street Mountain",lat:44.1797741,long:-74.0437616,elevFeet:4022,elevMeters:1226,state:"NY"},{id:960289,name:"Phelps Mountain",lat:44.1569957,long:-73.9209775,elevFeet:4137,elevMeters:1261,state:"NY"},{id:948566,name:"Donaldson Mountain",lat:44.1539471,long:-74.210991,elevFeet:4062,elevMeters:1238,state:"NY"},{id:964894,name:"Seymour Mountain",lat:44.1578347,long:-74.1721003,elevFeet:4055,elevMeters:1236,state:"NY"},{id:964537,name:"Sawteeth",lat:44.1139417,long:-73.8504175,elevFeet:4114,elevMeters:1254,state:"NY"},{id:965737,name:"South Dix",lat:44.060054,long:-73.7743014,elevFeet:4088,elevMeters:1246,state:"NY"},{id:960993,name:"Porter Mountain",lat:43.7358981,long:-74.3129279,elevFeet:2503,elevMeters:763,state:"NY"},{id:947211,name:"Mount Colvin",lat:44.0939424,long:-73.8345829,elevFeet:4049,elevMeters:1234,state:"NY"},{id:949645,name:"Mount Emmons",lat:44.1436698,long:-74.2140464,elevFeet:4022,elevMeters:1226,state:"NY"},{id:949060,name:"Grace Peak",lat:44.0653314,long:-73.7573564,elevFeet:4006,elevMeters:1221,state:"NY"},{id:944215,name:"Blake Peak",lat:44.081443,long:-73.844583,elevFeet:3976,elevMeters:1212,state:"NY"},{id:946865,name:"Cliff Mountain",lat:44.1031102,long:-73.9751452,elevFeet:3940,elevMeters:1201,state:"NY"},{id:959076,name:"Nye Mountain",lat:44.1931062,long:-74.0240387,elevFeet:3871,elevMeters:1180,state:"NY"},{id:947539,name:"Couchsachraga Peak",lat:44.0956146,long:-74.1601539,elevFeet:3793,elevMeters:1156,state:"NY"},{id:948403,name:"Dial Mountain",lat:44.1058859,long:-73.7959703,elevFeet:4020,elevMeters:1213,state:"NY"},{id:970556,name:"Saddleback Mountain",lat:44.1264414,long:-73.8748634,elevFeet:4534,elevMeters:1382,state:"NY"},{id:942572,name:"Armstrong Mountain",lat:44.1347741,long:-73.8490291,elevFeet:4360,elevMeters:1329,state:"NY"},{id:945952,name:"Cascade Mountain",lat:44.2186594,long:-73.860143,elevFeet:4094,elevMeters:1248,state:"NY"}],[44.09153051045221,-74.57519531250001],10),u=new i("New England 4,000 Footers","ne4k",[...d.peaks,...o.peaks,...v.peaks],[44.54350521320822,-73.39753417968751],8),m=[r,o,d,v,c,g,u,new i("New England 100 Highest","ne100",[...u.peaks,{id:872622,name:"Sandwich Mountain",lat:43.9000705,long:-71.4981311,elevFeet:3983,elevMeters:1214,state:"NH"},{id:870370,name:"The Bulge",lat:44.5146604,long:-71.4082607,elevFeet:3937,elevMeters:1200,state:"NH"},{id:872374,name:"Mount Nancy",lat:44.1225582,long:-71.4047974,elevFeet:3894,elevMeters:1187,state:"NH"},{id:870384,name:"The Horn",lat:44.5180243,long:-71.4000978,elevFeet:3911,elevMeters:1192,state:"NH"},{id:870718,name:"Mount Weeks",lat:44.4616068,long:-71.3818967,elevFeet:3901,elevMeters:1189,state:"NH"},{id:872855,name:"Vose Spur",lat:44.1030664,long:-71.4346527,elevFeet:3848,elevMeters:1173,state:"NH"},{id:872798,name:"East Sleeper",lat:43.9542735,long:-71.4352909,elevFeet:3888,elevMeters:1185,state:"NH"},{id:872632,name:"Scar Ridge",lat:44.0291171,long:-71.5943792,elevFeet:3773,elevMeters:1150,state:"NH"},{id:872784,name:"The Cannon Balls",lat:44.1499416,long:-71.7102279,elevFeet:3766,elevMeters:1148,state:"NH"},{id:13,name:"South Weeks",lat:44.4423379,long:-71.3882565,elevFeet:3881,elevMeters:1183,state:"NH"},{id:14,name:"Peak Above the Nubble",lat:44.2229103,long:-71.561377,elevFeet:3812,elevMeters:1162,state:"NH"},{id:575826,name:"South Brother",lat:45.944212,long:-69.0017136,elevFeet:3960,elevMeters:1207,state:"ME"},{id:566912,name:"Goose Eye Mountain",lat:44.50269,long:-70.99938,elevFeet:3875,elevMeters:1181,state:"ME"},{id:566418,name:"Fort Mountain",lat:45.96218,long:-68.97473,elevFeet:3855,elevMeters:1175,state:"ME"},{id:578344,name:"White Cap Mountain",lat:45.23613,long:-70.81808,elevFeet:3848,elevMeters:1173,state:"ME"},{id:576827,name:"The Horns",lat:45.145,long:-70.32321,elevFeet:3806,elevMeters:1160,state:"ME"},{id:564149,name:"Mount Coe",lat:45.93371,long:-69.00901,elevFeet:3786,elevMeters:1154,state:"ME"},{id:565625,name:"East Kennebago Mountain",lat:45.12179,long:-70.59967,elevFeet:3783,elevMeters:1153,state:"ME"},{id:561542,name:"Baldpate Mountain",lat:44.609244,long:-70.892372,elevFeet:3812,elevMeters:1162,state:"ME"},{id:569102,name:"Kennebago Divide",lat:45.2183842,long:-70.8153464,elevFeet:3392,elevMeters:1034,state:"ME"},{id:565831,name:"Elephant Mountain",lat:44.76807,long:-70.78165,elevFeet:3760,elevMeters:1146,state:"ME"},{id:575683,name:"Snow Mountain",lat:45.16934,long:-70.82684,elevFeet:3783,elevMeters:1153,state:"ME"},{id:575684,name:"Snow Mountain",lat:45.29143,long:-70.70927,elevFeet:3966,elevMeters:1209,state:"ME"},{id:12,name:"Boundary Peak",lat:45.2670136,long:-70.8412558,elevFeet:3855,elevMeters:1175,state:"ME"},{id:1461270,name:"Pico Peak",lat:43.6395035,long:-72.8362132,elevFeet:3947,elevMeters:1203,state:"VT"},{id:1461479,name:"Stratton Mountain",lat:43.0862572,long:-72.9248856,elevFeet:3940,elevMeters:1201,state:"VT"},{id:1457995,name:"Jay Peak",lat:44.9244904,long:-72.5256705,elevFeet:3786,elevMeters:1154,state:"VT"},{id:1461816,name:"Equinox Mountain",lat:43.1659133,long:-73.1173951,elevFeet:3835,elevMeters:1169,state:"VT"},{id:1458422,name:"Mendon Peak",lat:43.5954453,long:-72.8454059,elevFeet:3845,elevMeters:1172,state:"VT"},{id:1460656,name:"Bread Loaf Mountain",lat:44.0021521,long:-72.9416037,elevFeet:3812,elevMeters:1162,state:"VT"},{id:1461622,name:"Mount Wilson",lat:44.0047016,long:-72.9256359,elevFeet:3766,elevMeters:1148,state:"VT"},{id:1456415,name:"Big Jay",lat:44.9158795,long:-72.5403939,elevFeet:3763,elevMeters:1147,state:"VT"},{id:1460797,name:"Dorset Mountain",lat:43.3092317,long:-73.0281585,elevFeet:3766,elevMeters:1148,state:"VT"}],[44.54350521320822,-73.39753417968751],8)],M=new i("All Peaks","all",[...new Set(m.flatMap((e=>e.peaks)))],[39.63953756436671,-107.7978515625],5);m.push(M);const h=new Map,p=new Map;M.peaks.forEach((e=>{h.set(e.id,e.name)})),M.peaks.forEach((e=>p.set(e.id,e.elevFeet))),m.sort(((e,t)=>e.title.toLowerCase().localeCompare(t.title.toLowerCase())));class k{peaks=[];constructor(e,t,a,n,l,s,i,r,o,d,v){this.date=new Date(e),this.peaks=[],t.forEach((e=>this.peaks.push({id:e,name:h.get(e),elevation:p.get(e)}))),this.listID=a,this.listTitle=n,this.elevation=+l,this.distance=+s,this.hours=+i,this.min=+r,this.notes=o,this.rating=+d,this.logID=v,this.#e()}#e(){const e=this.peaks.map((e=>e.name));this.mtnStr=e.length>1?e.slice(0,-1).join(", ")+" and "+e.slice(-1):e[0],this.shortDate=new Intl.DateTimeFormat("en-US",{day:"2-digit",year:"numeric",month:"2-digit"}).format(this.date),this.longDate=new Intl.DateTimeFormat("en-US",{day:"2-digit",year:"numeric",month:"long"}).format(this.date),this.hours&&this.min&&(this.time=Math.round(10*(this.hours+this.min/60))/10),this.distance&&this.time&&(this.avgSpeed=Math.round(this.distance/this.time*10)/10),this.elevation&&this.distance&&(this.avgElevation=Math.round(this.elevation/this.distance))}}const F={savedLists:[],logEntries:[],completedPeaks:[],listCounts:{},currentListView:"all"},b=function(e){return m.find((t=>t.listID===e))},f=function(e,t){const a=b(e);"elevation"===t&&a.peaks.sort(((e,t)=>t.elevFeet-e.elevFeet)),"alphabetical"===t&&a.peaks.sort(((e,t)=>e.name.toLowerCase().localeCompare(t.name.toLowerCase())))},y=function(e){f(e,"alphabetical");const t=b(e).peaks,a=t.slice(0,Math.ceil(t.length/2)),n=t.slice(Math.ceil(t.length/2)),l=[];for(const[e,s]of t.entries())a[e]&&l.push(a[e]),n[e]&&l.push(n[e]);return l},S=function(e){return F.logEntries.find((t=>t.logID===e))},w=function(){const e=function(e="all"){return"all"===e?m:"saved"===e?m.filter((e=>F.savedLists.includes(e.listID))):void 0}(F.currentListView).map((e=>({listID:e.listID,title:e.title,saved:!!F.savedLists.includes(e.listID),numCompleted:F.listCounts[e.listID],peakCount:e.peakCount})));return{previewType:F.currentListView,data:e}},C=function(){F.logEntries.sort(((e,t)=>new Date(t.date)-new Date(e.date)))},E=function(e){m.forEach((t=>{F.completedPeaks.includes(e)||t.peaks.some((t=>t.id===e))&&(F.listCounts[`${t.listID}`]+=1)}))},H=function(e){F.logEntries.flatMap((e=>e.peaks)).some((t=>t.id===e))||(F.completedPeaks.splice(F.completedPeaks.indexOf(e),1),m.filter((t=>t.peaks.some((t=>t.id===e)))).map((e=>e.listID)).forEach((e=>F.listCounts[e]--)))},P=function(){localStorage.setItem("logEntries",JSON.stringify(F.logEntries)),localStorage.setItem("completedPeaks",JSON.stringify(F.completedPeaks)),localStorage.setItem("listCounts",JSON.stringify(F.listCounts)),localStorage.setItem("savedLists",JSON.stringify(F.savedLists))};localStorage.logEntries&&(F.logEntries=JSON.parse(localStorage.getItem("logEntries"))),localStorage.completedPeaks&&(F.completedPeaks=JSON.parse(localStorage.getItem("completedPeaks"))),localStorage.listCounts&&(F.listCounts=JSON.parse(localStorage.getItem("listCounts"))),localStorage.savedLists&&(F.savedLists=JSON.parse(localStorage.getItem("savedLists"))),m.forEach((e=>{F.listCounts[`${e.listID}`]||(F.listCounts[`${e.listID}`]=0)})),P();var N;N=new URL(s("dRo73").resolve("afYtt"),import.meta.url).toString();var _,O=new class{#t;#a=document.querySelector(".log-entries-preview");#n=document.querySelector(".log-entry");#l=document.querySelector(".log-entry__label-number");#s=document.querySelector(".log-entry__heading");#i=document.querySelector(".container-log-preview").querySelector(".btn-add-entry");#r=document.querySelector(".no-log-entries");addHandlerAddEntry(e){this.#i.addEventListener("click",e)}addHandlerShowEntry(e){this.#a.addEventListener("click",function(t){const a=t.target.closest(".btn-view");if(!a)return;const{logId:n,listId:l}=a.closest(".preview-list__entry").dataset;e(+n,l)}.bind(this))}addHandlerDeleteEntry(e){this.#a.addEventListener("click",(function(t){const a=t.target.closest(".btn-delete-entry");if(a&&confirm("Are you sure you want to delete this entry?")){const{logId:t}=a.closest(".preview-list__entry").dataset;e(+t)}}))}renderLogPreview(e){this.#t=e,console.log(e),this.#a.innerHTML="",this.#t.length?(this.#r.classList.add("hidden"),this.#a.insertAdjacentHTML("beforeend",this.#o())):this.#r.classList.remove("hidden")}renderLogEntry(e){this.#n.innerHTML="",this.#l.textContent=`${e.peaks.length} ${e.peaks.length>1?"Peaks":"Peak"}`,this.#s.textContent=`${e.longDate}`,this.#n.insertAdjacentHTML("beforeend",this.#d(e))}#d(e){let a="";e.peaks.forEach((e=>a+=`<span class='log-entry__peak'>${e.name} - ${e.elevation.toLocaleString()} ft</span>`));let n="";if(e.rating){for(let a=0;a<e.rating;a++)n+=`<svg class="btn-star__icon btn-star__icon--full"><use href="${t(N)}#icon-star-solid"></use></svg>`;for(let a=0;a<5-e.rating;a++)n+=`<svg class="btn-star__icon"><use href="${t(N)}#icon-star"></use></svg>`}else n="n/a";return`\n      <span class="log-entry__label">Peak List:</span>\n      <span>${e.listTitle}</span>\n      <span class="log-entry__label">Peaks:</span>\n      <div class="log-entry__peaks">${a}</div>\n      <span class="log-entry__label">Distance:</span>\n      <span>${e.distance?e.distance+" mi":"n/a"}</span>\n      <span class="log-entry__label">Elevation Gain:</span>\n      <span>${e.elevation?e.elevation.toLocaleString()+" ft":"n/a"}</span>\n      <span class="log-entry__label">Time:</span>\n      <span>${e.time?e.time+" hrs":"n/a"}</span>\n      <span class="log-entry__label">Avg Speed:</span>\n      <span>${e.avgSpeed?e.avgSpeed+" mi/hr":"n/a"}</span>\n      <span class="log-entry__label">Avg Elevation Gain:</span>\n      <span>${e.avgElevation?e.avgElevation.toLocaleString()+" ft/mi":"n/a"}</span>\n      <span class="log-entry__label">Rating:</span>\n      <span>${n}</span>\n      <span class="log-entry__label">Notes:</span>\n      <span>${e.notes?e.notes:"n/a"}</span>`}#o(){return this.#t.map((e=>this.#v(e))).join("")}#v(e){return`<li class="preview-list__entry" data-log-id="${e.logID}" data-list-id="${e.listID}">\n              <button class='btn btn-icon btn-delete-entry'>\n                <svg class="btn-icon__icon">\n                  <use href="${t(N)}#icon-trash"></use></svg></button>\n\n              <div class="preview-list__info">\n                <h2 class="preview-list__label-primary"><strong>\n                  ${e.longDate} </strong> - ${e.peaks.length} ${e.peaks.length>1?"Peaks":"Peak"}\n                </h2>\n                <span\n                  class="preview-list__label-secondary"\n                >\n                  ${e.mtnStr}</span\n                >\n              </div>\n              \n              <button class="btn btn--green btn-view btn-view-log">VIEW</button>\n            </li>`}};_=new URL(s("dRo73").resolve("6poQO"),import.meta.url).toString();var D=new class{#c=document.querySelector(".form-new-entry__date-grid");#g=document.querySelector(".form-new-entry__checkbox-grid");#u=document.querySelector(".form-new-entry__stats-grid");#m=[...document.querySelectorAll(".form-new-entry__stat-row")];#M=[...this.#u.querySelectorAll(".btn-icon__icon")];#h=[...this.#u.querySelectorAll(".btn-add-stat")];#p=document.querySelector("#date");#k=document.querySelector("#choose-list");#F=document.querySelector("#elevation");#b=document.querySelector("#distance");#f=document.querySelector("#hours");#y=document.querySelector("#minutes");#S=document.querySelector("#notes");#L=document.querySelector(".form-new-entry__wrapper-stars");#w=[...document.querySelectorAll(".btn-star__icon")];#C=[...document.querySelectorAll(".btn-star")];#E=document.querySelector("#form-new-entry");#H=document.querySelector(".btn-clear-form");#i=document.querySelector("#add-entry");constructor(){this.#P(),this.#N(),this.#_(),this.#O()}addHandlerClearForm(e){this.#H.addEventListener("click",e)}addHandlerDate(e){this.#c.addEventListener("click",(function(t){t.preventDefault();const a=t.target.closest(".btn-date");if(!a)return;const n=a.textContent.toLowerCase().trim();e(n)}))}addHandlerPeakListSelect(e){this.#k.addEventListener("change",function(t){const a=t.target.value;e(a)}.bind(this))}addHandlerAddEntry(e){this.#i.addEventListener("click",function(t){if(t.preventDefault(),!this.#p.value)return void alert("Please enter a date");const a=this.#D();if(a.length<=0)return void alert("Choose at least one peak from a list");const n=[this.#p.value,a,this.#k.value,this.#k[this.#k.selectedIndex].textContent,+this.#F.value,+this.#b.value,+this.#f.value,+this.#y.value,this.#S.value,this.#T()];e(n,this.#k.value),this.clearForm()}.bind(this))}changeDate(e){this.#p.value=e}displayCheckboxes(e,t,a){if(this.#g.classList.remove("hidden"),this.#g.innerHTML="",e.forEach((e=>this.#g.insertAdjacentHTML("beforeend",`<input type="checkbox" value="${e.id}"/><label\n            for="title"\n            class="form__label--units"\n            >${e.name}\n          </label>`))),a){this.#k.value=t;[...this.#g.querySelectorAll("input")].find((e=>+e.value==+a)).checked="true"}}clearForm(){for(const e of this.#C)this.#$(e),e.dataset.filled="false";this.#g.innerHTML="",this.#g.classList.add("hidden"),this.#M.forEach((e=>e.innerHTML=`<use href="${t(_)}#icon-add"></use>`)),this.#m.forEach((e=>e.classList.add("invisible"))),this.#E.reset()}#P(){this.#u.addEventListener("click",this.#A.bind(this))}#A(e){e.preventDefault();const a=e.target.closest(".btn-add-stat");if(!a)return;const n=a.querySelector("use"),l=this.#m.find((e=>e.dataset.stat===a.dataset.stat));l.classList.contains("invisible")?(l.classList.remove("invisible"),n.setAttribute("href",`${t(_)}#icon-remove`)):(l.classList.add("invisible"),n.setAttribute("href",`${t(_)}#icon-add`))}#N(){this.#L.addEventListener("mouseover",this.#I.bind(this))}#_(){this.#L.addEventListener("mouseout",this.#q.bind(this))}#O(){this.#L.addEventListener("click",this.#B.bind(this))}#I(e){const t=e.target.closest(".btn-star");if(t)for(const e of this.#C)e.dataset.num<=t.dataset.num?this.#Y(e):this.#$(e)}#q(){for(const e of this.#C)"false"===e.dataset.filled?this.#$(e):this.#Y(e)}#B(e){e.preventDefault();const t=e.target.closest(".btn-star");if(t)for(const e of this.#C)e.dataset.num<=t.dataset.num?(this.#Y(e),e.dataset.filled="true"):(this.#$(e),e.dataset.filled="false")}#Y(e){e.querySelector("svg").classList.add("btn-star__icon--full"),e.querySelector("use").setAttribute("href",`${t(_)}#icon-star-solid`)}#$(e){e.querySelector("svg").classList.remove("btn-star__icon--full"),e.querySelector("use").setAttribute("href",`${t(_)}#icon-star`)}#D(){return[...this.#g.querySelectorAll("input")].filter((e=>e.checked)).map((e=>+e.value))}#T(){return+this.#C.filter((e=>"true"===e.dataset.filled)).length}};var T,$=new class{#x=document.querySelector(".container-main");#R=[...document.querySelectorAll(".container")];#W=document.querySelector(".btn-close");#V=document.querySelectorAll(".main-nav__btn");#j=document.querySelector(".main-nav__list");#G=!1;#J=document.querySelector(".sidebar");#K=document.querySelector(".sidebar__btn");#U=document.querySelector(".sidebar__btn--icon");constructor(){this.#z(),this.#Q()}addHandlerHideContainer(e){this.#W.addEventListener("click",(function(){e()}))}addHandlerBtnBack(e){this.#x.addEventListener("click",(function(t){const a=t.target.closest(".btn-back");a&&e(a.dataset.display)}))}addHandlerMainNav(e){this.#j.addEventListener("click",(function(t){const a=t.target.closest(".main-nav__btn");if(!a)return;const n=a.dataset.display;e(n)}))}showContainer(e){const t=this.#R.find((t=>t.classList.contains(`container-${e}`)));this.#R.forEach((e=>e.classList.add("hidden"))),this.#x.classList.remove("hidden"),t.classList.remove("hidden"),this.#V.forEach((e=>{e.classList.remove("main-nav__btn--active"),e.dataset.display===t.dataset.navActive&&e.classList.add("main-nav__btn--active")}))}hideContainer(){this.#x.classList.add("hidden"),this.#R.forEach((e=>e.classList.add("hidden"))),this.#V.forEach((e=>{e.classList.remove("main-nav__btn--active"),"map"===e.dataset.display&&e.classList.add("main-nav__btn--active")}))}#z(){this.#K.addEventListener("click",function(){this.#G=!this.#G,this.#J.style.marginLeft=""+(this.#G?"-17.8rem":"0"),this.#U.innerHTML=this.#G?"chevron_right":"chevron_left"}.bind(this))}#Q(){document.addEventListener("keydown",function(e){"Escape"===e.key&&!this.#x.classList.contains("hidden")&&this.closeMainContainer()}.bind(this))}};T=new URL(s("dRo73").resolve("abS4L"),import.meta.url).toString();var A;A=new URL(s("dRo73").resolve("2eIQh"),import.meta.url).toString();var I=new class{#Z;#X=[];#ee;loadMap(e=[44.0444,-71.6684]){this.#Z=new L.Map("map",{zoomControl:!1}).setView(e,14),L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png",{maxZoom:19,attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(this.#Z),L.control.zoom({position:"bottomright"}).addTo(this.#Z)}plotListOnMap(e,t){this.clearMap(),this.#Z.setView(e.center,e.zoom),this.#te(e,t),this.#Z.addLayer(this.#ee)}clearMap(){this.#ee&&this.#ee.clearLayers(),this.#X=[]}#ae(e,a,n){const l=L.icon({iconUrl:`${t("red"===n?T:A)}`,iconSize:[25,20]}),s=new L.Marker([e.lat,e.long],{icon:l});return s.bindPopup(L.popup({})).setPopupContent(`<div class='peak-popup'>\n              <span class='peak-popup__label-name'>${e.name}</span>\n              <span class='peak-popup__label-elevation'>${e.elevFeet} ft.</span>\n              <button class='btn btn-text btn-text-green btn-log-trip' data-mtn-id='${e.id}' data-list-id='${a.listID}'>LOG TRIP</button>\n            </div>`),s}#te(e,t){e.peaks.forEach((a=>{const n=""+(t.includes(a.id)?"green":"red"),l=this.#ae(a,e,n);this.#X.push(l)})),this.#ee=L.layerGroup(this.#X)}};var q=new class{#ne;#le;#se;#ie=document.querySelector(".preview-peak-lists");#re=document.querySelector(".container-single-peak-list");#oe=this.#re.querySelector(".heading-secondary");#de=this.#re.querySelector(".peak-list__label-number");#ve=this.#re.querySelector(".wrapper-progress");#ce=document.querySelector(".peak-list-table__body");#ge=this.#re.querySelector(".btn-back");#ue=document.querySelector(".preview-wrapper");#me=[...this.#ue.querySelectorAll(".btn-text")];#Me=document.querySelector(".no-saved-lists");addHandlerLogTrip(e){document.addEventListener("click",function(t){const a=t.target.closest(".btn-log-trip");if(!a)return;const{listId:n,mtnId:l}=a.dataset;e(n,l)}.bind(this))}addHandlerSavedLists(e){this.#ie.addEventListener("click",(function(t){if(!t.target.closest(".btn-save-peak-list"))return;const{listId:a}=t.target.closest(".preview-list__entry").dataset;e(a)}))}addHandlerPeakListView(e){this.#ie.addEventListener("click",(function(t){if(!t.target.closest(".btn-view-list"))return;const{listId:a}=t.target.closest(".preview-list__entry").dataset;e(a)}))}addHandlerPeakListPreview(e){this.#ue.addEventListener("click",function(t){const a=t.target.closest(".btn-text");if(!a)return;const{previewType:n}=a.dataset;e(n)}.bind(this))}renderPeakListsPreview(e){this.#ne=e.data,this.#se=e.previewType,this.#he(this.#se),this.#ie.innerHTML="",this.#ne.length?(this.#Me.classList.add("hidden"),this.#ie.insertAdjacentHTML("beforeend",this.#o(this.#ne))):this.#Me.classList.remove("hidden")}renderPeakListTable(e){this.#le=e,this.#oe.textContent=`${this.#le.title}`,this.#de.textContent=`${this.#le.numCompleted} of ${this.#le.peakCount} Peaks`,this.#ve.innerHTML="",this.#ve.insertAdjacentHTML("beforeend",this.#pe(this.#le)),this.#ce.innerHTML="",this.#ce.insertAdjacentHTML("beforeend",this.#ke())}#ke(){return this.#le.peaks.map((e=>this.#Fe(e))).join("")}#Fe(e){return`<tr class="peak-list-table__row ${e.completed?"peak-list-table__row--complete":""}" data-mtn-id="${e.id}" data-list-id="${e.id}">\n        <td><strong>${e.num}</strong></td>\n        <td style="text-align:left">${e.name}</td>\n        <td>${e.state}</td>\n\n        <td>${e.elevation.toLocaleString()}</td>\n        <td>${e.completed?`${e.completedDate}`:`<button class='btn btn-text btn-log-trip' data-mtn-id='${e.id}' data-list-id='${this.#le.listID}'>LOG TRIP</button>`}</td>\n      </tr>`}#o(){return this.#ne.map((e=>this.#v(e))).join("")}#v(e){return`<li class="preview-list__entry" data-list-id="${e.listID}">\n      <button class="btn btn-icon btn-save-peak-list" data-id='${e.listID}'>\n        <svg class="btn-icon__icon">\n          <use href="${t(_)}#icon-${e.saved?"remove":"add"}"></use>\n        </svg>\n      </button>\n      <div class="preview-list__info">\n        <h2 class="preview-list__label-primary"><strong>${e.title}</strong></h2>\n        <span class="preview-list__label-secondary">${e.numCompleted} of ${e.peakCount} Peaks</span>\n        ${this.#pe(e)}\n        <button class="btn btn--green btn-view btn-view-list">VIEW</button>\n    </li>`}#pe(e){const t=e.numCompleted/e.peakCount*100;return`<div class='progress-bar'><div class='progress-bar__label'>${Math.round(10*t)/10}%</div><div class='progress-bar__progress' style="width:${t}%"></div></div>\n      </div>`}#he(){this.#me.forEach((e=>e.classList.remove("btn-text--active"))),this.#me.find((e=>e.dataset.previewType===this.#se)).classList.add("btn-text--active")}};const B=function(e){$.showContainer(e),I.clearMap()},Y=function(){$.hideContainer(),D.clearForm(),I.clearMap()},x=function(e){I.clearMap(),D.clearForm(),"map"!==e?($.showContainer(e),"log-preview"===e&&O.renderLogPreview(F.logEntries),"all-peak-lists"===e&&q.renderPeakListsPreview(w())):$.hideContainer()},R=function(e){$.showContainer("single-peak-list"),f(e,"elevation"),q.renderPeakListTable(function(e){const t=b(e);return{listID:t.listID,title:t.title,numCompleted:F.listCounts[e],peakCount:t.peakCount,peaks:t.peaks.map(((e,t)=>{let a;return F.logEntries.length&&(a=F.logEntries.find((t=>t.peaks.some((t=>t.id===e.id))))),{id:e.id,num:t+1,name:e.name,elevation:e.elevFeet,state:e.state,completed:!!a,completedDate:!!a&&a.shortDate}}))}}(e)),I.plotListOnMap(b(e),F.completedPeaks)},W=function(e){var t;t=e,F.currentListView=t,q.renderPeakListsPreview(w())},V=function(e,t){$.showContainer("new-entry"),D.displayCheckboxes(y(e),e,t),I.plotListOnMap(b(e),F.completedPeaks)},j=function(e){F.savedLists.includes(e)?function(e){F.savedLists.splice(F.savedLists.indexOf(e),1),P()}(e):function(e){F.savedLists.push(e),P()}(e),q.renderPeakListsPreview(w())},G=function(e,t){$.showContainer("log-entry"),O.renderLogEntry(S(e)),I.plotListOnMap(b(t),F.completedPeaks)},J=function(e){!function(e){const t=S(e);F.logEntries.splice(F.logEntries.indexOf(t),1),t.peaks.forEach((e=>{H(e.id)})),P()}(e),O.renderLogPreview(F.logEntries)},K=function(){$.showContainer("new-entry")},U=function(){D.clearForm(),I.clearMap()},z=function(e,t){!function(e){const t=F.logEntries.length?Math.max(...F.logEntries.map((e=>e.logID)))+1:1,a=new k(...e,t);F.logEntries.unshift(a),a.peaks.forEach((e=>{E(e.id),F.completedPeaks.includes(e.id)||F.completedPeaks.push(e.id)})),C(),P()}(e),D.clearForm(),I.plotListOnMap(b(t),F.completedPeaks)},Q=function(e){D.changeDate(function(e){const t={day:"numeric",month:"numeric",year:"numeric"},a=new Date;return"today"===e?new Intl.DateTimeFormat("en-CA",t).format(a):"yesterday"===e?new Intl.DateTimeFormat("en-CA",t).format(new Date(a.getTime()-864e5)):void 0}(e))},Z=function(e){D.displayCheckboxes(y(e)),I.plotListOnMap(b(e),F.completedPeaks)};(async function(){try{const e=await async function(){return new Promise(((e,t)=>{navigator.geolocation.getCurrentPosition(e,t)}))}(),{latitude:t,longitude:a}=e.coords;I.loadMap([t,a])}catch{I.loadMap()}})(),D.addHandlerDate(Q),D.addHandlerPeakListSelect(Z),D.addHandlerAddEntry(z),D.addHandlerClearForm(U),$.addHandlerHideContainer(Y),$.addHandlerMainNav(x),$.addHandlerBtnBack(B),q.addHandlerPeakListView(R),q.addHandlerLogTrip(V),q.addHandlerSavedLists(j),q.addHandlerPeakListPreview(W),O.addHandlerShowEntry(G),O.addHandlerDeleteEntry(J),O.addHandlerAddEntry(K);