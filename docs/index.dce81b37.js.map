{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-8fab2fcb25f8cdcd.js","src/json/adk46.json","src/json/ca14.json","src/json/cat35.json","src/json/co14.json","src/json/me4k.json","src/json/ne100.json","src/json/ne4k.json","src/json/neHigh.json","src/json/nh4k.json","src/json/nh52.json","src/json/south6.json","src/json/vt4k.json","src/json/usHigh.json","src/js/createPeakLists.js","src/js/logEntry.js","src/json/testData.json","src/js/model.js","node_modules/@parcel/runtime-js/lib/runtime-b54bd341dd7b02ac.js","src/js/views/view.js","src/js/views/logView.js","src/js/views/logPreviewView.js","src/js/views/logEntryView.js","src/js/views/newEntryView.js","src/js/views/mainView.js","node_modules/@parcel/runtime-js/lib/runtime-edbe808007557457.js","node_modules/@parcel/runtime-js/lib/runtime-ae31969aa877b0ad.js","node_modules/@parcel/runtime-js/lib/runtime-b673193cb34ae48c.js","src/js/views/mapView.js","src/js/views/modalView.js","src/js/views/peakListView.js","src/js/views/peakListPreviewView.js","src/js/views/peakListTableView.js","src/js/views/sidebarView.js","src/js/views/statsView.js","src/js/controller.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"dghd8\\\":\\\"index.dce81b37.js\\\",\\\"7RGJm\\\":\\\"sprite.9d7f268c.svg\\\",\\\"iPWdx\\\":\\\"mtn-icon-red.e90a5dc3.png\\\",\\\"8TcTG\\\":\\\"mtn-icon-green.47e0be93.png\\\",\\\"7TqKI\\\":\\\"marker-icon.3f7d3721.png\\\"}\"));","{\n  \"title\": \"Adirondack High Peaks\",\n  \"listID\": \"adk46\",\n  \"peakCount\": 46,\n  \"peaks\": [\n    {\n      \"id\": 973357,\n      \"name\": \"Mt. Marcy\",\n      \"lat\": 44.112733,\n      \"long\": -73.9237833,\n      \"elevation\": 5344,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973340,\n      \"name\": \"Algonquin Peak\",\n      \"lat\": 44.1436636,\n      \"long\": -73.9865357,\n      \"elevation\": 5105,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973353,\n      \"name\": \"Mt. Haystack\",\n      \"lat\": 44.1056093,\n      \"long\": -73.9004196,\n      \"elevation\": 4924,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973360,\n      \"name\": \"Mt. Skylight\",\n      \"lat\": 44.0994987,\n      \"long\": -73.9306986,\n      \"elevation\": 4908,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973364,\n      \"name\": \"Whiteface Mountain\",\n      \"lat\": 44.3658804,\n      \"long\": -73.9026456,\n      \"elevation\": 4816,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973347,\n      \"name\": \"Dix Mountain\",\n      \"lat\": 44.0822756,\n      \"long\": -73.7862471,\n      \"elevation\": 4813,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973351,\n      \"name\": \"Gray Peak\",\n      \"lat\": 44.1114427,\n      \"long\": -73.9348658,\n      \"elevation\": 4800,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973355,\n      \"name\": \"Iroquois Peak\",\n      \"lat\": 44.1369973,\n      \"long\": -73.9982027,\n      \"elevation\": 4829,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973341,\n      \"name\": \"Basin Mountain\",\n      \"lat\": 44.1211639,\n      \"long\": -73.8862527,\n      \"elevation\": 4852,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973349,\n      \"name\": \"Gothics\",\n      \"lat\": 44.1281079,\n      \"long\": -73.8570849,\n      \"elevation\": 4724,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 947091,\n      \"name\": \"Mt. Colden\",\n      \"lat\": 44.1269976,\n      \"long\": -73.9598674,\n      \"elevation\": 4708,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 2611110,\n      \"name\": \"Giant Mountain\",\n      \"lat\": 44.161165,\n      \"long\": -73.720279,\n      \"elevation\": 4623,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 958617,\n      \"name\": \"Nippletop\",\n      \"lat\": 44.0892202,\n      \"long\": -73.8159708,\n      \"elevation\": 4554,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 964468,\n      \"name\": \"Santanoni Peak\",\n      \"lat\": 44.0822811,\n      \"long\": -74.1309855,\n      \"elevation\": 4596,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 962328,\n      \"name\": \"Mt. Redfield\",\n      \"lat\": 44.094777,\n      \"long\": -73.949866,\n      \"elevation\": 4603,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 971754,\n      \"name\": \"Wright Peak\",\n      \"lat\": 44.1517187,\n      \"long\": -73.9801468,\n      \"elevation\": 4564,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 959830,\n      \"name\": \"Panther Peak\",\n      \"lat\": 44.0983915,\n      \"long\": -74.132097,\n      \"elevation\": 4455,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 966981,\n      \"name\": \"Table Top Mountain\",\n      \"lat\": 44.143663,\n      \"long\": -73.9070876,\n      \"elevation\": 4295,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 2651608,\n      \"name\": \"Rocky Peak\",\n      \"lat\": 44.1542177,\n      \"long\": -73.7051718,\n      \"elevation\": 4403,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 971960,\n      \"name\": \"Macomb Mountain\",\n      \"lat\": 44.0517211,\n      \"long\": -73.7801349,\n      \"elevation\": 4396,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 953279,\n      \"name\": \"Hough Peak\",\n      \"lat\": 44.0694981,\n      \"long\": -73.7776352,\n      \"elevation\": 4393,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 964885,\n      \"name\": \"Seward Mountain\",\n      \"lat\": 44.1597799,\n      \"long\": -74.1993239,\n      \"elevation\": 4327,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 956573,\n      \"name\": \"Mt. Marshall\",\n      \"lat\": 44.1275538,\n      \"long\": -74.0118142,\n      \"elevation\": 4380,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 942362,\n      \"name\": \"Allen Mountain\",\n      \"lat\": 44.0708892,\n      \"long\": -73.9395871,\n      \"elevation\": 4321,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 943955,\n      \"name\": \"Big Slide Mountain\",\n      \"lat\": 44.1822721,\n      \"long\": -73.8704202,\n      \"elevation\": 4232,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 949720,\n      \"name\": \"Esther Mountain\",\n      \"lat\": 44.3869916,\n      \"long\": -73.8898673,\n      \"elevation\": 4232,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 968312,\n      \"name\": \"Upper Wolfjaw Mountain\",\n      \"lat\": 44.1406072,\n      \"long\": -73.8451402,\n      \"elevation\": 4190,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 956118,\n      \"name\": \"Lower Wolfjaw Mountain\",\n      \"lat\": 44.1483845,\n      \"long\": -73.8326399,\n      \"elevation\": 4190,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 966631,\n      \"name\": \"Street Mountain\",\n      \"lat\": 44.1797741,\n      \"long\": -74.0437616,\n      \"elevation\": 4022,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 960289,\n      \"name\": \"Phelps Mountain\",\n      \"lat\": 44.1569957,\n      \"long\": -73.9209775,\n      \"elevation\": 4137,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 948566,\n      \"name\": \"Donaldson Mountain\",\n      \"lat\": 44.1539471,\n      \"long\": -74.210991,\n      \"elevation\": 4062,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 964894,\n      \"name\": \"Seymour Mountain\",\n      \"lat\": 44.1578347,\n      \"long\": -74.1721003,\n      \"elevation\": 4055,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 964537,\n      \"name\": \"Sawteeth\",\n      \"lat\": 44.1139417,\n      \"long\": -73.8504175,\n      \"elevation\": 4114,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 965737,\n      \"name\": \"South Dix\",\n      \"lat\": 44.060054,\n      \"long\": -73.7743014,\n      \"elevation\": 4088,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 960994,\n      \"name\": \"Porter Mountain\",\n      \"lat\": 44.2153262,\n      \"long\": -73.8434754,\n      \"elevation\": 4058,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 947211,\n      \"name\": \"Mt. Colvin\",\n      \"lat\": 44.0939424,\n      \"long\": -73.8345829,\n      \"elevation\": 4049,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 949645,\n      \"name\": \"Mt. Emmons\",\n      \"lat\": 44.1436698,\n      \"long\": -74.2140464,\n      \"elevation\": 4022,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 949060,\n      \"name\": \"Grace Peak\",\n      \"lat\": 44.0653314,\n      \"long\": -73.7573564,\n      \"elevation\": 4006,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 944215,\n      \"name\": \"Blake Peak\",\n      \"lat\": 44.081443,\n      \"long\": -73.844583,\n      \"elevation\": 3976,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 946865,\n      \"name\": \"Cliff Mountain\",\n      \"lat\": 44.1031102,\n      \"long\": -73.9751452,\n      \"elevation\": 3940,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 959076,\n      \"name\": \"Nye Mountain\",\n      \"lat\": 44.1931062,\n      \"long\": -74.0240387,\n      \"elevation\": 3871,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 947539,\n      \"name\": \"Couchsachraga Peak\",\n      \"lat\": 44.0956146,\n      \"long\": -74.1601539,\n      \"elevation\": 3793,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 948403,\n      \"name\": \"Dial Mountain\",\n      \"lat\": 44.1058859,\n      \"long\": -73.7959703,\n      \"elevation\": 4020,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 970556,\n      \"name\": \"Saddleback Mountain\",\n      \"lat\": 44.1264414,\n      \"long\": -73.8748634,\n      \"elevation\": 4534,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 942572,\n      \"name\": \"Armstrong Mountain\",\n      \"lat\": 44.1347741,\n      \"long\": -73.8490291,\n      \"elevation\": 4360,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 945952,\n      \"name\": \"Cascade Mountain\",\n      \"lat\": 44.2186594,\n      \"long\": -73.860143,\n      \"elevation\": 4094,\n      \"state\": \"NY\"\n    }\n  ],\n  \"description\": \"The Adirondack High Peaks (also known as the \\\"46ers\\\") are a collection of summits within Adirondack Park, the largest state park and largest publicly protected area in the lower 48 states. The original list was thought to contain all peaks over 4,000 ft. in the park, but recent USGS surveys have shown four of the peaks slightly below this threshold.\"\n}\n","{\n  \"title\": \"California Fourteeners\",\n  \"listID\": \"ca14\",\n  \"peakCount\": 12,\n  \"peaks\": [\n    {\n      \"id\": 269051,\n      \"name\": \"Mt. Whitney\",\n      \"lat\": 36.57857,\n      \"long\": -118.2924218,\n      \"elevation\": 14478,\n      \"state\": \"CA\"\n    },\n    {\n      \"id\": 1654980,\n      \"name\": \"Mt. Williamson\",\n      \"lat\": 36.6559544,\n      \"long\": -118.3110851,\n      \"elevation\": 14383,\n      \"state\": \"CA\"\n    },\n    {\n      \"id\": 255232,\n      \"name\": \"White Mountain Peak\",\n      \"lat\": 37.6340283,\n      \"long\": -118.2556316,\n      \"elevation\": 14245,\n      \"state\": \"CA\"\n    },\n    {\n      \"id\": 264233,\n      \"name\": \"North Palisade\",\n      \"lat\": 37.0942428,\n      \"long\": -118.5144372,\n      \"elevation\": 14265,\n      \"state\": \"CA\"\n    },\n    {\n      \"id\": 266054,\n      \"name\": \"Mt. Shasta\",\n      \"lat\": 41.40917,\n      \"long\": -122.1948451,\n      \"elevation\": 14160,\n      \"state\": \"CA\"\n    },\n    {\n      \"id\": 1654943,\n      \"name\": \"Mt. Sill\",\n      \"lat\": 37.095985,\n      \"long\": -118.5033965,\n      \"elevation\": 14150,\n      \"state\": \"CA\"\n    },\n    {\n      \"id\": 265692,\n      \"name\": \"Mt. Russell\",\n      \"lat\": 36.5906707,\n      \"long\": -118.2890359,\n      \"elevation\": 14065,\n      \"state\": \"CA\"\n    },\n    {\n      \"id\": 235207,\n      \"name\": \"Split Mountain\",\n      \"lat\": 37.0209599,\n      \"long\": -118.4225361,\n      \"elevation\": 14052,\n      \"state\": \"CA\"\n    },\n    {\n      \"id\": 1654923,\n      \"name\": \"Mt. Langley\",\n      \"lat\": 36.5233668,\n      \"long\": -118.2394156,\n      \"elevation\": 14032,\n      \"state\": \"CA\"\n    },\n    {\n      \"id\": 1654979,\n      \"name\": \"Mt. Tyndall\",\n      \"lat\": 36.6557436,\n      \"long\": -118.3372726,\n      \"elevation\": 14025,\n      \"state\": \"CA\"\n    },\n    {\n      \"id\": 1654925,\n      \"name\": \"Middle Palisade\",\n      \"lat\": 37.0702899,\n      \"long\": -118.469138,\n      \"elevation\": 14018,\n      \"state\": \"CA\"\n    },\n    {\n      \"id\": 1654926,\n      \"name\": \"Mt. Muir\",\n      \"lat\": 36.5647386,\n      \"long\": -118.2913287,\n      \"elevation\": 14018,\n      \"state\": \"CA\"\n    }\n  ],\n  \"description\": \"The California Fourteeners (14ers) are a collection of all summits over 14,000 ft. in elevation with at least 300 ft of topographic prominence within the state of California. The majority of the peaks (10) reside in a concentrated area in the Sierra Nevada Range. California is one of only three states with multiple mountains that meet this criteria (CO and AK being the other two).\"\n}\n","{\n  \"title\": \"Catskill High Peaks\",\n  \"listID\": \"cat35\",\n  \"peakCount\": 35,\n  \"peaks\": [\n    {\n      \"id\": 975759,\n      \"name\": \"Slide Mountain\",\n      \"lat\": 41.9987034,\n      \"long\": -74.3862617,\n      \"elevation\": 4167,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973354,\n      \"name\": \"Hunter Mountain\",\n      \"lat\": 42.1778662,\n      \"long\": -74.2304216,\n      \"elevation\": 4045,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973342,\n      \"name\": \"Black Dome\",\n      \"lat\": 42.2700864,\n      \"long\": -74.1226382,\n      \"elevation\": 3973,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973362,\n      \"name\": \"Thomas Cole Mountain\",\n      \"lat\": 42.2709196,\n      \"long\": -74.1365275,\n      \"elevation\": 3944,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973343,\n      \"name\": \"Blackhead\",\n      \"lat\": 42.2678644,\n      \"long\": -74.1045818,\n      \"elevation\": 3930,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973363,\n      \"name\": \"West Kill Mountain\",\n      \"lat\": 42.1678663,\n      \"long\": -74.2895904,\n      \"elevation\": 3891,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973350,\n      \"name\": \"Graham Mountain\",\n      \"lat\": 42.0392576,\n      \"long\": -74.5495986,\n      \"elevation\": 3848,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973348,\n      \"name\": \"Doubletop Mountain\",\n      \"lat\": 42.0275913,\n      \"long\": -74.5282095,\n      \"elevation\": 3875,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973346,\n      \"name\": \"Cornell Mountain\",\n      \"lat\": 42.0014812,\n      \"long\": -74.3568163,\n      \"elevation\": 3848,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973361,\n      \"name\": \"Table Mountain\",\n      \"lat\": 41.9587036,\n      \"long\": -74.4048739,\n      \"elevation\": 3819,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973358,\n      \"name\": \"Peekamoose Mountain\",\n      \"lat\": 41.9531481,\n      \"long\": -74.398207,\n      \"elevation\": 3812,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 973359,\n      \"name\": \"Plateau Mountain\",\n      \"lat\": 42.1378671,\n      \"long\": -74.1743088,\n      \"elevation\": 3845,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 966729,\n      \"name\": \"Sugarloaf Mountain\",\n      \"lat\": 42.1312006,\n      \"long\": -74.1501414,\n      \"elevation\": 3806,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 971528,\n      \"name\": \"Wittenberg Mountain\",\n      \"lat\": 42.0081478,\n      \"long\": -74.3473716,\n      \"elevation\": 3766,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 942952,\n      \"name\": \"Balsam Lake Mountain\",\n      \"lat\": 42.0459236,\n      \"long\": -74.5940438,\n      \"elevation\": 3707,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 955819,\n      \"name\": \"Lone Mountain\",\n      \"lat\": 41.9692592,\n      \"long\": -74.3893177,\n      \"elevation\": 3697,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 959820,\n      \"name\": \"Panther Mountain\",\n      \"lat\": 42.0564799,\n      \"long\": -74.3945946,\n      \"elevation\": 3714,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 943907,\n      \"name\": \"Big Indian Mountain\",\n      \"lat\": 42.0350915,\n      \"long\": -74.4965421,\n      \"elevation\": 3694,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 950728,\n      \"name\": \"Friday Mountain\",\n      \"lat\": 41.9875924,\n      \"long\": -74.3620944,\n      \"elevation\": 3681,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 963108,\n      \"name\": \"Rusk Mountain\",\n      \"lat\": 42.2006434,\n      \"long\": -74.2770897,\n      \"elevation\": 3678,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 952749,\n      \"name\": \"Kaaterskill High Peak\",\n      \"lat\": 42.1620334,\n      \"long\": -74.0801381,\n      \"elevation\": 3645,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 968056,\n      \"name\": \"Twin Mountain\",\n      \"lat\": 42.1256453,\n      \"long\": -74.1290294,\n      \"elevation\": 3629,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 942944,\n      \"name\": \"Balsam Cap\",\n      \"lat\": 41.9770369,\n      \"long\": -74.3573722,\n      \"elevation\": 3602,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 950082,\n      \"name\": \"Fir Mountain\",\n      \"lat\": 42.0275916,\n      \"long\": -74.4690414,\n      \"elevation\": 3629,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 958771,\n      \"name\": \"North Dome\",\n      \"lat\": 42.1734217,\n      \"long\": -74.3490366,\n      \"elevation\": 3596,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 948930,\n      \"name\": \"Eagle Mountain\",\n      \"lat\": 42.0620352,\n      \"long\": -74.50932,\n      \"elevation\": 3573,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 942953,\n      \"name\": \"Balsam Mountain\",\n      \"lat\": 42.0909235,\n      \"long\": -74.4882082,\n      \"elevation\": 3606,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 943334,\n      \"name\": \"Bearpen Mountain\",\n      \"lat\": 42.2734189,\n      \"long\": -74.4840396,\n      \"elevation\": 3530,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 953655,\n      \"name\": \"Indian Head Mountain\",\n      \"lat\": 42.116201,\n      \"long\": -74.1145846,\n      \"elevation\": 3553,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 1829070,\n      \"name\": \"Mt. Sherrill\",\n      \"lat\": 42.1756439,\n      \"long\": -74.3729262,\n      \"elevation\": 3550,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 952008,\n      \"name\": \"Halcott Mountain\",\n      \"lat\": 42.1800882,\n      \"long\": -74.4379281,\n      \"elevation\": 3524,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 968592,\n      \"name\": \"Vly Mountain\",\n      \"lat\": 42.2453645,\n      \"long\": -74.4459834,\n      \"elevation\": 3530,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 971464,\n      \"name\": \"Windham High Peak\",\n      \"lat\": 42.3148069,\n      \"long\": -74.1434718,\n      \"elevation\": 3527,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 962784,\n      \"name\": \"Rocky Mountain\",\n      \"lat\": 41.9728703,\n      \"long\": -74.3726505,\n      \"elevation\": 3508,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 50,\n      \"name\": \"Southwest Hunter Mountain\",\n      \"lat\": 42.16251,\n      \"long\": -74.24492,\n      \"elevation\": 3750,\n      \"state\": \"NY\"\n    }\n  ],\n  \"description\": \"The Catskill High Peaks are a collection of summits over 3,500 ft. in elevation located within the 700,000 acre Catskill Park, a forest preserve in the state of New York. All mountains have a topographic prominence of at least 250 ft. or there is a distance of at least 0.5 miles between peaks. \\n\"\n}\n","{\n  \"title\": \"Colorado Fourteeners\",\n  \"listID\": \"co14\",\n  \"peakCount\": 53,\n  \"peaks\": [\n    {\n      \"id\": 180381,\n      \"name\": \"Mt. Elbert\",\n      \"lat\": 39.1178687,\n      \"long\": -106.4452569,\n      \"elevation\": 14426,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180119,\n      \"name\": \"Mt. Massive\",\n      \"lat\": 39.1873242,\n      \"long\": -106.4756085,\n      \"elevation\": 14419,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189179,\n      \"name\": \"Mt. Harvard\",\n      \"lat\": 38.9243492,\n      \"long\": -106.3206758,\n      \"elevation\": 14406,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 192735,\n      \"name\": \"Blanca Peak\",\n      \"lat\": 37.5775609,\n      \"long\": -105.4855987,\n      \"elevation\": 14347,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180393,\n      \"name\": \"La Plata Peak\",\n      \"lat\": 39.0293628,\n      \"long\": -106.4731089,\n      \"elevation\": 14334,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 188678,\n      \"name\": \"Uncompahgre Peak\",\n      \"lat\": 38.0714529,\n      \"long\": -107.4625289,\n      \"elevation\": 14308,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 181827,\n      \"name\": \"Grays Peak\",\n      \"lat\": 39.6337372,\n      \"long\": -105.8173702,\n      \"elevation\": 14275,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 179667,\n      \"name\": \"Quandary Peak\",\n      \"lat\": 39.3972537,\n      \"long\": -106.1063989,\n      \"elevation\": 14262,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 181829,\n      \"name\": \"Torreys Peak\",\n      \"lat\": 39.6426923,\n      \"long\": -105.8211948,\n      \"elevation\": 14265,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189455,\n      \"name\": \"Mt. Antero\",\n      \"lat\": 38.6740472,\n      \"long\": -106.2462488,\n      \"elevation\": 14249,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 204979,\n      \"name\": \"Longs Peak\",\n      \"lat\": 40.2548614,\n      \"long\": -105.6162397,\n      \"elevation\": 14262,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 187461,\n      \"name\": \"Mt. Wilson\",\n      \"lat\": 37.8392056,\n      \"long\": -107.9915763,\n      \"elevation\": 14255,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189451,\n      \"name\": \"Mt. Shavano\",\n      \"lat\": 38.6189805,\n      \"long\": -106.2392197,\n      \"elevation\": 14222,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189170,\n      \"name\": \"Mt. Belford\",\n      \"lat\": 38.9605767,\n      \"long\": -106.3607818,\n      \"elevation\": 14170,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189458,\n      \"name\": \"Mt. Princeton\",\n      \"lat\": 38.7491503,\n      \"long\": -106.2424463,\n      \"elevation\": 14196,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189198,\n      \"name\": \"Mt. Yale\",\n      \"lat\": 38.8441725,\n      \"long\": -106.3139015,\n      \"elevation\": 14193,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 203951,\n      \"name\": \"Crestone Needle\",\n      \"lat\": 37.9646991,\n      \"long\": -105.5767188,\n      \"elevation\": 14166,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 179961,\n      \"name\": \"Mt. Bross\",\n      \"lat\": 39.3349948,\n      \"long\": -106.1071665,\n      \"elevation\": 14176,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 204778,\n      \"name\": \"Kit Carson Mountain\",\n      \"lat\": 37.9796989,\n      \"long\": -105.6026169,\n      \"elevation\": 14186,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189171,\n      \"name\": \"Mt. Oxford\",\n      \"lat\": 38.9647934,\n      \"long\": -106.3387735,\n      \"elevation\": 14140,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 203948,\n      \"name\": \"Tabeguache Peak\",\n      \"lat\": 38.6256209,\n      \"long\": -106.2506089,\n      \"elevation\": 14114,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 196432,\n      \"name\": \"Mt. Sneffels\",\n      \"lat\": 38.0038447,\n      \"long\": -107.7922734,\n      \"elevation\": 14150,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 204685,\n      \"name\": \"Mt. Democrat\",\n      \"lat\": 39.3394723,\n      \"long\": -106.1398604,\n      \"elevation\": 14144,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 175209,\n      \"name\": \"Capitol Peak\",\n      \"lat\": 39.1501588,\n      \"long\": -107.0827488,\n      \"elevation\": 14117,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 204770,\n      \"name\": \"Pikes Peak\",\n      \"lat\": 38.8405839,\n      \"long\": -105.0449035,\n      \"elevation\": 14114,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 175555,\n      \"name\": \"Snowmass Mountain\",\n      \"lat\": 39.1186541,\n      \"long\": -107.0664035,\n      \"elevation\": 14107,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 187990,\n      \"name\": \"Windom Peak\",\n      \"lat\": 37.621313,\n      \"long\": -107.5917613,\n      \"elevation\": 14084,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 187988,\n      \"name\": \"Mt. Eolus\",\n      \"lat\": 37.6216871,\n      \"long\": -107.6225967,\n      \"elevation\": 14088,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 203886,\n      \"name\": \"Mt. Columbia\",\n      \"lat\": 38.9038441,\n      \"long\": -106.2974478,\n      \"elevation\": 14055,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189167,\n      \"name\": \"Missouri Mountain\",\n      \"lat\": 38.9476104,\n      \"long\": -106.3785409,\n      \"elevation\": 14062,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 192424,\n      \"name\": \"Humboldt Peak\",\n      \"lat\": 37.9761388,\n      \"long\": -105.5550716,\n      \"elevation\": 14062,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 182467,\n      \"name\": \"Mt. Bierstadt\",\n      \"lat\": 39.5826432,\n      \"long\": -105.6687551,\n      \"elevation\": 14058,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 187404,\n      \"name\": \"Handies Peak\",\n      \"lat\": 37.9129617,\n      \"long\": -107.5044497,\n      \"elevation\": 14048,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 192733,\n      \"name\": \"Ellingwood Point\",\n      \"lat\": 37.5824644,\n      \"long\": -105.4926087,\n      \"elevation\": 14062,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 192730,\n      \"name\": \"Mt. Lindsey\",\n      \"lat\": 37.583803,\n      \"long\": -105.4446957,\n      \"elevation\": 14062,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 193131,\n      \"name\": \"Culebra Peak\",\n      \"lat\": 37.1222185,\n      \"long\": -105.1857672,\n      \"elevation\": 14039,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180207,\n      \"name\": \"Mt. Sherman\",\n      \"lat\": 39.2251336,\n      \"long\": -106.1699259,\n      \"elevation\": 14019,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 204780,\n      \"name\": \"Little Bear Peak\",\n      \"lat\": 37.5665804,\n      \"long\": -105.4972025,\n      \"elevation\": 14035,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 187423,\n      \"name\": \"Redcloud Peak\",\n      \"lat\": 37.9409934,\n      \"long\": -107.4217338,\n      \"elevation\": 14039,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180300,\n      \"name\": \"Conundrum Peak\",\n      \"lat\": 39.0144457,\n      \"long\": -106.86364,\n      \"elevation\": 14032,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 190463,\n      \"name\": \"San Luis Peak\",\n      \"lat\": 37.9867825,\n      \"long\": -106.9312952,\n      \"elevation\": 14016,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180264,\n      \"name\": \"North Maroon Peak\",\n      \"lat\": 39.076094,\n      \"long\": -106.9870852,\n      \"elevation\": 14016,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 188661,\n      \"name\": \"Wetterhorn Peak\",\n      \"lat\": 38.0606119,\n      \"long\": -107.5108819,\n      \"elevation\": 14021,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 187455,\n      \"name\": \"Wilson Peak\",\n      \"lat\": 37.8602995,\n      \"long\": -107.9846517,\n      \"elevation\": 14025,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 179522,\n      \"name\": \"Mt. of the Holy Cross\",\n      \"lat\": 39.4666238,\n      \"long\": -106.481692,\n      \"elevation\": 14007,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 189155,\n      \"name\": \"Huron Peak\",\n      \"lat\": 38.9455489,\n      \"long\": -106.4381146,\n      \"elevation\": 14012,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 204748,\n      \"name\": \"Sunshine Peak\",\n      \"lat\": 37.9227181,\n      \"long\": -107.4255595,\n      \"elevation\": 14012,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 179956,\n      \"name\": \"Mt. Lincoln\",\n      \"lat\": 39.351504,\n      \"long\": -106.1113773,\n      \"elevation\": 14285,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180301,\n      \"name\": \"Castle Peak\",\n      \"lat\": 39.0096902,\n      \"long\": -106.8612901,\n      \"elevation\": 14258,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 204716,\n      \"name\": \"Mt. Evans\",\n      \"lat\": 39.5881224,\n      \"long\": -105.6437272,\n      \"elevation\": 14235,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180276,\n      \"name\": \"Maroon Peak\",\n      \"lat\": 39.0706997,\n      \"long\": -106.9888794,\n      \"elevation\": 14144,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 187843,\n      \"name\": \"Sunlight Peak\",\n      \"lat\": 37.6272835,\n      \"long\": -107.595797,\n      \"elevation\": 14055,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 180265,\n      \"name\": \"Pyramid Peak\",\n      \"lat\": 39.0717385,\n      \"long\": -106.9499676,\n      \"elevation\": 14029,\n      \"state\": \"CO\"\n    }\n  ],\n  \"description\": \"The Colorado Fourteeners (14ers) are a collection of all summits over 14,000 ft. in elevation with at least 300 ft of topographic prominence across seven mountain ranges within the state of Colorado. Colorado is home to more fourteeners than any other state in the US. The tallest peak, Mt. Elbert, is the second tallest mountain in the lower 48 states.\"\n}\n","{\n  \"title\": \"Maine 4,000 Footers\",\n  \"listID\": \"me4k\",\n  \"peakCount\": 14,\n  \"peaks\": [\n    {\n      \"id\": 561737,\n      \"name\": \"Mt. Katahdin (Baxter Peak)\",\n      \"lat\": 45.9042845,\n      \"long\": -68.9213562,\n      \"elevation\": 5259,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 567535,\n      \"name\": \"Mt. Katahdin (Hamlin Peak)\",\n      \"lat\": 45.92416,\n      \"long\": -68.92767,\n      \"elevation\": 4757,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 564525,\n      \"name\": \"Crocker Mountain\",\n      \"lat\": 45.04712,\n      \"long\": -70.38273,\n      \"elevation\": 4226,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572729,\n      \"name\": \"Old Speck Mountain\",\n      \"lat\": 44.57092,\n      \"long\": -70.95365,\n      \"elevation\": 4183,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572313,\n      \"name\": \"North Brother\",\n      \"lat\": 45.95716,\n      \"long\": -68.98544,\n      \"elevation\": 4140,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572033,\n      \"name\": \"Bigelow Mountain (Avery Peak)\",\n      \"lat\": 45.14664,\n      \"long\": -70.27585,\n      \"elevation\": 4068,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 561068,\n      \"name\": \"Mt. Abraham\",\n      \"lat\": 44.9722782,\n      \"long\": -70.3259007,\n      \"elevation\": 4032,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 581982,\n      \"name\": \"South Crocker Mountain\",\n      \"lat\": 45.03619,\n      \"long\": -70.37607,\n      \"elevation\": 4042,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 576826,\n      \"name\": \"Saddleback Horn\",\n      \"lat\": 44.95119,\n      \"long\": -70.48706,\n      \"elevation\": 4041,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 578873,\n      \"name\": \"Mt. Redington\",\n      \"lat\": 45.02499,\n      \"long\": -70.3887,\n      \"elevation\": 4010,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 561033,\n      \"name\": \"Spaulding Mountain\",\n      \"lat\": 45.0028335,\n      \"long\": -70.333401,\n      \"elevation\": 4009,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 576507,\n      \"name\": \"Sugarloaf Mountain\",\n      \"lat\": 45.03169,\n      \"long\": -70.31333,\n      \"elevation\": 4226,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 578186,\n      \"name\": \"Bigelow Mountain (West Peak)\",\n      \"lat\": 45.14676,\n      \"long\": -70.28835,\n      \"elevation\": 4131,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 574668,\n      \"name\": \"Saddleback Mountain\",\n      \"lat\": 44.93641,\n      \"long\": -70.50461,\n      \"elevation\": 4117,\n      \"state\": \"ME\"\n    }\n  ],\n  \"description\": \"The Maine 4,000 Footers are a collection of summits over 4,000 ft. in elevation with at least 200 ft of topographic prominence across four mountain ranges within the state of Maine.The tallest mountain, Mt. Katahdin (Baxter Peak), is the Northern Terminus of the 2,000+ mile Appalachian Trail and the third tallest, Sugarloaf, is a popular ski mountain.\"\n}\n","{\n  \"title\": \"New England 100 Highest\",\n  \"listID\": \"ne100\",\n  \"peakCount\": 100,\n  \"peaks\": [\n    {\n      \"id\": 871352,\n      \"name\": \"Mt. Washington\",\n      \"lat\": 44.2705781,\n      \"long\": -71.3033287,\n      \"elevation\": 6273,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871380,\n      \"name\": \"Mt. Adams\",\n      \"lat\": 44.3206546,\n      \"long\": -71.2915306,\n      \"elevation\": 5791,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872101,\n      \"name\": \"Mt. Jefferson\",\n      \"lat\": 44.304315,\n      \"long\": -71.3166955,\n      \"elevation\": 5699,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872313,\n      \"name\": \"Mt. Monroe\",\n      \"lat\": 44.2552125,\n      \"long\": -71.3214183,\n      \"elevation\": 5351,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872247,\n      \"name\": \"Mt. Madison\",\n      \"lat\": 44.3288173,\n      \"long\": -71.2767796,\n      \"elevation\": 5351,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872150,\n      \"name\": \"Mt. Lafayette\",\n      \"lat\": 44.1608182,\n      \"long\": -71.6444575,\n      \"elevation\": 5236,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872176,\n      \"name\": \"Mt. Lincoln\",\n      \"lat\": 44.1489451,\n      \"long\": -71.6445258,\n      \"elevation\": 5085,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872710,\n      \"name\": \"South Twin Mountain\",\n      \"lat\": 44.187556,\n      \"long\": -71.5548018,\n      \"elevation\": 4888,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871629,\n      \"name\": \"Carter Dome\",\n      \"lat\": 44.2673401,\n      \"long\": -71.1792622,\n      \"elevation\": 4826,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872324,\n      \"name\": \"Mt. Moosilauke\",\n      \"lat\": 44.024502,\n      \"long\": -71.8309164,\n      \"elevation\": 4813,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871851,\n      \"name\": \"Mt. Eisenhower\",\n      \"lat\": 44.2407341,\n      \"long\": -71.3501812,\n      \"elevation\": 4757,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872408,\n      \"name\": \"North Twin Mountain\",\n      \"lat\": 44.2025557,\n      \"long\": -71.5578576,\n      \"elevation\": 4751,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871628,\n      \"name\": \"Mt. Carrigain\",\n      \"lat\": 44.0936537,\n      \"long\": -71.4466959,\n      \"elevation\": 4682,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871556,\n      \"name\": \"Mt. Bond\",\n      \"lat\": 44.1528345,\n      \"long\": -71.5311895,\n      \"elevation\": 4685,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872288,\n      \"name\": \"Middle Carter Mountain\",\n      \"lat\": 44.3031109,\n      \"long\": -71.1678106,\n      \"elevation\": 4603,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"West Bond Mountain\",\n      \"lat\": 44.1547633,\n      \"long\": -71.5436295,\n      \"elevation\": 4540,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871925,\n      \"name\": \"Mt. Garfield\",\n      \"lat\": 44.1872617,\n      \"long\": -71.6106785,\n      \"elevation\": 4495,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872169,\n      \"name\": \"Mt. Liberty\",\n      \"lat\": 44.1158901,\n      \"long\": -71.6420251,\n      \"elevation\": 4439,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872698,\n      \"name\": \"South Carter Mountain\",\n      \"lat\": 44.2897779,\n      \"long\": -71.176635,\n      \"elevation\": 4419,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872940,\n      \"name\": \"Wildcat Mountain (A peak)\",\n      \"lat\": 44.2595144,\n      \"long\": -71.201848,\n      \"elevation\": 4423,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872006,\n      \"name\": \"Mt. Hancock\",\n      \"lat\": 44.0836076,\n      \"long\": -71.4934302,\n      \"elevation\": 4409,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872707,\n      \"name\": \"Kinsman Mountain (South Peak)\",\n      \"lat\": 44.1228429,\n      \"long\": -71.7367508,\n      \"elevation\": 4331,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873014,\n      \"name\": \"Mt. Field\",\n      \"lat\": 44.196137,\n      \"long\": -71.4331049,\n      \"elevation\": 4311,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872440,\n      \"name\": \"Mt. Osceola\",\n      \"lat\": 44.0014482,\n      \"long\": -71.5359097,\n      \"elevation\": 4314,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871894,\n      \"name\": \"Mt. Flume\",\n      \"lat\": 44.1089459,\n      \"long\": -71.6278579,\n      \"elevation\": 4318,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872495,\n      \"name\": \"Mt. Pierce\",\n      \"lat\": 44.2265226,\n      \"long\": -71.3659732,\n      \"elevation\": 4304,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872952,\n      \"name\": \"Mt. Willey\",\n      \"lat\": 44.1835296,\n      \"long\": -71.4207354,\n      \"elevation\": 4268,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 7,\n      \"name\": \"Bondcliff\",\n      \"lat\": 44.1405773,\n      \"long\": -71.5409195,\n      \"elevation\": 4265,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872833,\n      \"name\": \"Mt. Tripyramid\",\n      \"lat\": 43.9731659,\n      \"long\": -71.4427801,\n      \"elevation\": 4163,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 865897,\n      \"name\": \"Mt. Cabot\",\n      \"lat\": 44.5060061,\n      \"long\": -71.4144768,\n      \"elevation\": 4163,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871835,\n      \"name\": \"Mt. Osceola (East Peak)\",\n      \"lat\": 44.0061704,\n      \"long\": -71.5206316,\n      \"elevation\": 4134,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872294,\n      \"name\": \"Mt. Tripyramid (Middle Peak)\",\n      \"lat\": 43.9646744,\n      \"long\": -71.4400968,\n      \"elevation\": 4114,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873192,\n      \"name\": \"Cannon Mountain\",\n      \"lat\": 44.156614,\n      \"long\": -71.6988025,\n      \"elevation\": 4085,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871992,\n      \"name\": \"Mt. Hale\",\n      \"lat\": 44.2217224,\n      \"long\": -71.5120232,\n      \"elevation\": 4062,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872093,\n      \"name\": \"Mt. Jackson\",\n      \"lat\": 44.2032358,\n      \"long\": -71.3754007,\n      \"elevation\": 4042,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872824,\n      \"name\": \"Mt. Tom\",\n      \"lat\": 44.2105188,\n      \"long\": -71.4460606,\n      \"elevation\": 4042,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 6,\n      \"name\": \"Wildcat Mountain (D peak)\",\n      \"lat\": 44.2494098,\n      \"long\": -71.2235995,\n      \"elevation\": 4062,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872330,\n      \"name\": \"Mt. Moriah\",\n      \"lat\": 44.3406387,\n      \"long\": -71.1318489,\n      \"elevation\": 4029,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872460,\n      \"name\": \"Mt. Passaconaway\",\n      \"lat\": 43.9547374,\n      \"long\": -71.3808824,\n      \"elevation\": 4045,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873045,\n      \"name\": \"Galehead Mountain\",\n      \"lat\": 44.1848105,\n      \"long\": -71.5733908,\n      \"elevation\": 4016,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872920,\n      \"name\": \"Mt. Whiteface\",\n      \"lat\": 43.9339506,\n      \"long\": -71.4059066,\n      \"elevation\": 4019,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870689,\n      \"name\": \"Mt. Waumbek\",\n      \"lat\": 44.4328282,\n      \"long\": -71.4170236,\n      \"elevation\": 4006,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872086,\n      \"name\": \"Mt. Isolation\",\n      \"lat\": 44.2147796,\n      \"long\": -71.3092406,\n      \"elevation\": 4003,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872778,\n      \"name\": \"Mt. Tecumseh\",\n      \"lat\": 43.9665408,\n      \"long\": -71.5566086,\n      \"elevation\": 4009,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Mt. Hancock (South Peak)\",\n      \"lat\": 44.0732711,\n      \"long\": -71.4869445,\n      \"elevation\": 4318,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Kinsman Mountain (North Peak)\",\n      \"lat\": 44.1333547,\n      \"long\": -71.7368148,\n      \"elevation\": 4293,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Mt. Zealand\",\n      \"lat\": 44.1800207,\n      \"long\": -71.5215792,\n      \"elevation\": 4260,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 5,\n      \"name\": \"Owls Head\",\n      \"lat\": 44.1443341,\n      \"long\": -71.6051095,\n      \"elevation\": 4025,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 561737,\n      \"name\": \"Mt. Katahdin (Baxter Peak)\",\n      \"lat\": 45.9042845,\n      \"long\": -68.9213562,\n      \"elevation\": 5259,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 567535,\n      \"name\": \"Mt. Katahdin (Hamlin Peak)\",\n      \"lat\": 45.92416,\n      \"long\": -68.92767,\n      \"elevation\": 4757,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 564525,\n      \"name\": \"Crocker Mountain\",\n      \"lat\": 45.04712,\n      \"long\": -70.38273,\n      \"elevation\": 4226,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572729,\n      \"name\": \"Old Speck Mountain\",\n      \"lat\": 44.57092,\n      \"long\": -70.95365,\n      \"elevation\": 4183,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572313,\n      \"name\": \"North Brother\",\n      \"lat\": 45.95716,\n      \"long\": -68.98544,\n      \"elevation\": 4140,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572033,\n      \"name\": \"Bigelow Mountain (Avery Peak)\",\n      \"lat\": 45.14664,\n      \"long\": -70.27585,\n      \"elevation\": 4068,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 561068,\n      \"name\": \"Mt. Abraham\",\n      \"lat\": 44.9722782,\n      \"long\": -70.3259007,\n      \"elevation\": 4032,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 581982,\n      \"name\": \"South Crocker Mountain\",\n      \"lat\": 45.03619,\n      \"long\": -70.37607,\n      \"elevation\": 4042,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 576826,\n      \"name\": \"Saddleback Horn\",\n      \"lat\": 44.95119,\n      \"long\": -70.48706,\n      \"elevation\": 4041,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 578873,\n      \"name\": \"Mt. Redington\",\n      \"lat\": 45.02499,\n      \"long\": -70.3887,\n      \"elevation\": 4010,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 561033,\n      \"name\": \"Spaulding Mountain\",\n      \"lat\": 45.0028335,\n      \"long\": -70.333401,\n      \"elevation\": 4009,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 576507,\n      \"name\": \"Sugarloaf Mountain\",\n      \"lat\": 45.03169,\n      \"long\": -70.31333,\n      \"elevation\": 4226,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 578186,\n      \"name\": \"Bigelow Mountain (West Peak)\",\n      \"lat\": 45.14676,\n      \"long\": -70.28835,\n      \"elevation\": 4131,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 574668,\n      \"name\": \"Saddleback Mountain\",\n      \"lat\": 44.93641,\n      \"long\": -70.50461,\n      \"elevation\": 4117,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 1461774,\n      \"name\": \"Mt. Mansfield\",\n      \"lat\": 44.5436627,\n      \"long\": -72.8142903,\n      \"elevation\": 4383,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1458086,\n      \"name\": \"Killington Peak\",\n      \"lat\": 43.6045042,\n      \"long\": -72.8201012,\n      \"elevation\": 4226,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1456724,\n      \"name\": \"Camels Hump\",\n      \"lat\": 44.3195001,\n      \"long\": -72.8862309,\n      \"elevation\": 4071,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460843,\n      \"name\": \"Mt. Ellen\",\n      \"lat\": 44.16005,\n      \"long\": -72.9288358,\n      \"elevation\": 4078,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460513,\n      \"name\": \"Mt. Abraham\",\n      \"lat\": 44.1204328,\n      \"long\": -72.9360992,\n      \"elevation\": 4012,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 872622,\n      \"name\": \"Sandwich Mountain\",\n      \"lat\": 43.9000705,\n      \"long\": -71.4981311,\n      \"elevation\": 3983,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870370,\n      \"name\": \"The Bulge\",\n      \"lat\": 44.5146604,\n      \"long\": -71.4082607,\n      \"elevation\": 3937,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872374,\n      \"name\": \"Mt. Nancy\",\n      \"lat\": 44.1225582,\n      \"long\": -71.4047974,\n      \"elevation\": 3894,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870384,\n      \"name\": \"The Horn\",\n      \"lat\": 44.5180243,\n      \"long\": -71.4000978,\n      \"elevation\": 3911,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870718,\n      \"name\": \"Mt. Weeks\",\n      \"lat\": 44.4616068,\n      \"long\": -71.3818967,\n      \"elevation\": 3901,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872855,\n      \"name\": \"Vose Spur\",\n      \"lat\": 44.1030664,\n      \"long\": -71.4346527,\n      \"elevation\": 3848,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872798,\n      \"name\": \"East Sleeper\",\n      \"lat\": 43.9542735,\n      \"long\": -71.4352909,\n      \"elevation\": 3888,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872632,\n      \"name\": \"Scar Ridge\",\n      \"lat\": 44.0291171,\n      \"long\": -71.5943792,\n      \"elevation\": 3773,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872784,\n      \"name\": \"The Cannon Balls\",\n      \"lat\": 44.1499416,\n      \"long\": -71.7102279,\n      \"elevation\": 3766,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 13,\n      \"name\": \"South Weeks\",\n      \"lat\": 44.4423379,\n      \"long\": -71.3882565,\n      \"elevation\": 3881,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Peak Above the Nubble\",\n      \"lat\": 44.2229103,\n      \"long\": -71.561377,\n      \"elevation\": 3812,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 575826,\n      \"name\": \"South Brother\",\n      \"lat\": 45.944212,\n      \"long\": -69.0017136,\n      \"elevation\": 3960,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 566912,\n      \"name\": \"Goose Eye Mountain\",\n      \"lat\": 44.50269,\n      \"long\": -70.99938,\n      \"elevation\": 3875,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 566418,\n      \"name\": \"Fort Mountain\",\n      \"lat\": 45.96218,\n      \"long\": -68.97473,\n      \"elevation\": 3855,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 578344,\n      \"name\": \"White Cap Mountain\",\n      \"lat\": 45.23613,\n      \"long\": -70.81808,\n      \"elevation\": 3848,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 576827,\n      \"name\": \"The Horns\",\n      \"lat\": 45.145,\n      \"long\": -70.32321,\n      \"elevation\": 3806,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 564149,\n      \"name\": \"Mt. Coe\",\n      \"lat\": 45.93371,\n      \"long\": -69.00901,\n      \"elevation\": 3786,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 565625,\n      \"name\": \"East Kennebago Mountain\",\n      \"lat\": 45.12179,\n      \"long\": -70.59967,\n      \"elevation\": 3783,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 561542,\n      \"name\": \"Baldpate Mountain\",\n      \"lat\": 44.609244,\n      \"long\": -70.892372,\n      \"elevation\": 3812,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 569102,\n      \"name\": \"Kennebago Divide\",\n      \"lat\": 45.2183842,\n      \"long\": -70.8153464,\n      \"elevation\": 3392,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 565831,\n      \"name\": \"Elephant Mountain\",\n      \"lat\": 44.76807,\n      \"long\": -70.78165,\n      \"elevation\": 3760,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 575683,\n      \"name\": \"Snow Mountain (Oxford)\",\n      \"lat\": 45.16934,\n      \"long\": -70.82684,\n      \"elevation\": 3783,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 575684,\n      \"name\": \"Snow Mountain (Franklin)\",\n      \"lat\": 45.29143,\n      \"long\": -70.70927,\n      \"elevation\": 3966,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Boundary Peak\",\n      \"lat\": 45.2670136,\n      \"long\": -70.8412558,\n      \"elevation\": 3855,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 1461270,\n      \"name\": \"Pico Peak\",\n      \"lat\": 43.6395035,\n      \"long\": -72.8362132,\n      \"elevation\": 3947,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1461479,\n      \"name\": \"Stratton Mountain\",\n      \"lat\": 43.0862572,\n      \"long\": -72.9248856,\n      \"elevation\": 3940,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1457995,\n      \"name\": \"Jay Peak\",\n      \"lat\": 44.9244904,\n      \"long\": -72.5256705,\n      \"elevation\": 3786,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1461816,\n      \"name\": \"Equinox Mountain\",\n      \"lat\": 43.1659133,\n      \"long\": -73.1173951,\n      \"elevation\": 3835,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1458422,\n      \"name\": \"Mendon Peak\",\n      \"lat\": 43.5954453,\n      \"long\": -72.8454059,\n      \"elevation\": 3845,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460656,\n      \"name\": \"Bread Loaf Mountain\",\n      \"lat\": 44.0021521,\n      \"long\": -72.9416037,\n      \"elevation\": 3812,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1461622,\n      \"name\": \"Mt. Wilson\",\n      \"lat\": 44.0047016,\n      \"long\": -72.9256359,\n      \"elevation\": 3766,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1456415,\n      \"name\": \"Big Jay\",\n      \"lat\": 44.9158795,\n      \"long\": -72.5403939,\n      \"elevation\": 3763,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460797,\n      \"name\": \"Dorset Mountain\",\n      \"lat\": 43.3092317,\n      \"long\": -73.0281585,\n      \"elevation\": 3766,\n      \"state\": \"VT\"\n    }\n  ],\n  \"description\": \"The New England 100 Highest are a collection of the one hundred highest mountain summits in New England spanning across the three northernmost states in New England. Fifty-nine (59) of the summits lie in New Hampshire, 27 are in Maine and 14 are in Vermont.\"\n}\n","{\n  \"title\": \"New England 4,000 Footers\",\n  \"listID\": \"ne4k\",\n  \"peakCount\": 67,\n  \"peaks\": [\n    {\n      \"id\": 561737,\n      \"name\": \"Mt. Katahdin (Baxter Peak)\",\n      \"lat\": 45.9042845,\n      \"long\": -68.9213562,\n      \"elevation\": 5259,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 567535,\n      \"name\": \"Mt. Katahdin (Hamlin Peak)\",\n      \"lat\": 45.92416,\n      \"long\": -68.92767,\n      \"elevation\": 4757,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 564525,\n      \"name\": \"Crocker Mountain\",\n      \"lat\": 45.04712,\n      \"long\": -70.38273,\n      \"elevation\": 4226,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572729,\n      \"name\": \"Old Speck Mountain\",\n      \"lat\": 44.57092,\n      \"long\": -70.95365,\n      \"elevation\": 4183,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572313,\n      \"name\": \"North Brother\",\n      \"lat\": 45.95716,\n      \"long\": -68.98544,\n      \"elevation\": 4140,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 572033,\n      \"name\": \"Bigelow Mountain (Avery Peak)\",\n      \"lat\": 45.14664,\n      \"long\": -70.27585,\n      \"elevation\": 4068,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 561068,\n      \"name\": \"Mt. Abraham\",\n      \"lat\": 44.9722782,\n      \"long\": -70.3259007,\n      \"elevation\": 4032,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 581982,\n      \"name\": \"South Crocker Mountain\",\n      \"lat\": 45.03619,\n      \"long\": -70.37607,\n      \"elevation\": 4042,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 576826,\n      \"name\": \"Saddleback Horn\",\n      \"lat\": 44.95119,\n      \"long\": -70.48706,\n      \"elevation\": 4041,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 578873,\n      \"name\": \"Mt. Redington\",\n      \"lat\": 45.02499,\n      \"long\": -70.3887,\n      \"elevation\": 4010,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 561033,\n      \"name\": \"Spaulding Mountain\",\n      \"lat\": 45.0028335,\n      \"long\": -70.333401,\n      \"elevation\": 4009,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 576507,\n      \"name\": \"Sugarloaf Mountain\",\n      \"lat\": 45.03169,\n      \"long\": -70.31333,\n      \"elevation\": 4226,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 578186,\n      \"name\": \"Bigelow Mountain (West Peak)\",\n      \"lat\": 45.14676,\n      \"long\": -70.28835,\n      \"elevation\": 4131,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 574668,\n      \"name\": \"Saddleback Mountain\",\n      \"lat\": 44.93641,\n      \"long\": -70.50461,\n      \"elevation\": 4117,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 1461774,\n      \"name\": \"Mt. Mansfield\",\n      \"lat\": 44.5436627,\n      \"long\": -72.8142903,\n      \"elevation\": 4383,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1458086,\n      \"name\": \"Killington Peak\",\n      \"lat\": 43.6045042,\n      \"long\": -72.8201012,\n      \"elevation\": 4226,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1456724,\n      \"name\": \"Camels Hump\",\n      \"lat\": 44.3195001,\n      \"long\": -72.8862309,\n      \"elevation\": 4071,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460843,\n      \"name\": \"Mt. Ellen\",\n      \"lat\": 44.16005,\n      \"long\": -72.9288358,\n      \"elevation\": 4078,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460513,\n      \"name\": \"Mt. Abraham\",\n      \"lat\": 44.1204328,\n      \"long\": -72.9360992,\n      \"elevation\": 4012,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 871352,\n      \"name\": \"Mt. Washington\",\n      \"lat\": 44.2705781,\n      \"long\": -71.3033287,\n      \"elevation\": 6273,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871380,\n      \"name\": \"Mt. Adams\",\n      \"lat\": 44.3206546,\n      \"long\": -71.2915306,\n      \"elevation\": 5791,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872101,\n      \"name\": \"Mt. Jefferson\",\n      \"lat\": 44.304315,\n      \"long\": -71.3166955,\n      \"elevation\": 5699,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872313,\n      \"name\": \"Mt. Monroe\",\n      \"lat\": 44.2552125,\n      \"long\": -71.3214183,\n      \"elevation\": 5351,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872247,\n      \"name\": \"Mt. Madison\",\n      \"lat\": 44.3288173,\n      \"long\": -71.2767796,\n      \"elevation\": 5351,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872150,\n      \"name\": \"Mt. Lafayette\",\n      \"lat\": 44.1608182,\n      \"long\": -71.6444575,\n      \"elevation\": 5236,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872176,\n      \"name\": \"Mt. Lincoln\",\n      \"lat\": 44.1489451,\n      \"long\": -71.6445258,\n      \"elevation\": 5085,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872710,\n      \"name\": \"South Twin Mountain\",\n      \"lat\": 44.187556,\n      \"long\": -71.5548018,\n      \"elevation\": 4888,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871629,\n      \"name\": \"Carter Dome\",\n      \"lat\": 44.2673401,\n      \"long\": -71.1792622,\n      \"elevation\": 4826,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872324,\n      \"name\": \"Mt. Moosilauke\",\n      \"lat\": 44.024502,\n      \"long\": -71.8309164,\n      \"elevation\": 4813,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871851,\n      \"name\": \"Mt. Eisenhower\",\n      \"lat\": 44.2407341,\n      \"long\": -71.3501812,\n      \"elevation\": 4757,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872408,\n      \"name\": \"North Twin Mountain\",\n      \"lat\": 44.2025557,\n      \"long\": -71.5578576,\n      \"elevation\": 4751,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871628,\n      \"name\": \"Mt. Carrigain\",\n      \"lat\": 44.0936537,\n      \"long\": -71.4466959,\n      \"elevation\": 4682,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871556,\n      \"name\": \"Mt. Bond\",\n      \"lat\": 44.1528345,\n      \"long\": -71.5311895,\n      \"elevation\": 4685,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872288,\n      \"name\": \"Middle Carter Mountain\",\n      \"lat\": 44.3031109,\n      \"long\": -71.1678106,\n      \"elevation\": 4603,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"West Bond Mountain\",\n      \"lat\": 44.1547633,\n      \"long\": -71.5436295,\n      \"elevation\": 4540,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871925,\n      \"name\": \"Mt. Garfield\",\n      \"lat\": 44.1872617,\n      \"long\": -71.6106785,\n      \"elevation\": 4495,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872169,\n      \"name\": \"Mt. Liberty\",\n      \"lat\": 44.1158901,\n      \"long\": -71.6420251,\n      \"elevation\": 4439,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872698,\n      \"name\": \"South Carter Mountain\",\n      \"lat\": 44.2897779,\n      \"long\": -71.176635,\n      \"elevation\": 4419,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872940,\n      \"name\": \"Wildcat Mountain (A peak)\",\n      \"lat\": 44.2595144,\n      \"long\": -71.201848,\n      \"elevation\": 4423,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872006,\n      \"name\": \"Mt. Hancock\",\n      \"lat\": 44.0836076,\n      \"long\": -71.4934302,\n      \"elevation\": 4409,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872707,\n      \"name\": \"Kinsman Mountain (South Peak)\",\n      \"lat\": 44.1228429,\n      \"long\": -71.7367508,\n      \"elevation\": 4331,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873014,\n      \"name\": \"Mt. Field\",\n      \"lat\": 44.196137,\n      \"long\": -71.4331049,\n      \"elevation\": 4311,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872440,\n      \"name\": \"Mt. Osceola\",\n      \"lat\": 44.0014482,\n      \"long\": -71.5359097,\n      \"elevation\": 4314,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871894,\n      \"name\": \"Mt. Flume\",\n      \"lat\": 44.1089459,\n      \"long\": -71.6278579,\n      \"elevation\": 4318,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872495,\n      \"name\": \"Mt. Pierce\",\n      \"lat\": 44.2265226,\n      \"long\": -71.3659732,\n      \"elevation\": 4304,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872952,\n      \"name\": \"Mt. Willey\",\n      \"lat\": 44.1835296,\n      \"long\": -71.4207354,\n      \"elevation\": 4268,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 7,\n      \"name\": \"Bondcliff\",\n      \"lat\": 44.1405773,\n      \"long\": -71.5409195,\n      \"elevation\": 4265,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872833,\n      \"name\": \"Mt. Tripyramid\",\n      \"lat\": 43.9731659,\n      \"long\": -71.4427801,\n      \"elevation\": 4163,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 865897,\n      \"name\": \"Mt. Cabot\",\n      \"lat\": 44.5060061,\n      \"long\": -71.4144768,\n      \"elevation\": 4163,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871835,\n      \"name\": \"Mt. Osceola (East Peak)\",\n      \"lat\": 44.0061704,\n      \"long\": -71.5206316,\n      \"elevation\": 4134,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872294,\n      \"name\": \"Mt. Tripyramid (Middle Peak)\",\n      \"lat\": 43.9646744,\n      \"long\": -71.4400968,\n      \"elevation\": 4114,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873192,\n      \"name\": \"Cannon Mountain\",\n      \"lat\": 44.156614,\n      \"long\": -71.6988025,\n      \"elevation\": 4085,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871992,\n      \"name\": \"Mt. Hale\",\n      \"lat\": 44.2217224,\n      \"long\": -71.5120232,\n      \"elevation\": 4062,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872093,\n      \"name\": \"Mt. Jackson\",\n      \"lat\": 44.2032358,\n      \"long\": -71.3754007,\n      \"elevation\": 4042,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872824,\n      \"name\": \"Mt. Tom\",\n      \"lat\": 44.2105188,\n      \"long\": -71.4460606,\n      \"elevation\": 4042,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 6,\n      \"name\": \"Wildcat Mountain (D peak)\",\n      \"lat\": 44.2494098,\n      \"long\": -71.2235995,\n      \"elevation\": 4062,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872330,\n      \"name\": \"Mt. Moriah\",\n      \"lat\": 44.3406387,\n      \"long\": -71.1318489,\n      \"elevation\": 4029,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872460,\n      \"name\": \"Mt. Passaconaway\",\n      \"lat\": 43.9547374,\n      \"long\": -71.3808824,\n      \"elevation\": 4045,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873045,\n      \"name\": \"Galehead Mountain\",\n      \"lat\": 44.1848105,\n      \"long\": -71.5733908,\n      \"elevation\": 4016,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872920,\n      \"name\": \"Mt. Whiteface\",\n      \"lat\": 43.9339506,\n      \"long\": -71.4059066,\n      \"elevation\": 4019,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870689,\n      \"name\": \"Mt. Waumbek\",\n      \"lat\": 44.4328282,\n      \"long\": -71.4170236,\n      \"elevation\": 4006,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872086,\n      \"name\": \"Mt. Isolation\",\n      \"lat\": 44.2147796,\n      \"long\": -71.3092406,\n      \"elevation\": 4003,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872778,\n      \"name\": \"Mt. Tecumseh\",\n      \"lat\": 43.9665408,\n      \"long\": -71.5566086,\n      \"elevation\": 4009,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Mt. Hancock (South Peak)\",\n      \"lat\": 44.0732711,\n      \"long\": -71.4869445,\n      \"elevation\": 4318,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Kinsman Mountain (North Peak)\",\n      \"lat\": 44.1333547,\n      \"long\": -71.7368148,\n      \"elevation\": 4293,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Mt. Zealand\",\n      \"lat\": 44.1800207,\n      \"long\": -71.5215792,\n      \"elevation\": 4260,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 5,\n      \"name\": \"Owls Head\",\n      \"lat\": 44.1443341,\n      \"long\": -71.6051095,\n      \"elevation\": 4025,\n      \"state\": \"NH\"\n    }\n  ],\n  \"description\": \"The New England 4,000 footers are a collection of summits over 4,000 ft. in elevation with at least 200 ft of topographic prominence spanning across the three northernmost states in New England (Maine, New Hampshire and Vermont).\"\n}\n","{\n  \"title\": \"New England State Highpoints\",\n  \"listID\": \"neHigh\",\n  \"peakCount\": 6,\n  \"peaks\": [\n    {\n      \"id\": 871352,\n      \"name\": \"Mt. Washington\",\n      \"lat\": 44.2705781,\n      \"long\": -71.3033287,\n      \"elevation\": 6273,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 561737,\n      \"name\": \"Mt. Katahdin (Baxter Peak)\",\n      \"lat\": 45.9042845,\n      \"long\": -68.9213562,\n      \"elevation\": 5259,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 1461774,\n      \"name\": \"Mt. Mansfield\",\n      \"lat\": 44.5436627,\n      \"long\": -72.8142903,\n      \"elevation\": 4383,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 607428,\n      \"name\": \"Mt. Frissell (South Slope)\",\n      \"lat\": 42.049633,\n      \"long\": -73.483042,\n      \"elevation\": 2451,\n      \"state\": \"CT\"\n    },\n    {\n      \"id\": 1219566,\n      \"name\": \"Jerimoth Hill\",\n      \"lat\": 41.8494158,\n      \"long\": -71.7788736,\n      \"elevation\": 810,\n      \"state\": \"RI\"\n    },\n    {\n      \"id\": 607448,\n      \"name\": \"Mt. Greylock\",\n      \"lat\": 42.6371703,\n      \"long\": -73.1659399,\n      \"elevation\": 3491,\n      \"state\": \"MA\"\n    }\n  ],\n  \"description\": \"The New England State Highpoints are a collection of the highest points in each of the six states in New England. The highest point in Connecticut is not a mountain summit, but is on the border of Massachusetts on the slope of Mt. Frissell. It is one of only four states where the highest point is not a mountain summit (KS, DE and DC being the other three).\"\n}\n","{\n  \"title\": \"New Hampshire 4,000 Footers\",\n  \"listID\": \"nh4k\",\n  \"peakCount\": 48,\n  \"peaks\": [\n    {\n      \"id\": 871352,\n      \"name\": \"Mt. Washington\",\n      \"lat\": 44.2705781,\n      \"long\": -71.3033287,\n      \"elevation\": 6273,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871380,\n      \"name\": \"Mt. Adams\",\n      \"lat\": 44.3206546,\n      \"long\": -71.2915306,\n      \"elevation\": 5791,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872101,\n      \"name\": \"Mt. Jefferson\",\n      \"lat\": 44.304315,\n      \"long\": -71.3166955,\n      \"elevation\": 5699,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872313,\n      \"name\": \"Mt. Monroe\",\n      \"lat\": 44.2552125,\n      \"long\": -71.3214183,\n      \"elevation\": 5351,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872247,\n      \"name\": \"Mt. Madison\",\n      \"lat\": 44.3288173,\n      \"long\": -71.2767796,\n      \"elevation\": 5351,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872150,\n      \"name\": \"Mt. Lafayette\",\n      \"lat\": 44.1608182,\n      \"long\": -71.6444575,\n      \"elevation\": 5236,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872176,\n      \"name\": \"Mt. Lincoln\",\n      \"lat\": 44.1489451,\n      \"long\": -71.6445258,\n      \"elevation\": 5085,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872710,\n      \"name\": \"South Twin Mountain\",\n      \"lat\": 44.187556,\n      \"long\": -71.5548018,\n      \"elevation\": 4888,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871629,\n      \"name\": \"Carter Dome\",\n      \"lat\": 44.2673401,\n      \"long\": -71.1792622,\n      \"elevation\": 4826,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872324,\n      \"name\": \"Mt. Moosilauke\",\n      \"lat\": 44.024502,\n      \"long\": -71.8309164,\n      \"elevation\": 4813,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871851,\n      \"name\": \"Mt. Eisenhower\",\n      \"lat\": 44.2407341,\n      \"long\": -71.3501812,\n      \"elevation\": 4757,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872408,\n      \"name\": \"North Twin Mountain\",\n      \"lat\": 44.2025557,\n      \"long\": -71.5578576,\n      \"elevation\": 4751,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871628,\n      \"name\": \"Mt. Carrigain\",\n      \"lat\": 44.0936537,\n      \"long\": -71.4466959,\n      \"elevation\": 4682,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871556,\n      \"name\": \"Mt. Bond\",\n      \"lat\": 44.1528345,\n      \"long\": -71.5311895,\n      \"elevation\": 4685,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872288,\n      \"name\": \"Middle Carter Mountain\",\n      \"lat\": 44.3031109,\n      \"long\": -71.1678106,\n      \"elevation\": 4603,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"West Bond Mountain\",\n      \"lat\": 44.1547633,\n      \"long\": -71.5436295,\n      \"elevation\": 4540,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871925,\n      \"name\": \"Mt. Garfield\",\n      \"lat\": 44.1872617,\n      \"long\": -71.6106785,\n      \"elevation\": 4495,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872169,\n      \"name\": \"Mt. Liberty\",\n      \"lat\": 44.1158901,\n      \"long\": -71.6420251,\n      \"elevation\": 4439,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872698,\n      \"name\": \"South Carter Mountain\",\n      \"lat\": 44.2897779,\n      \"long\": -71.176635,\n      \"elevation\": 4419,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872940,\n      \"name\": \"Wildcat Mountain (A peak)\",\n      \"lat\": 44.2595144,\n      \"long\": -71.201848,\n      \"elevation\": 4423,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872006,\n      \"name\": \"Mt. Hancock\",\n      \"lat\": 44.0836076,\n      \"long\": -71.4934302,\n      \"elevation\": 4409,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872707,\n      \"name\": \"Kinsman Mountain (South Peak)\",\n      \"lat\": 44.1228429,\n      \"long\": -71.7367508,\n      \"elevation\": 4331,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873014,\n      \"name\": \"Mt. Field\",\n      \"lat\": 44.196137,\n      \"long\": -71.4331049,\n      \"elevation\": 4311,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872440,\n      \"name\": \"Mt. Osceola\",\n      \"lat\": 44.0014482,\n      \"long\": -71.5359097,\n      \"elevation\": 4314,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871894,\n      \"name\": \"Mt. Flume\",\n      \"lat\": 44.1089459,\n      \"long\": -71.6278579,\n      \"elevation\": 4318,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872495,\n      \"name\": \"Mt. Pierce\",\n      \"lat\": 44.2265226,\n      \"long\": -71.3659732,\n      \"elevation\": 4304,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872952,\n      \"name\": \"Mt. Willey\",\n      \"lat\": 44.1835296,\n      \"long\": -71.4207354,\n      \"elevation\": 4268,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 7,\n      \"name\": \"Bondcliff\",\n      \"lat\": 44.1405773,\n      \"long\": -71.5409195,\n      \"elevation\": 4265,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872833,\n      \"name\": \"Mt. Tripyramid\",\n      \"lat\": 43.9731659,\n      \"long\": -71.4427801,\n      \"elevation\": 4163,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 865897,\n      \"name\": \"Mt. Cabot\",\n      \"lat\": 44.5060061,\n      \"long\": -71.4144768,\n      \"elevation\": 4163,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871835,\n      \"name\": \"Mt. Osceola (East Peak)\",\n      \"lat\": 44.0061704,\n      \"long\": -71.5206316,\n      \"elevation\": 4134,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872294,\n      \"name\": \"Mt. Tripyramid (Middle Peak)\",\n      \"lat\": 43.9646744,\n      \"long\": -71.4400968,\n      \"elevation\": 4114,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873192,\n      \"name\": \"Cannon Mountain\",\n      \"lat\": 44.156614,\n      \"long\": -71.6988025,\n      \"elevation\": 4085,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871992,\n      \"name\": \"Mt. Hale\",\n      \"lat\": 44.2217224,\n      \"long\": -71.5120232,\n      \"elevation\": 4062,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872093,\n      \"name\": \"Mt. Jackson\",\n      \"lat\": 44.2032358,\n      \"long\": -71.3754007,\n      \"elevation\": 4042,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872824,\n      \"name\": \"Mt. Tom\",\n      \"lat\": 44.2105188,\n      \"long\": -71.4460606,\n      \"elevation\": 4042,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 6,\n      \"name\": \"Wildcat Mountain (D peak)\",\n      \"lat\": 44.2494098,\n      \"long\": -71.2235995,\n      \"elevation\": 4062,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872330,\n      \"name\": \"Mt. Moriah\",\n      \"lat\": 44.3406387,\n      \"long\": -71.1318489,\n      \"elevation\": 4029,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872460,\n      \"name\": \"Mt. Passaconaway\",\n      \"lat\": 43.9547374,\n      \"long\": -71.3808824,\n      \"elevation\": 4045,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873045,\n      \"name\": \"Galehead Mountain\",\n      \"lat\": 44.1848105,\n      \"long\": -71.5733908,\n      \"elevation\": 4016,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872920,\n      \"name\": \"Mt. Whiteface\",\n      \"lat\": 43.9339506,\n      \"long\": -71.4059066,\n      \"elevation\": 4019,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870689,\n      \"name\": \"Mt. Waumbek\",\n      \"lat\": 44.4328282,\n      \"long\": -71.4170236,\n      \"elevation\": 4006,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872086,\n      \"name\": \"Mt. Isolation\",\n      \"lat\": 44.2147796,\n      \"long\": -71.3092406,\n      \"elevation\": 4003,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872778,\n      \"name\": \"Mt. Tecumseh\",\n      \"lat\": 43.9665408,\n      \"long\": -71.5566086,\n      \"elevation\": 4009,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Mt. Hancock (South Peak)\",\n      \"lat\": 44.0732711,\n      \"long\": -71.4869445,\n      \"elevation\": 4318,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Kinsman Mountain (North Peak)\",\n      \"lat\": 44.1333547,\n      \"long\": -71.7368148,\n      \"elevation\": 4293,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Mt. Zealand\",\n      \"lat\": 44.1800207,\n      \"long\": -71.5215792,\n      \"elevation\": 4260,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 5,\n      \"name\": \"Owls Head\",\n      \"lat\": 44.1443341,\n      \"long\": -71.6051095,\n      \"elevation\": 4025,\n      \"state\": \"NH\"\n    }\n  ],\n  \"description\": \"The New Hampshire 4,000 Footers (NH 48) are a collection of summits over 4,000 ft. in elevation with at least 200 ft of topographic prominence within the state of New Hampshire. All summits are located within the 800,000 acre White Mountain National Forest. More than 1/3 of the peaks are located directly along or in close proximity to the Appalachian Trail.\"\n}\n","{\n  \"title\": \"New Hampshire 52 With a View\",\n  \"listID\": \"nh52\",\n  \"peakCount\": 52,\n  \"peaks\": [\n    {\n      \"id\": 872622,\n      \"name\": \"Sandwich Mountain\",\n      \"lat\": 43.9000705,\n      \"long\": -71.4981311,\n      \"elevation\": 3983,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872876,\n      \"name\": \"Mt. Webster\",\n      \"lat\": 44.1948092,\n      \"long\": -71.3878928,\n      \"elevation\": 3898,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870151,\n      \"name\": \"Mt. Starr King\",\n      \"lat\": 44.4344947,\n      \"long\": -71.4328572,\n      \"elevation\": 3891,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870384,\n      \"name\": \"The Horn\",\n      \"lat\": 44.5180243,\n      \"long\": -71.4000978,\n      \"elevation\": 3911,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872647,\n      \"name\": \"Shelburne Moriah Mountain\",\n      \"lat\": 44.3531843,\n      \"long\": -71.0988137,\n      \"elevation\": 3730,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 870264,\n      \"name\": \"Sugarloaf Mountain\",\n      \"lat\": 44.7444935,\n      \"long\": -71.4675847,\n      \"elevation\": 3632,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872388,\n      \"name\": \"North Baldface\",\n      \"lat\": 44.2430039,\n      \"long\": -71.0872944,\n      \"elevation\": 3609,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872754,\n      \"name\": \"Mt. Success\",\n      \"lat\": 44.4715308,\n      \"long\": -71.0392432,\n      \"elevation\": 3566,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872692,\n      \"name\": \"South Baldface\",\n      \"lat\": 44.2309664,\n      \"long\": -71.0780643,\n      \"elevation\": 3570,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871679,\n      \"name\": \"Mt. Chocorua\",\n      \"lat\": 43.9542292,\n      \"long\": -71.2734042,\n      \"elevation\": 3474,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872727,\n      \"name\": \"Stairs Mountain\",\n      \"lat\": 44.1556126,\n      \"long\": -71.3195871,\n      \"elevation\": 3458,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872102,\n      \"name\": \"Jennings Peak\",\n      \"lat\": 43.9112492,\n      \"long\": -71.5105008,\n      \"elevation\": 3442,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871418,\n      \"name\": \"Mt. Avalon\",\n      \"lat\": 44.2064609,\n      \"long\": -71.4283253,\n      \"elevation\": 3412,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 1916321,\n      \"name\": \"North Percy Peak\",\n      \"lat\": 44.6633851,\n      \"long\": -71.4356387,\n      \"elevation\": 3379,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872565,\n      \"name\": \"Mt. Resolution\",\n      \"lat\": 44.1475708,\n      \"long\": -71.3139982,\n      \"elevation\": 3405,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 868234,\n      \"name\": \"Magalloway Mountain\",\n      \"lat\": 45.0631032,\n      \"long\": -71.1645188,\n      \"elevation\": 3346,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872828,\n      \"name\": \"Mt. Tremont\",\n      \"lat\": 44.0534857,\n      \"long\": -71.3567806,\n      \"elevation\": 3363,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872816,\n      \"name\": \"Three Sisters\",\n      \"lat\": 43.9621751,\n      \"long\": -71.272107,\n      \"elevation\": 3327,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872126,\n      \"name\": \"Kearsarge North\",\n      \"lat\": 44.1058615,\n      \"long\": -71.0940653,\n      \"elevation\": 3271,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 868282,\n      \"name\": \"Mt. Martha\",\n      \"lat\": 44.3306868,\n      \"long\": -71.4992034,\n      \"elevation\": 3550,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 869960,\n      \"name\": \"Smarts Mountain\",\n      \"lat\": 43.8256166,\n      \"long\": -72.0389802,\n      \"elevation\": 3232,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872897,\n      \"name\": \"West Royce Mountain\",\n      \"lat\": 44.3024756,\n      \"long\": -71.0182785,\n      \"elevation\": 3195,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872465,\n      \"name\": \"Mt. Paugus\",\n      \"lat\": 43.9514212,\n      \"long\": -71.329085,\n      \"elevation\": 3169,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872402,\n      \"name\": \"North Moat Mountain\",\n      \"lat\": 44.0431627,\n      \"long\": -71.214619,\n      \"elevation\": 3189,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872070,\n      \"name\": \"Imp Face\",\n      \"lat\": 44.3217366,\n      \"long\": -71.1880888,\n      \"elevation\": 3163,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 868516,\n      \"name\": \"Mt. Monadnock\",\n      \"lat\": 42.8611939,\n      \"long\": -72.1092489,\n      \"elevation\": 3041,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 865998,\n      \"name\": \"Mt. Cardigan\",\n      \"lat\": 43.6497949,\n      \"long\": -71.9148048,\n      \"elevation\": 3123,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871741,\n      \"name\": \"Mt. Crawford\",\n      \"lat\": 44.1366169,\n      \"long\": -71.3322305,\n      \"elevation\": 3094,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872397,\n      \"name\": \"North Doublehead\",\n      \"lat\": 44.167867,\n      \"long\": -71.130261,\n      \"elevation\": 3045,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872455,\n      \"name\": \"Mt. Parker\",\n      \"lat\": 44.1236081,\n      \"long\": -71.2985564,\n      \"elevation\": 3002,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 869884,\n      \"name\": \"Mt. Shaw\",\n      \"lat\": 43.7420203,\n      \"long\": -71.2734035,\n      \"elevation\": 2920,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871842,\n      \"name\": \"Eastman Mountain\",\n      \"lat\": 44.2157975,\n      \"long\": -71.0621019,\n      \"elevation\": 2926,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 867821,\n      \"name\": \"Mt. Kearsarge\",\n      \"lat\": 43.3834092,\n      \"long\": -71.8570253,\n      \"elevation\": 2926,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872036,\n      \"name\": \"Hibbard Mountain\",\n      \"lat\": 43.9363434,\n      \"long\": -71.370819,\n      \"elevation\": 2930,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 868617,\n      \"name\": \"Mt. Cube\",\n      \"lat\": 43.88577,\n      \"long\": -72.022969,\n      \"elevation\": 2913,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872744,\n      \"name\": \"Stinson Mountain\",\n      \"lat\": 43.8347371,\n      \"long\": -71.7791832,\n      \"elevation\": 2887,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872947,\n      \"name\": \"Mt. Willard\",\n      \"lat\": 44.2042235,\n      \"long\": -71.412854,\n      \"elevation\": 2848,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871524,\n      \"name\": \"Black Mountain\",\n      \"lat\": 44.074732,\n      \"long\": -71.9221092,\n      \"elevation\": 2828,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872271,\n      \"name\": \"Mt. Meader\",\n      \"lat\": 44.2692075,\n      \"long\": -71.053426,\n      \"elevation\": 2782,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872703,\n      \"name\": \"South Moat Mountain\",\n      \"lat\": 44.0175458,\n      \"long\": -71.1936791,\n      \"elevation\": 2762,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871525,\n      \"name\": \"Black Mountain (Middle Peak)\",\n      \"lat\": 43.885895,\n      \"long\": -71.5306309,\n      \"elevation\": 2723,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871785,\n      \"name\": \"Welch & Dickey Mountains\",\n      \"lat\": 43.9230081,\n      \"long\": -71.5786151,\n      \"elevation\": 2726,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872083,\n      \"name\": \"Iron Mountain\",\n      \"lat\": 44.1347815,\n      \"long\": -71.2392385,\n      \"elevation\": 2710,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872522,\n      \"name\": \"Potash Mountain\",\n      \"lat\": 43.9819434,\n      \"long\": -71.3907565,\n      \"elevation\": 2690,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 871545,\n      \"name\": \"Blueberry Mountain\",\n      \"lat\": 44.0195018,\n      \"long\": -71.9049771,\n      \"elevation\": 2664,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872089,\n      \"name\": \"Mt. Israel\",\n      \"lat\": 43.8455256,\n      \"long\": -71.4718884,\n      \"elevation\": 2628,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 873080,\n      \"name\": \"Square Ledge Trail\",\n      \"lat\": 43.9503486,\n      \"long\": -71.3575733,\n      \"elevation\": 2041,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 869543,\n      \"name\": \"Mt. Roberts\",\n      \"lat\": 43.756464,\n      \"long\": -71.3264601,\n      \"elevation\": 2569,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872479,\n      \"name\": \"Mt. Pemigewasset\",\n      \"lat\": 44.0981891,\n      \"long\": -71.6996787,\n      \"elevation\": 2529,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872023,\n      \"name\": \"Mt. Hayes\",\n      \"lat\": 44.4158982,\n      \"long\": -71.1597747,\n      \"elevation\": 2543,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 868422,\n      \"name\": \"Middle Sugarloaf\",\n      \"lat\": 44.2513222,\n      \"long\": -71.5173219,\n      \"elevation\": 2536,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 872031,\n      \"name\": \"Hedgehog Mountain\",\n      \"lat\": 43.9745838,\n      \"long\": -71.367142,\n      \"elevation\": 2533,\n      \"state\": \"NH\"\n    }\n  ],\n  \"description\": \"The New Hampshire 52 With a View are a collection of summits in the state of New Hampshire that are under 4,000 feet in elevation and have excellent views from the summit. This peak list was created by the “Over the Hill Hikers” group as an alternative to the New Hampshire 4,000 footers list. The majority of the peaks reside within the 800,000 acre White Mountain National Forest.\"\n}\n","{\n  \"title\": \"Southern Sixers\",\n  \"listID\": \"south6\",\n  \"peakCount\": 40,\n  \"peaks\": [\n    {\n      \"id\": 1013745,\n      \"name\": \"Mt. Mitchell\",\n      \"lat\": 35.7647624,\n      \"long\": -82.2648609,\n      \"elevation\": 6663,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1023658,\n      \"name\": \"Mt. Craig\",\n      \"lat\": 35.7776097,\n      \"long\": -82.2617853,\n      \"elevation\": 6637,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1326387,\n      \"name\": \"Clingmans Dome\",\n      \"lat\": 35.562778,\n      \"long\": -83.498535,\n      \"elevation\": 6644,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1008906,\n      \"name\": \"Balsam Cone\",\n      \"lat\": 35.7895541,\n      \"long\": -82.2559521,\n      \"elevation\": 6581,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1010111,\n      \"name\": \"Cattail Peak\",\n      \"lat\": 35.7985673,\n      \"long\": -82.2561837,\n      \"elevation\": 6555,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1023659,\n      \"name\": \"Mt. Gibbes\",\n      \"lat\": 35.7389873,\n      \"long\": -82.2851441,\n      \"elevation\": 6562,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1014869,\n      \"name\": \"Richland Balsam\",\n      \"lat\": 35.3671315,\n      \"long\": -82.9900864,\n      \"elevation\": 6404,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1017815,\n      \"name\": \"Hallback\",\n      \"lat\": 35.7488602,\n      \"long\": -82.2753712,\n      \"elevation\": 6388,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1008011,\n      \"name\": \"Old Black\",\n      \"lat\": 35.71503,\n      \"long\": -83.2554699,\n      \"elevation\": 6352,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1019209,\n      \"name\": \"Blackstock Knob\",\n      \"lat\": 35.7379826,\n      \"long\": -82.3185412,\n      \"elevation\": 6325,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1010141,\n      \"name\": \"Celo Knob\",\n      \"lat\": 35.8522963,\n      \"long\": -82.2485812,\n      \"elevation\": 6319,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 996851,\n      \"name\": \"Waterrock Knob\",\n      \"lat\": 35.4641389,\n      \"long\": -83.1376606,\n      \"elevation\": 6289,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1014928,\n      \"name\": \"Roan High Bluff\",\n      \"lat\": 36.0931728,\n      \"long\": -82.1454025,\n      \"elevation\": 6260,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1023665,\n      \"name\": \"Mt. Lyn Lowry\",\n      \"lat\": 35.4636692,\n      \"long\": -83.1103728,\n      \"elevation\": 6234,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 989123,\n      \"name\": \"Luftee Knob\",\n      \"lat\": 35.6923491,\n      \"long\": -83.2151688,\n      \"elevation\": 6197,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1009428,\n      \"name\": \"Black Balsam Knob\",\n      \"lat\": 35.3278774,\n      \"long\": -82.874294,\n      \"elevation\": 6207,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1020423,\n      \"name\": \"Gibbs Mountain\",\n      \"lat\": 35.8404037,\n      \"long\": -82.2479608,\n      \"elevation\": 6230,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1016759,\n      \"name\": \"Winter Star Mountain\",\n      \"lat\": 35.8176441,\n      \"long\": -82.2491358,\n      \"elevation\": 6204,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1023657,\n      \"name\": \"Mt. Collins\",\n      \"lat\": 35.5868095,\n      \"long\": -83.4723775,\n      \"elevation\": 6188,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1023669,\n      \"name\": \"Mt. Yonaguska\",\n      \"lat\": 35.6941919,\n      \"long\": -83.2483278,\n      \"elevation\": 6181,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1020523,\n      \"name\": \"Grassy Ridge Bald\",\n      \"lat\": 36.0998357,\n      \"long\": -82.0803954,\n      \"elevation\": 6184,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 989348,\n      \"name\": \"Marks Knob\",\n      \"lat\": 35.6802835,\n      \"long\": -83.2480931,\n      \"elevation\": 6158,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1019126,\n      \"name\": \"Big Cataloochee Mountain\",\n      \"lat\": 35.6719328,\n      \"long\": -83.1760207,\n      \"elevation\": 6152,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1023662,\n      \"name\": \"Mt. Hardy\",\n      \"lat\": 35.3042737,\n      \"long\": -82.9272857,\n      \"elevation\": 6106,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1022218,\n      \"name\": \"Reinhart Knob\",\n      \"lat\": 35.3500978,\n      \"long\": -82.9769255,\n      \"elevation\": 6102,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1022472,\n      \"name\": \"Sam Knob\",\n      \"lat\": 35.3295456,\n      \"long\": -82.8947013,\n      \"elevation\": 6073,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1022905,\n      \"name\": \"Tennent Mountain\",\n      \"lat\": 35.3370442,\n      \"long\": -82.8690163,\n      \"elevation\": 6063,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1014536,\n      \"name\": \"Plott Balsam\",\n      \"lat\": 35.4801284,\n      \"long\": -83.0881925,\n      \"elevation\": 6092,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1019839,\n      \"name\": \"Craggy Dome\",\n      \"lat\": 35.7059415,\n      \"long\": -82.3667865,\n      \"elevation\": 6056,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1020505,\n      \"name\": \"Grassy Cove Top\",\n      \"lat\": 35.3484333,\n      \"long\": -82.8640163,\n      \"elevation\": 6037,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 997707,\n      \"name\": \"Yellow Face\",\n      \"lat\": 35.4509277,\n      \"long\": -83.1506953,\n      \"elevation\": 6033,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1010378,\n      \"name\": \"Cold Mountain\",\n      \"lat\": 35.4095443,\n      \"long\": -82.8562391,\n      \"elevation\": 6024,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1022609,\n      \"name\": \"Shining Rock\",\n      \"lat\": 35.3681555,\n      \"long\": -82.8623498,\n      \"elevation\": 6020,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1019624,\n      \"name\": \"Chestnut Bald\",\n      \"lat\": 35.3071464,\n      \"long\": -82.8893153,\n      \"elevation\": 6020,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1000705,\n      \"name\": \"Mt. Sequoyah\",\n      \"lat\": 35.6745344,\n      \"long\": -83.2884823,\n      \"elevation\": 6001,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1023660,\n      \"name\": \"Mt. Guyot\",\n      \"lat\": 35.7053166,\n      \"long\": -83.257456,\n      \"elevation\": 6621,\n      \"state\": \"TN\"\n    },\n    {\n      \"id\": 1646824,\n      \"name\": \"Mt. Le Conte\",\n      \"lat\": 35.6543501,\n      \"long\": -83.4367154,\n      \"elevation\": 6591,\n      \"state\": \"TN\"\n    },\n    {\n      \"id\": 1306768,\n      \"name\": \"Mt. Chapman\",\n      \"lat\": 35.6867569,\n      \"long\": -83.2709816,\n      \"elevation\": 6427,\n      \"state\": \"TN\"\n    },\n    {\n      \"id\": 1022307,\n      \"name\": \"Roan High Knob\",\n      \"lat\": 36.1045556,\n      \"long\": -82.1223421,\n      \"elevation\": 6283,\n      \"state\": \"TN\"\n    },\n    {\n      \"id\": 1023663,\n      \"name\": \"Mt. Kephart\",\n      \"lat\": 35.6308871,\n      \"long\": -83.3897695,\n      \"elevation\": 6217,\n      \"state\": \"TN\"\n    }\n  ],\n  \"description\": \"The Southern Sixers (6ers) are a collection of summits over 6,000 ft. in elevation in the southern Appalachian mountains. All of the peaks are located within 32 miles of the TN/NC border. All mountains have at least 200 ft. of topographic prominence, or there is a distance of at least 0.75 miles between peaks. Other than Mount Washington in New Hampshire, these mountains are the only 6,000 footers east of the Mississippi.\"\n}\n","{\n  \"title\": \"Vermont 4,000 Footers\",\n  \"listID\": \"vt4k\",\n  \"peakCount\": 5,\n  \"peaks\": [\n    {\n      \"id\": 1461774,\n      \"name\": \"Mt. Mansfield\",\n      \"lat\": 44.5436627,\n      \"long\": -72.8142903,\n      \"elevation\": 4383,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1458086,\n      \"name\": \"Killington Peak\",\n      \"lat\": 43.6045042,\n      \"long\": -72.8201012,\n      \"elevation\": 4226,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1456724,\n      \"name\": \"Camels Hump\",\n      \"lat\": 44.3195001,\n      \"long\": -72.8862309,\n      \"elevation\": 4071,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460843,\n      \"name\": \"Mt. Ellen\",\n      \"lat\": 44.16005,\n      \"long\": -72.9288358,\n      \"elevation\": 4078,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1460513,\n      \"name\": \"Mt. Abraham\",\n      \"lat\": 44.1204328,\n      \"long\": -72.9360992,\n      \"elevation\": 4012,\n      \"state\": \"VT\"\n    }\n  ],\n  \"description\": \"The Vermont 4,000 Footers are a collection of summits over 4,000 ft. in elevation with at least 200 ft of topographic prominence within the state of Vermont. All five summits reside along the 272 mile “Long Trail”, the oldest long distance hiking trail in the United States.\"\n}\n","{\n  \"title\": \"USA State Highpoints\",\n  \"listID\": \"usHigh\",\n  \"peakCount\": 51,\n  \"peaks\": [\n    {\n      \"id\": 1414314,\n      \"name\": \"Denali\",\n      \"lat\": 63.0691018,\n      \"long\": -151.0062617,\n      \"elevation\": 20233,\n      \"state\": \"AK\"\n    },\n    {\n      \"id\": 159374,\n      \"name\": \"Cheaha Mountain\",\n      \"lat\": 33.485384,\n      \"long\": -85.8085996,\n      \"elevation\": 2405,\n      \"state\": \"AL\"\n    },\n    {\n      \"id\": 30290,\n      \"name\": \"Humphreys Peak\",\n      \"lat\": 35.3463151,\n      \"long\": -111.6779884,\n      \"elevation\": 12621,\n      \"state\": \"AZ\"\n    },\n    {\n      \"id\": 67051,\n      \"name\": \"Magazine Mountain\",\n      \"lat\": 35.167277,\n      \"long\": -93.6449649,\n      \"elevation\": 2746,\n      \"state\": \"AR\"\n    },\n    {\n      \"id\": 269051,\n      \"name\": \"Mt. Whitney\",\n      \"lat\": 36.57857,\n      \"long\": -118.2924218,\n      \"elevation\": 14478,\n      \"state\": \"CA\"\n    },\n    {\n      \"id\": 180381,\n      \"name\": \"Mt. Elbert\",\n      \"lat\": 39.1178687,\n      \"long\": -106.4452569,\n      \"elevation\": 14426,\n      \"state\": \"CO\"\n    },\n    {\n      \"id\": 607428,\n      \"name\": \"Mt. Frissell (South Slope)\",\n      \"lat\": 42.049633,\n      \"long\": -73.483042,\n      \"elevation\": 2451,\n      \"state\": \"CT\"\n    },\n    {\n      \"id\": 2496982,\n      \"name\": \"Point Reno\",\n      \"lat\": 38.9517864,\n      \"long\": -77.076023,\n      \"elevation\": 407,\n      \"state\": \"DC\"\n    },\n    {\n      \"id\": 1851954,\n      \"name\": \"Britton Hill\",\n      \"lat\": 30.9886961,\n      \"long\": -86.282046,\n      \"elevation\": 344,\n      \"state\": \"FL\"\n    },\n    {\n      \"id\": 354839,\n      \"name\": \"Brasstown Bald\",\n      \"lat\": 34.8741923,\n      \"long\": -83.8106479,\n      \"elevation\": 4774,\n      \"state\": \"GA\"\n    },\n    {\n      \"id\": 366215,\n      \"name\": \"Mauna Kea\",\n      \"lat\": 19.8206065,\n      \"long\": -155.4681155,\n      \"elevation\": 13776,\n      \"state\": \"HI\"\n    },\n    {\n      \"id\": 1851955,\n      \"name\": \"Hawkeye Point\",\n      \"lat\": 43.4599668,\n      \"long\": -95.7089033,\n      \"elevation\": 1670,\n      \"state\": \"IA\"\n    },\n    {\n      \"id\": 378037,\n      \"name\": \"Borah Peak\",\n      \"lat\": 44.1373404,\n      \"long\": -113.7811392,\n      \"elevation\": 12647,\n      \"state\": \"ID\"\n    },\n    {\n      \"id\": 423586,\n      \"name\": \"Charles Mound\",\n      \"lat\": 42.5040283,\n      \"long\": -90.2395964,\n      \"elevation\": 1234,\n      \"state\": \"IL\"\n    },\n    {\n      \"id\": 1851956,\n      \"name\": \"Hoosier Hill\",\n      \"lat\": 40.0002603,\n      \"long\": -84.8509693,\n      \"elevation\": 1250,\n      \"state\": \"IN\"\n    },\n    {\n      \"id\": 484933,\n      \"name\": \"Mt. Sunflower\",\n      \"lat\": 39.0219757,\n      \"long\": -102.0372428,\n      \"elevation\": 4035,\n      \"state\": \"KS\"\n    },\n    {\n      \"id\": 496627,\n      \"name\": \"Little Black Mountain\",\n      \"lat\": 36.8409229,\n      \"long\": -83.0748906,\n      \"elevation\": 3487,\n      \"state\": \"KY\"\n    },\n    {\n      \"id\": 542199,\n      \"name\": \"Driskill Mountain\",\n      \"lat\": 32.4250483,\n      \"long\": -92.8969723,\n      \"elevation\": 531,\n      \"state\": \"LA\"\n    },\n    {\n      \"id\": 588826,\n      \"name\": \"Backbone Mountain\",\n      \"lat\": 39.237329,\n      \"long\": -79.4853308,\n      \"elevation\": 3360,\n      \"state\": \"MD\"\n    },\n    {\n      \"id\": 1623751,\n      \"name\": \"Mt. Arvon\",\n      \"lat\": 46.755813,\n      \"long\": -88.155434,\n      \"elevation\": 1978,\n      \"state\": \"MI\"\n    },\n    {\n      \"id\": 656081,\n      \"name\": \"Eagle Mountain\",\n      \"lat\": 47.8973467,\n      \"long\": -90.5606387,\n      \"elevation\": 2290,\n      \"state\": \"MN\"\n    },\n    {\n      \"id\": 752501,\n      \"name\": \"Taum Sauk Mountain\",\n      \"lat\": 37.5712766,\n      \"long\": -90.7291683,\n      \"elevation\": 1772,\n      \"state\": \"MO\"\n    },\n    {\n      \"id\": 692362,\n      \"name\": \"Woodall Mountain\",\n      \"lat\": 34.7876908,\n      \"long\": -88.2416081,\n      \"elevation\": 807,\n      \"state\": \"MS\"\n    },\n    {\n      \"id\": 784177,\n      \"name\": \"Granite Peak\",\n      \"lat\": 45.1634239,\n      \"long\": -109.807608,\n      \"elevation\": 12759,\n      \"state\": \"MT\"\n    },\n    {\n      \"id\": 1013745,\n      \"name\": \"Mt. Mitchell\",\n      \"lat\": 35.7647624,\n      \"long\": -82.2648609,\n      \"elevation\": 6663,\n      \"state\": \"NC\"\n    },\n    {\n      \"id\": 1035239,\n      \"name\": \"White Butte\",\n      \"lat\": 46.3869054,\n      \"long\": -103.3027053,\n      \"elevation\": 3504,\n      \"state\": \"ND\"\n    },\n    {\n      \"id\": 1851953,\n      \"name\": \"Panorama Point\",\n      \"lat\": 41.0077144,\n      \"long\": -104.0314615,\n      \"elevation\": 5430,\n      \"state\": \"NE\"\n    },\n    {\n      \"id\": 877098,\n      \"name\": \"High Point\",\n      \"lat\": 41.3208722,\n      \"long\": -74.6615393,\n      \"elevation\": 1798,\n      \"state\": \"NJ\"\n    },\n    {\n      \"id\": 928839,\n      \"name\": \"Wheeler Peak\",\n      \"lat\": 36.5569142,\n      \"long\": -105.416856,\n      \"elevation\": 13176,\n      \"state\": \"NM\"\n    },\n    {\n      \"id\": 857652,\n      \"name\": \"Boundary Peak\",\n      \"lat\": 37.846072,\n      \"long\": -118.3510759,\n      \"elevation\": 13123,\n      \"state\": \"NV\"\n    },\n    {\n      \"id\": 973357,\n      \"name\": \"Mt. Marcy\",\n      \"lat\": 44.112733,\n      \"long\": -73.9237833,\n      \"elevation\": 5344,\n      \"state\": \"NY\"\n    },\n    {\n      \"id\": 1079572,\n      \"name\": \"Campbell Hill\",\n      \"lat\": 40.3702615,\n      \"long\": -83.720086,\n      \"elevation\": 1545,\n      \"state\": \"OH\"\n    },\n    {\n      \"id\": 1090209,\n      \"name\": \"Black Mesa\",\n      \"lat\": 36.845855,\n      \"long\": -102.8802025,\n      \"elevation\": 4975,\n      \"state\": \"OK\"\n    },\n    {\n      \"id\": 1143711,\n      \"name\": \"Mt. Hood\",\n      \"lat\": 45.3733674,\n      \"long\": -121.6957784,\n      \"elevation\": 11230,\n      \"state\": \"OR\"\n    },\n    {\n      \"id\": 1209050,\n      \"name\": \"Mt. Davis\",\n      \"lat\": 39.7858675,\n      \"long\": -79.1766429,\n      \"elevation\": 3209,\n      \"state\": \"PA\"\n    },\n    {\n      \"id\": 1015279,\n      \"name\": \"Sassafras Mountain\",\n      \"lat\": 35.065108,\n      \"long\": -82.7776292,\n      \"elevation\": 3537,\n      \"state\": \"SC\"\n    },\n    {\n      \"id\": 1261770,\n      \"name\": \"Black Elk Peak\",\n      \"lat\": 43.865991,\n      \"long\": -103.5312013,\n      \"elevation\": 7247,\n      \"state\": \"SD\"\n    },\n    {\n      \"id\": 1358489,\n      \"name\": \"Guadalupe Peak\",\n      \"lat\": 31.8914269,\n      \"long\": -104.8606624,\n      \"elevation\": 8753,\n      \"state\": \"TX\"\n    },\n    {\n      \"id\": 1442332,\n      \"name\": \"Kings Peak\",\n      \"lat\": 40.7763756,\n      \"long\": -110.3728037,\n      \"elevation\": 13520,\n      \"state\": \"UT\"\n    },\n    {\n      \"id\": 1485637,\n      \"name\": \"Mt. Rogers\",\n      \"lat\": 36.6599777,\n      \"long\": -81.544987,\n      \"elevation\": 5728,\n      \"state\": \"VA\"\n    },\n    {\n      \"id\": 1326387,\n      \"name\": \"Clingmans Dome\",\n      \"lat\": 35.562778,\n      \"long\": -83.498535,\n      \"elevation\": 6644,\n      \"state\": \"TN\"\n    },\n    {\n      \"id\": 1533614,\n      \"name\": \"Mt. Rainier\",\n      \"lat\": 46.8528267,\n      \"long\": -121.7604408,\n      \"elevation\": 14406,\n      \"state\": \"WA\"\n    },\n    {\n      \"id\": 1575464,\n      \"name\": \"Timms Hill\",\n      \"lat\": 45.4507963,\n      \"long\": -90.1953351,\n      \"elevation\": 1949,\n      \"state\": \"WI\"\n    },\n    {\n      \"id\": 1553014,\n      \"name\": \"Spruce Knob\",\n      \"lat\": 38.6998284,\n      \"long\": -79.5328253,\n      \"elevation\": 4862,\n      \"state\": \"WV\"\n    },\n    {\n      \"id\": 1599903,\n      \"name\": \"Gannett Peak\",\n      \"lat\": 43.1843012,\n      \"long\": -109.6541217,\n      \"elevation\": 13815,\n      \"state\": \"WY\"\n    },\n    {\n      \"id\": 871352,\n      \"name\": \"Mt. Washington\",\n      \"lat\": 44.2705781,\n      \"long\": -71.3033287,\n      \"elevation\": 6273,\n      \"state\": \"NH\"\n    },\n    {\n      \"id\": 561737,\n      \"name\": \"Mt. Katahdin (Baxter Peak)\",\n      \"lat\": 45.9042845,\n      \"long\": -68.9213562,\n      \"elevation\": 5259,\n      \"state\": \"ME\"\n    },\n    {\n      \"id\": 1461774,\n      \"name\": \"Mt. Mansfield\",\n      \"lat\": 44.5436627,\n      \"long\": -72.8142903,\n      \"elevation\": 4383,\n      \"state\": \"VT\"\n    },\n    {\n      \"id\": 1219566,\n      \"name\": \"Jerimoth Hill\",\n      \"lat\": 41.8494158,\n      \"long\": -71.7788736,\n      \"elevation\": 810,\n      \"state\": \"RI\"\n    },\n    {\n      \"id\": 607448,\n      \"name\": \"Mt. Greylock\",\n      \"lat\": 42.6371703,\n      \"long\": -73.1659399,\n      \"elevation\": 3491,\n      \"state\": \"MA\"\n    },\n    {\n      \"id\": 20,\n      \"name\": \"Ebright Azimuth\",\n      \"lat\": 39.835955,\n      \"long\": -75.522182,\n      \"elevation\": 448,\n      \"state\": \"DE\"\n    }\n  ],\n  \"description\": \"The USA State Highpoints are a collection of the highest points in each of the 50 United States plus the District of Columbia. Those actively attempting to complete this list are known as “highpointers”. Eight of the state highpoints are found in National Parks\"\n}\n","import adk46JSON from \"../json/adk46.json\";\nimport ca14JSON from \"../json/ca14.json\";\nimport cat35JSON from \"../json/cat35.json\";\nimport co14JSON from \"../json/co14.json\";\nimport me4kJSON from \"../json/me4k.json\";\nimport ne100JSON from \"../json/ne100.json\";\nimport ne4kJSON from \"../json/ne4k.json\";\nimport neHighJSON from \"../json/neHigh.json\";\nimport nh4kJSON from \"../json/nh4k.json\";\nimport nh52JSON from \"../json/nh52.json\";\nimport south6JSON from \"../json/south6.json\";\nimport vt4kJSON from \"../json/vt4k.json\";\nimport usHighJSON from \"../json/usHigh.json\";\n\nclass PeakList {\n  constructor(data) {\n    this.title = data.title;\n    this.listID = data.listID;\n    this.peakCount = data.peakCount;\n    this.peaks = data.peaks;\n    this.description = data.description;\n  }\n}\n\nconst adk46 = new PeakList(adk46JSON);\nconst ca14 = new PeakList(ca14JSON);\nconst cat35 = new PeakList(cat35JSON);\nconst co14 = new PeakList(co14JSON);\nconst me4k = new PeakList(me4kJSON);\nconst ne100 = new PeakList(ne100JSON);\nconst ne4k = new PeakList(ne4kJSON);\nconst neHigh = new PeakList(neHighJSON);\nconst nh4k = new PeakList(nh4kJSON);\nconst nh52 = new PeakList(nh52JSON);\nconst south6 = new PeakList(south6JSON);\nconst vt4k = new PeakList(vt4kJSON);\nconst usHigh = new PeakList(usHighJSON);\n\nconst peakListsArr = [\n  adk46,\n  ca14,\n  cat35,\n  co14,\n  me4k,\n  ne100,\n  ne4k,\n  neHigh,\n  nh4k,\n  nh52,\n  south6,\n  vt4k,\n  usHigh,\n];\n\nconst uniquePeaks = [\n  ...new Map(\n    peakListsArr\n      .flatMap((peakList) => peakList.peaks)\n      .map((peak) => [peak.id, peak])\n  ).values(),\n];\n\npeakListsArr.sort((a, b) =>\n  a.title.toLowerCase().localeCompare(b.title.toLowerCase())\n);\n\nexport { peakListsArr, uniquePeaks };\n","import { uniquePeaks } from \"./createPeakLists.js\";\n\nexport class LogEntry {\n  constructor(formData, logID, lists) {\n    this.peaks = formData.peakIDs.map((peakID) =>\n      uniquePeaks.find((peak) => peak.id === peakID)\n    );\n    this.stats = {\n      elevation: +formData.elevation || null,\n      distance: +formData.distance || null,\n      minutes: +formData.minutes || null,\n      hours: +formData.hours || null,\n    };\n    this.notes = formData.notes || undefined;\n    this.rating = +formData.rating || undefined;\n    this.logID = logID;\n    this.lists = lists;\n    this.#setPeakString();\n    this.#setDate(formData.date);\n    this.#setStats();\n  }\n\n  #setPeakString() {\n    const peakNames = this.peaks.map((peak) => peak.name);\n    this.peakString =\n      peakNames.length > 1\n        ? peakNames.slice(0, -1).join(\", \") + \" and \" + peakNames.slice(-1)\n        : peakNames[0];\n  }\n\n  #setDate(date) {\n    const fullDate = new Date(`${date}T00:00:00`);\n    this.date = {\n      fullDate,\n      day: new Intl.DateTimeFormat(\"en-US\", { day: \"2-digit\" }).format(\n        fullDate\n      ),\n      month: {\n        numeric: new Intl.DateTimeFormat(\"en-US\", { month: \"2-digit\" }).format(\n          fullDate\n        ),\n        alpha: new Intl.DateTimeFormat(\"en-US\", { month: \"long\" }).format(\n          fullDate\n        ),\n      },\n      year: new Intl.DateTimeFormat(\"en-US\", { year: \"numeric\" }).format(\n        fullDate\n      ),\n    };\n  }\n\n  #setStats() {\n    this.stats.time =\n      this.stats.hours || this.stats.minutes\n        ? Math.round((this.stats.hours + this.stats.minutes / 60) * 10) / 10\n        : null;\n    this.stats.avgSpeed =\n      this.stats.distance && this.stats.time\n        ? Math.round((this.stats.distance / this.stats.time) * 10) / 10\n        : null;\n    this.stats.avgElevation =\n      this.stats.elevation && this.stats.distance\n        ? Math.round(this.stats.elevation / this.stats.distance)\n        : null;\n  }\n}\n","{\n  \"listCounts\": {\n    \"adk46\": 3,\n    \"ca14\": 0,\n    \"cat35\": 0,\n    \"co14\": 7,\n    \"me4k\": 0,\n    \"ne100\": 17,\n    \"ne4k\": 17,\n    \"neHigh\": 2,\n    \"nh4k\": 17,\n    \"nh52\": 2,\n    \"south6\": 0,\n    \"usHigh\": 3,\n    \"vt4k\": 0\n  },\n  \"allLogEntries\": [\n    {\n      \"peaks\": [\n        {\n          \"id\": 871851,\n          \"name\": \"Mt. Eisenhower\",\n          \"lat\": 44.2407341,\n          \"long\": -71.3501812,\n          \"elevation\": 4757,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872093,\n          \"name\": \"Mt. Jackson\",\n          \"lat\": 44.2032358,\n          \"long\": -71.3754007,\n          \"elevation\": 4042,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872313,\n          \"name\": \"Mt. Monroe\",\n          \"lat\": 44.2552125,\n          \"long\": -71.3214183,\n          \"elevation\": 5351,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872495,\n          \"name\": \"Mt. Pierce\",\n          \"lat\": 44.2265226,\n          \"long\": -71.3659732,\n          \"elevation\": 4304,\n          \"state\": \"NH\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 2000,\n        \"distance\": 9,\n        \"minutes\": 20,\n        \"hours\": 7,\n        \"time\": 7.3,\n        \"avgSpeed\": 1.2,\n        \"avgElevation\": 222\n      },\n      \"notes\": \"Second day of the presidential traverse. Day started off cloudy but cleared up about half way through.\",\n      \"rating\": 4,\n      \"logID\": 6,\n      \"lists\": [\n        { \"listID\": \"ne100\", \"title\": \"New England 100 Highest\" },\n        { \"listID\": \"ne4k\", \"title\": \"New England 4,000 Footers\" },\n        { \"listID\": \"nh4k\", \"title\": \"New Hampshire 4,000 Footers\" }\n      ],\n      \"peakString\": \"Mt. Eisenhower, Mt. Jackson, Mt. Monroe and Mt. Pierce\",\n      \"date\": {\n        \"fullDate\": \"2022-08-29T04:00:00.000Z\",\n        \"day\": \"29\",\n        \"month\": { \"numeric\": \"08\", \"alpha\": \"August\" },\n        \"year\": \"2022\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 871380,\n          \"name\": \"Mt. Adams\",\n          \"lat\": 44.3206546,\n          \"long\": -71.2915306,\n          \"elevation\": 5791,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872101,\n          \"name\": \"Mt. Jefferson\",\n          \"lat\": 44.304315,\n          \"long\": -71.3166955,\n          \"elevation\": 5699,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872247,\n          \"name\": \"Mt. Madison\",\n          \"lat\": 44.3288173,\n          \"long\": -71.2767796,\n          \"elevation\": 5351,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 871352,\n          \"name\": \"Mt. Washington\",\n          \"lat\": 44.2705781,\n          \"long\": -71.3033287,\n          \"elevation\": 6273,\n          \"state\": \"NH\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 5000,\n        \"distance\": 12,\n        \"minutes\": null,\n        \"hours\": 8,\n        \"time\": 8,\n        \"avgSpeed\": 1.5,\n        \"avgElevation\": 417\n      },\n      \"notes\": \"First day of the presidential traverse, stayed the night at Lake of the Clouds Hut. Incredible views!\",\n      \"rating\": 5,\n      \"logID\": 5,\n      \"lists\": [\n        { \"listID\": \"ne100\", \"title\": \"New England 100 Highest\" },\n        { \"listID\": \"ne4k\", \"title\": \"New England 4,000 Footers\" },\n        { \"listID\": \"neHigh\", \"title\": \"New England State Highpoints\" },\n        { \"listID\": \"nh4k\", \"title\": \"New Hampshire 4,000 Footers\" },\n        { \"listID\": \"usHigh\", \"title\": \"USA State Highpoints\" }\n      ],\n      \"peakString\": \"Mt. Adams, Mt. Jefferson, Mt. Madison and Mt. Washington\",\n      \"date\": {\n        \"fullDate\": \"2022-08-28T04:00:00.000Z\",\n        \"day\": \"28\",\n        \"month\": { \"numeric\": \"08\", \"alpha\": \"August\" },\n        \"year\": \"2022\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 973340,\n          \"name\": \"Algonquin Peak\",\n          \"lat\": 44.1436636,\n          \"long\": -73.9865357,\n          \"elevation\": 5105,\n          \"state\": \"NY\"\n        },\n        {\n          \"id\": 973355,\n          \"name\": \"Iroquois Peak\",\n          \"lat\": 44.1369973,\n          \"long\": -73.9982027,\n          \"elevation\": 4829,\n          \"state\": \"NY\"\n        },\n        {\n          \"id\": 971754,\n          \"name\": \"Wright Peak\",\n          \"lat\": 44.1517187,\n          \"long\": -73.9801468,\n          \"elevation\": 4564,\n          \"state\": \"NY\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 4400,\n        \"distance\": 10.8,\n        \"minutes\": 30,\n        \"hours\": 8,\n        \"time\": 8.5,\n        \"avgSpeed\": 1.3,\n        \"avgElevation\": 407\n      },\n      \"notes\": \"Awesome first trip to the Adirondacks!\",\n      \"rating\": 5,\n      \"logID\": 3,\n      \"lists\": [{ \"listID\": \"adk46\", \"title\": \"Adirondack High Peaks\" }],\n      \"peakString\": \"Algonquin Peak, Iroquois Peak and Wright Peak\",\n      \"date\": {\n        \"fullDate\": \"2021-08-15T04:00:00.000Z\",\n        \"day\": \"15\",\n        \"month\": { \"numeric\": \"08\", \"alpha\": \"August\" },\n        \"year\": \"2021\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 872460,\n          \"name\": \"Mt. Passaconaway\",\n          \"lat\": 43.9547374,\n          \"long\": -71.3808824,\n          \"elevation\": 4045,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872833,\n          \"name\": \"Mt. Tripyramid\",\n          \"lat\": 43.9731659,\n          \"long\": -71.4427801,\n          \"elevation\": 4163,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872294,\n          \"name\": \"Mt. Tripyramid (Middle Peak)\",\n          \"lat\": 43.9646744,\n          \"long\": -71.4400968,\n          \"elevation\": 4114,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872920,\n          \"name\": \"Mt. Whiteface\",\n          \"lat\": 43.9339506,\n          \"long\": -71.4059066,\n          \"elevation\": 4019,\n          \"state\": \"NH\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 4600,\n        \"distance\": 18,\n        \"minutes\": 30,\n        \"hours\": 12,\n        \"time\": 12.5,\n        \"avgSpeed\": 1.4,\n        \"avgElevation\": 256\n      },\n      \"notes\": \"Completed the Kate Sleeper loop, stayed overnight at Camp Rich off the summit of Mt. Passaconaway.\",\n      \"rating\": 4,\n      \"logID\": 4,\n      \"lists\": [\n        { \"listID\": \"ne100\", \"title\": \"New England 100 Highest\" },\n        { \"listID\": \"ne4k\", \"title\": \"New England 4,000 Footers\" },\n        { \"listID\": \"nh4k\", \"title\": \"New Hampshire 4,000 Footers\" }\n      ],\n      \"peakString\": \"Mt. Passaconaway, Mt. Tripyramid, Mt. Tripyramid (Middle Peak) and Mt. Whiteface\",\n      \"date\": {\n        \"fullDate\": \"2021-06-25T04:00:00.000Z\",\n        \"day\": \"25\",\n        \"month\": { \"numeric\": \"06\", \"alpha\": \"June\" },\n        \"year\": \"2021\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 871418,\n          \"name\": \"Mt. Avalon\",\n          \"lat\": 44.2064609,\n          \"long\": -71.4283253,\n          \"elevation\": 3412,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872947,\n          \"name\": \"Mt. Willard\",\n          \"lat\": 44.2042235,\n          \"long\": -71.412854,\n          \"elevation\": 2848,\n          \"state\": \"NH\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 1800,\n        \"distance\": 5.5,\n        \"minutes\": 10,\n        \"hours\": 4,\n        \"time\": 4.2,\n        \"avgSpeed\": 1.3,\n        \"avgElevation\": 327\n      },\n      \"notes\": \"Great views of the fall foliage from both summits. Got some great photos of Crawford Notch from Mt. Willard and of the southern Presidential Range from Mt. Avalon!\",\n      \"rating\": 5,\n      \"logID\": 8,\n      \"lists\": [{ \"listID\": \"nh52\", \"title\": \"New Hampshire 52 With a View\" }],\n      \"peakString\": \"Mt. Avalon and Mt. Willard\",\n      \"date\": {\n        \"fullDate\": \"2020-10-11T04:00:00.000Z\",\n        \"day\": \"11\",\n        \"month\": { \"numeric\": \"10\", \"alpha\": \"October\" },\n        \"year\": \"2020\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 607428,\n          \"name\": \"Mt. Frissell (South Slope)\",\n          \"lat\": 42.049633,\n          \"long\": -73.483042,\n          \"elevation\": 2451,\n          \"state\": \"CT\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 1100,\n        \"distance\": 5,\n        \"minutes\": 30,\n        \"hours\": 4,\n        \"time\": 4.5,\n        \"avgSpeed\": 1.1,\n        \"avgElevation\": 220\n      },\n      \"notes\": \"Finally made it to the Connecticut state high point. Hit Brace Mountain and Round Mountain on the loop as well!\",\n      \"rating\": 4,\n      \"logID\": 9,\n      \"lists\": [\n        { \"listID\": \"neHigh\", \"title\": \"New England State Highpoints\" },\n        { \"listID\": \"usHigh\", \"title\": \"USA State Highpoints\" }\n      ],\n      \"peakString\": \"Mt. Frissell (South Slope)\",\n      \"date\": {\n        \"fullDate\": \"2020-08-10T04:00:00.000Z\",\n        \"day\": \"10\",\n        \"month\": { \"numeric\": \"08\", \"alpha\": \"August\" },\n        \"year\": \"2020\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 7,\n          \"name\": \"Bondcliff\",\n          \"lat\": 44.1405773,\n          \"long\": -71.5409195,\n          \"elevation\": 4265,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 871556,\n          \"name\": \"Mt. Bond\",\n          \"lat\": 44.1528345,\n          \"long\": -71.5311895,\n          \"elevation\": 4685,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 1,\n          \"name\": \"West Bond Mountain\",\n          \"lat\": 44.1547633,\n          \"long\": -71.5436295,\n          \"elevation\": 4540,\n          \"state\": \"NH\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 3800,\n        \"distance\": 18,\n        \"minutes\": 15,\n        \"hours\": 13,\n        \"time\": 13.3,\n        \"avgSpeed\": 1.4,\n        \"avgElevation\": 211\n      },\n      \"notes\": \"First backpacking trip in the White Mountains, saw an incredible sunset from West Bond!\",\n      \"rating\": 5,\n      \"logID\": 12,\n      \"lists\": [\n        { \"listID\": \"ne100\", \"title\": \"New England 100 Highest\" },\n        { \"listID\": \"ne4k\", \"title\": \"New England 4,000 Footers\" },\n        { \"listID\": \"nh4k\", \"title\": \"New Hampshire 4,000 Footers\" }\n      ],\n      \"peakString\": \"Bondcliff, Mt. Bond and West Bond Mountain\",\n      \"date\": {\n        \"fullDate\": \"2020-07-16T04:00:00.000Z\",\n        \"day\": \"16\",\n        \"month\": { \"numeric\": \"07\", \"alpha\": \"July\" },\n        \"year\": \"2020\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 872150,\n          \"name\": \"Mt. Lafayette\",\n          \"lat\": 44.1608182,\n          \"long\": -71.6444575,\n          \"elevation\": 5236,\n          \"state\": \"NH\"\n        },\n        {\n          \"id\": 872176,\n          \"name\": \"Mt. Lincoln\",\n          \"lat\": 44.1489451,\n          \"long\": -71.6445258,\n          \"elevation\": 5085,\n          \"state\": \"NH\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 3800,\n        \"distance\": 8.1,\n        \"minutes\": 15,\n        \"hours\": 6,\n        \"time\": 6.3,\n        \"avgSpeed\": 1.3,\n        \"avgElevation\": 469\n      },\n      \"notes\": \"Hiked the Franconia Ridge Loop up Falling Waters Trail and down the Old Bridle Path. Chilly on the summits, saw a black bear on the way up!\",\n      \"rating\": 5,\n      \"logID\": 7,\n      \"lists\": [\n        { \"listID\": \"ne100\", \"title\": \"New England 100 Highest\" },\n        { \"listID\": \"ne4k\", \"title\": \"New England 4,000 Footers\" },\n        { \"listID\": \"nh4k\", \"title\": \"New Hampshire 4,000 Footers\" }\n      ],\n      \"peakString\": \"Mt. Lafayette and Mt. Lincoln\",\n      \"date\": {\n        \"fullDate\": \"2019-05-12T04:00:00.000Z\",\n        \"day\": \"12\",\n        \"month\": { \"numeric\": \"05\", \"alpha\": \"May\" },\n        \"year\": \"2019\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 180381,\n          \"name\": \"Mt. Elbert\",\n          \"lat\": 39.1178687,\n          \"long\": -106.4452569,\n          \"elevation\": 14426,\n          \"state\": \"CO\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 4500,\n        \"distance\": 9.5,\n        \"minutes\": 20,\n        \"hours\": 7,\n        \"time\": 7.3,\n        \"avgSpeed\": 1.3,\n        \"avgElevation\": 474\n      },\n      \"notes\": \"Difficult hike but well worth it. Cold at the top but 360 degree views from the summit!\",\n      \"rating\": 5,\n      \"logID\": 10,\n      \"lists\": [\n        { \"listID\": \"co14\", \"title\": \"Colorado Fourteeners\" },\n        { \"listID\": \"usHigh\", \"title\": \"USA State Highpoints\" }\n      ],\n      \"peakString\": \"Mt. Elbert\",\n      \"date\": {\n        \"fullDate\": \"2018-09-04T04:00:00.000Z\",\n        \"day\": \"04\",\n        \"month\": { \"numeric\": \"09\", \"alpha\": \"September\" },\n        \"year\": \"2018\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 181827,\n          \"name\": \"Grays Peak\",\n          \"lat\": 39.6337372,\n          \"long\": -105.8173702,\n          \"elevation\": 14275,\n          \"state\": \"CO\"\n        },\n        {\n          \"id\": 181829,\n          \"name\": \"Torreys Peak\",\n          \"lat\": 39.6426923,\n          \"long\": -105.8211948,\n          \"elevation\": 14265,\n          \"state\": \"CO\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 3600,\n        \"distance\": 8.1,\n        \"minutes\": null,\n        \"hours\": 14,\n        \"time\": 14,\n        \"avgSpeed\": 0.6,\n        \"avgElevation\": 444\n      },\n      \"notes\": \"First winter 14er trip!\",\n      \"rating\": 5,\n      \"logID\": 11,\n      \"lists\": [{ \"listID\": \"co14\", \"title\": \"Colorado Fourteeners\" }],\n      \"peakString\": \"Grays Peak and Torreys Peak\",\n      \"date\": {\n        \"fullDate\": \"2018-01-06T05:00:00.000Z\",\n        \"day\": \"06\",\n        \"month\": { \"numeric\": \"01\", \"alpha\": \"January\" },\n        \"year\": \"2018\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 204979,\n          \"name\": \"Longs Peak\",\n          \"lat\": 40.2548614,\n          \"long\": -105.6162397,\n          \"elevation\": 14262,\n          \"state\": \"CO\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 5000,\n        \"distance\": 15,\n        \"minutes\": null,\n        \"hours\": 12,\n        \"time\": 12,\n        \"avgSpeed\": 1.3,\n        \"avgElevation\": 333\n      },\n      \"notes\": \"Epic day, the keyhole route was intense!\",\n      \"rating\": 5,\n      \"logID\": 1,\n      \"lists\": [{ \"listID\": \"co14\", \"title\": \"Colorado Fourteeners\" }],\n      \"peakString\": \"Longs Peak\",\n      \"date\": {\n        \"fullDate\": \"2017-07-24T04:00:00.000Z\",\n        \"day\": \"24\",\n        \"month\": { \"numeric\": \"07\", \"alpha\": \"July\" },\n        \"year\": \"2017\"\n      }\n    },\n    {\n      \"peaks\": [\n        {\n          \"id\": 179961,\n          \"name\": \"Mt. Bross\",\n          \"lat\": 39.3349948,\n          \"long\": -106.1071665,\n          \"elevation\": 14176,\n          \"state\": \"CO\"\n        },\n        {\n          \"id\": 204685,\n          \"name\": \"Mt. Democrat\",\n          \"lat\": 39.3394723,\n          \"long\": -106.1398604,\n          \"elevation\": 14144,\n          \"state\": \"CO\"\n        },\n        {\n          \"id\": 179956,\n          \"name\": \"Mt. Lincoln\",\n          \"lat\": 39.351504,\n          \"long\": -106.1113773,\n          \"elevation\": 14285,\n          \"state\": \"CO\"\n        }\n      ],\n      \"stats\": {\n        \"elevation\": 3100,\n        \"distance\": 7,\n        \"minutes\": 45,\n        \"hours\": 5,\n        \"time\": 5.8,\n        \"avgSpeed\": 1.2,\n        \"avgElevation\": 443\n      },\n      \"notes\": \"Had a great day, warm weather and saw lots of mountain goats!\",\n      \"rating\": 4,\n      \"logID\": 2,\n      \"lists\": [{ \"listID\": \"co14\", \"title\": \"Colorado Fourteeners\" }],\n      \"peakString\": \"Mt. Bross, Mt. Democrat and Mt. Lincoln\",\n      \"date\": {\n        \"fullDate\": \"2016-06-25T04:00:00.000Z\",\n        \"day\": \"25\",\n        \"month\": { \"numeric\": \"06\", \"alpha\": \"June\" },\n        \"year\": \"2016\"\n      }\n    }\n  ],\n  \"noEntries\": false,\n  \"completedPeaks\": [\n    204979, 179961, 204685, 179956, 973340, 973355, 971754, 872460, 872833,\n    872294, 872920, 871380, 872101, 872247, 871352, 871851, 872093, 872313,\n    872495, 872150, 872176, 871418, 872947, 607428, 180381, 181827, 181829, 7,\n    871556, 1\n  ],\n  \"savedLists\": [\"adk46\", \"co14\", \"nh52\", \"nh4k\", \"neHigh\"],\n  \"sidebarHidden\": false,\n  \"allSelectValues\": {\n    \"lists\": [\n      { \"listID\": \"adk46\", \"title\": \"Adirondack High Peaks\" },\n      { \"listID\": \"co14\", \"title\": \"Colorado Fourteeners\" },\n      { \"listID\": \"ne100\", \"title\": \"New England 100 Highest\" },\n      { \"listID\": \"ne4k\", \"title\": \"New England 4,000 Footers\" },\n      { \"listID\": \"neHigh\", \"title\": \"New England State Highpoints\" },\n      { \"listID\": \"nh4k\", \"title\": \"New Hampshire 4,000 Footers\" },\n      { \"listID\": \"nh52\", \"title\": \"New Hampshire 52 With a View\" },\n      { \"listID\": \"usHigh\", \"title\": \"USA State Highpoints\" }\n    ],\n    \"months\": [\n      { \"numeric\": \"01\", \"alpha\": \"January\" },\n      { \"numeric\": \"05\", \"alpha\": \"May\" },\n      { \"numeric\": \"06\", \"alpha\": \"June\" },\n      { \"numeric\": \"07\", \"alpha\": \"July\" },\n      { \"numeric\": \"08\", \"alpha\": \"August\" },\n      { \"numeric\": \"09\", \"alpha\": \"September\" },\n      { \"numeric\": \"10\", \"alpha\": \"October\" }\n    ],\n    \"years\": [\"2022\", \"2021\", \"2020\", \"2019\", \"2018\", \"2017\", \"2016\"]\n  },\n  \"peakPreview\": {\n    \"previewType\": \"all\",\n    \"data\": [],\n    \"page\": 1,\n    \"resPerPage\": 6\n  },\n  \"peakTable\": {\n    \"sortType\": \"elevation\",\n    \"data\": {}\n  },\n  \"logPreview\": {\n    \"curSelectValues\": { \"listID\": \"all\", \"month\": \"all\", \"year\": \"all\" },\n    \"entries\": [],\n    \"page\": 1,\n    \"resPerPage\": 6\n  },\n  \"curLogEntry\": {},\n  \"stats\": {\n    \"curSelectValues\": { \"listID\": \"all\", \"month\": \"all\", \"year\": \"all\" },\n    \"data\": {}\n  },\n  \"map\": { \"data\": {} }\n}\n","import { peakListsArr } from \"./createPeakLists.js\";\nimport { LogEntry } from \"./logEntry.js\";\nimport testData from \"../json/testData.json\";\n\n// STATE\n\nexport let state = {\n  listCounts: {},\n  allLogEntries: [],\n  noEntries: true,\n  completedPeaks: [],\n  savedLists: [],\n  sidebarHidden: false,\n  allSelectValues: { lists: \"\", months: \"\", years: \"\" },\n  peakPreview: {\n    previewType: \"all\",\n    data: [],\n    page: 1,\n    resPerPage: 6,\n  },\n  peakTable: {\n    sortType: \"elevation\",\n    data: {},\n  },\n  logPreview: {\n    curSelectValues: { listID: \"all\", month: \"all\", year: \"all\" },\n    entries: [],\n    page: 1,\n    resPerPage: 6,\n  },\n  curLogEntry: {},\n  stats: {\n    curSelectValues: { listID: \"all\", month: \"all\", year: \"all\" },\n    data: {},\n  },\n  map: {\n    data: {},\n  },\n};\n\nexport let firstVisit = true;\n\n// STORAGE\n\nconst setLocalStorage = function () {\n  localStorage.setItem(\"state\", JSON.stringify(state));\n};\n\nconst getLocalStorage = function () {\n  if (localStorage.state) state = JSON.parse(localStorage.getItem(\"state\"));\n};\n\nconst getSessionStorage = function () {\n  if (sessionStorage.firstVisit) {\n    firstVisit = JSON.parse(sessionStorage.getItem(\"firstVisit\"));\n  }\n};\n\nexport const setSessionStorage = function () {\n  sessionStorage.setItem(\"firstVisit\", false);\n};\n\n// MAP\n\nexport const getCoords = async function () {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n};\n\nexport const getAddress = async function (lat, lon) {\n  const response = await fetch(\n    `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lon}&format=json`\n  );\n  if (!response.ok)\n    throw new Error(\n      `Could not get address...response status code from Nominatim: ${response.status}`\n    );\n  const data = await response.json();\n  return data;\n};\n\nexport const loadTestData = function () {\n  const message =\n    \"Loading test data will overwrite all manual changes. Continue?\";\n  if (!state.noEntries && !confirm(message)) return false;\n  state = testData;\n  setLocalStorage();\n  return true;\n};\n\nexport const clearAllData = function () {\n  if (confirm(\"This action will delete all log entries. Continue?\")) {\n    localStorage.clear();\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const loadMapData = function (type, id) {\n  let peaks, listID;\n  if (type === \"list\") {\n    listID = id;\n    peaks = sortPeakList(id).peaks;\n  }\n  if (type === \"log\") {\n    peaks = getLogEntry(id).peaks;\n  }\n  const data = {\n    peaks: peaks.map((peak) => {\n      let logMatch;\n      if (state.allLogEntries.length) {\n        logMatch = state.allLogEntries.find((entry) =>\n          entry.peaks.some((peakObj) => peakObj.id === peak.id)\n        );\n      }\n      return {\n        ...peak,\n        completed: state.completedPeaks.includes(peak.id) ? true : false,\n        completedDate: logMatch\n          ? `${logMatch.date.month.numeric}/${logMatch.date.day}/${logMatch.date.year}`\n          : false,\n      };\n    }),\n    type,\n    id,\n  };\n  state.map.data = data;\n  setLocalStorage();\n  // return data;\n};\n\n// SIDEBAR\n\nexport const updateSidebarState = function () {\n  state.sidebarHidden = state.sidebarHidden ? false : true;\n  setLocalStorage();\n};\n\n// PEAK LIST PREVIEW\n\nexport const addSavedList = function (listID) {\n  state.savedLists.push(listID);\n  setLocalStorage();\n};\n\nexport const removeSavedList = function (listID) {\n  state.savedLists.splice(state.savedLists.indexOf(listID), 1);\n  setLocalStorage();\n};\n\nexport const loadPeakListPreviewData = function () {\n  const data = peakListsArr.map((list) => {\n    return {\n      listID: list.listID,\n      title: list.title,\n      saved: state.savedLists.includes(list.listID) ? true : false,\n      numCompleted: state.listCounts[list.listID],\n      peakCount: list.peakCount,\n    };\n  });\n  state.peakPreview.data = data;\n  setLocalStorage();\n};\n\nexport const getListPreviewPage = function (previewType, page) {\n  state.peakPreview.page = page || state.peakPreview.page;\n  state.peakPreview.previewType = previewType || state.peakPreview.previewType;\n  const start = (state.peakPreview.page - 1) * state.peakPreview.resPerPage;\n  const end = state.peakPreview.page * state.peakPreview.resPerPage;\n  let allData;\n  if (state.peakPreview.previewType === \"all\") allData = state.peakPreview.data;\n  if (state.peakPreview.previewType === \"saved\")\n    allData = state.peakPreview.data.filter((list) =>\n      state.savedLists.includes(list.listID)\n    );\n  setLocalStorage();\n  return {\n    data: allData.slice(start, end),\n    previewType: state.peakPreview.previewType,\n    page: state.peakPreview.page,\n    numPages: Math.ceil(allData.length / state.peakPreview.resPerPage) || 1,\n  };\n};\n\n// PEAK LIST TABLE\n\nconst sortPeakList = function (listID, sortType = \"elevation\") {\n  const peakList = { ...peakListsArr.find((list) => list.listID === listID) };\n  if (sortType === \"elevation\") {\n    peakList.peaks.sort((a, b) => b.elevation - a.elevation);\n  }\n  if (sortType === \"alphabetical\") {\n    peakList.peaks.sort((a, b) =>\n      a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n    );\n  }\n  if (sortType === \"state\") {\n    peakList.peaks.sort((a, b) =>\n      a.state.toLowerCase().localeCompare(b.state.toLowerCase())\n    );\n  }\n  return peakList;\n};\n\nexport const loadTableData = function (listID, sortType) {\n  state.peakTable.sortType = sortType || state.peakTable.sortType;\n  const list = sortPeakList(listID, state.peakTable.sortType);\n  const data = {\n    listID: list.listID,\n    title: list.title,\n    description: list.description,\n    numCompleted: state.listCounts[listID],\n    saved: state.savedLists.includes(list.listID) ? true : false,\n    peakCount: list.peakCount,\n    peaks: list.peaks.map((peak, i) => {\n      let logMatch;\n      if (state.allLogEntries.length) {\n        logMatch = state.allLogEntries.find((entry) =>\n          entry.peaks.some((peakObj) => peakObj.id === peak.id)\n        );\n      }\n      return {\n        id: peak.id,\n        num: i + 1,\n        name: peak.name,\n        elevation: peak.elevation,\n        state: peak.state,\n        completed: logMatch ? true : false,\n        completedDate: logMatch\n          ? `${logMatch.date.month.numeric}/${logMatch.date.day}/${logMatch.date.year}`\n          : false,\n      };\n    }),\n    sortType: state.peakTable.sortType,\n  };\n  state.peakTable.data = data;\n  setLocalStorage();\n};\n\n// LOG PREVIEW\n\nconst sortLogEntries = function () {\n  state.allLogEntries.sort(\n    (a, b) => new Date(b.date.fullDate) - new Date(a.date.fullDate)\n  );\n};\n\nconst filterLogEntries = function (listID, month, year) {\n  let entries =\n    listID === \"all\"\n      ? state.allLogEntries\n      : state.allLogEntries.filter((entry) =>\n          entry.lists.some((list) => list.listID === listID)\n        );\n  entries =\n    month === \"all\"\n      ? entries\n      : entries.filter((entry) => entry.date.month.numeric === month);\n  entries =\n    year === \"all\"\n      ? entries\n      : entries.filter((entry) => entry.date.year === year);\n  return entries;\n};\n\nexport const removeLogEntry = function (logID) {\n  const remove = getLogEntry(logID);\n  state.allLogEntries.splice(state.allLogEntries.indexOf(remove), 1);\n  remove.peaks.forEach((peak) => {\n    decreaseListCounts(peak.id);\n  });\n  if (state.allLogEntries.length === 0) state.noEntries = true;\n  setLocalStorage();\n};\n\nexport const getLogPreviewPage = function (curSelectValues, page = 1) {\n  state.logPreview.page = page || state.logPreview.page;\n  state.logPreview.curSelectValues =\n    curSelectValues || state.logPreview.curSelectValues;\n  const { listID, month, year } = state.logPreview.curSelectValues;\n  const start = (state.logPreview.page - 1) * state.logPreview.resPerPage;\n  const end = state.logPreview.page * state.logPreview.resPerPage;\n  state.logPreview.entries = filterLogEntries(listID, month, year);\n  return {\n    noEntries: state.noEntries,\n    entries: state.logPreview.entries.slice(start, end),\n    page: state.logPreview.page,\n    numPages:\n      Math.ceil(\n        state.logPreview.entries.length / state.logPreview.resPerPage\n      ) || 1,\n    allSelectValues: state.allSelectValues,\n    curSelectValues: state.logPreview.curSelectValues,\n  };\n};\n\n// LOG ENTRY\n\nconst getLogEntry = function (logID) {\n  const entry = state.allLogEntries.find((entry) => entry.logID === logID);\n  return entry;\n};\n\nexport const loadLogEntry = function (logID) {\n  const entry = getLogEntry(logID);\n  state.curLogEntry = entry;\n  setLocalStorage();\n};\n\n// STATS\n\nexport const getStatsData = function (curSelectValues) {\n  state.stats.curSelectValues = curSelectValues || state.stats.curSelectValues;\n  const { listID, month, year } = state.stats.curSelectValues;\n  const entries = filterLogEntries(listID, month, year);\n  const data = {\n    numberEntries: entries.length,\n    numberPeaks: [\n      ...new Set(\n        entries.flatMap((entry) => entry.peaks.map((peak) => peak.id))\n      ),\n    ].length,\n    totalDistance:\n      Math.round(\n        entries\n          .map((entry) => entry.stats.distance)\n          .reduce((acc, cur) => acc + cur, 0) * 10\n      ) / 10,\n    totalElevation: Math.round(\n      entries\n        .map((entry) => entry.stats.elevation)\n        .reduce((acc, cur) => acc + cur, 0)\n    ),\n    totalTime:\n      Math.round(\n        entries\n          .map((entry) => entry.stats.time)\n          .reduce((acc, cur) => acc + cur, 0) * 10\n      ) / 10,\n  };\n  state.stats.data = data;\n  setLocalStorage();\n  return {\n    data,\n    noEntries: state.noEntries,\n    allSelectValues: state.allSelectValues,\n    curSelectValues: state.stats.curSelectValues,\n  };\n};\n\n// NEW ENTRY\n\nconst getMatchingLists = function (peakID) {\n  // Used for setting log entry and list count data\n  const listMatches = [];\n  peakListsArr.forEach((peakList) => {\n    if (peakList.peaks.some((peak) => peak.id === peakID)) {\n      listMatches.push(peakList);\n    }\n  });\n  return listMatches;\n};\n\nconst setLogEntryID = function () {\n  const logID = state.allLogEntries.length\n    ? Math.max(...state.allLogEntries.map((entry) => entry.logID)) + 1\n    : 1;\n  return logID;\n};\n\nconst setLogEntryLists = function (peakIDs) {\n  let allLists = [];\n  peakIDs.forEach((peakID) => {\n    increaseListCounts(peakID);\n    const listMatches = getMatchingLists(peakID);\n    listMatches.forEach((list) => {\n      const listObj = {\n        listID: list.listID,\n        title: list.title,\n      };\n      if (!allLists.some((obj) => obj.listID === listObj.listID)) {\n        allLists.push(listObj);\n      }\n    });\n  });\n  allLists.sort((a, b) =>\n    a.title.toLowerCase().localeCompare(b.title.toLowerCase())\n  );\n  return allLists;\n};\n\nconst increaseListCounts = function (peakID) {\n  const listMatches = getMatchingLists(peakID);\n  if (!state.completedPeaks.includes(peakID)) {\n    state.completedPeaks.push(peakID);\n    listMatches.forEach((list) => {\n      state.listCounts[list.listID] += 1;\n    });\n  }\n};\n\nconst decreaseListCounts = function (peakID) {\n  if (\n    !state.allLogEntries\n      .flatMap((entry) => entry.peaks)\n      .some((peak) => peak.id === peakID)\n  ) {\n    state.completedPeaks.splice(state.completedPeaks.indexOf(peakID), 1);\n    peakListsArr\n      .filter((peaklistObj) =>\n        peaklistObj.peaks.some((peak) => peak.id === peakID)\n      )\n      .map((peakList) => peakList.listID)\n      .forEach((peakListID) => state.listCounts[peakListID]--);\n  }\n};\n\nexport const getDate = function (date) {\n  const options = {\n    day: \"numeric\",\n    month: \"numeric\",\n    year: \"numeric\",\n  };\n  const now = new Date();\n  if (date === \"today\")\n    return new Intl.DateTimeFormat(\"en-CA\", options).format(now);\n  if (date === \"yesterday\")\n    return new Intl.DateTimeFormat(\"en-CA\", options).format(\n      new Date(now.getTime() - 86400000)\n    );\n};\n\nexport const getCheckboxData = function (listID, checkedID) {\n  setLocalStorage();\n  return {\n    listID,\n    checkedID: +checkedID || false,\n    peaks: sortPeakList(listID, \"alphabetical\").peaks,\n  };\n};\n\nexport const addLogEntry = function (formData) {\n  if (!formData.date) {\n    alert(\"Please enter a complete date in the format MM-DD-YYY\");\n    return false;\n  }\n  if (\n    +formData.date.slice(0, 4) < 1900 ||\n    new Date(formData.date).getTime() > new Date().getTime()\n  ) {\n    alert(`Please enter a date between 01-01-1900 and today`);\n    return false;\n  }\n  if (!formData.peakIDs) {\n    alert(\"Please choose at least one peak from a list\");\n    return false;\n  }\n  const logID = setLogEntryID();\n  const lists = setLogEntryLists(formData.peakIDs);\n  const entry = new LogEntry(formData, logID, lists);\n  state.noEntries = false;\n  state.allLogEntries.unshift(entry);\n  state.curLogEntry = entry;\n  sortLogEntries();\n  updateAllSelectValues();\n  setLocalStorage();\n  return true;\n};\n\n// SELECTS\n\nconst updateAllSelectValues = function () {\n  const years = [\n    ...new Set(state.allLogEntries.map((entry) => entry.date.year)),\n  ].sort((a, b) => b - a);\n\n  const allLists = state.allLogEntries.flatMap((entry) => entry.lists);\n  const lists = [...new Set(allLists.map(JSON.stringify))].map(JSON.parse);\n  lists.sort((a, b) =>\n    a.title.toLowerCase().localeCompare(b.title.toLowerCase())\n  );\n  const allMonths = state.allLogEntries.flatMap((entry) => entry.date.month);\n  const months = [...new Set(allMonths.map(JSON.stringify))].map(JSON.parse);\n  months.sort((a, b) => a.numeric - b.numeric);\n  const allSelectValues = {\n    lists,\n    months,\n    years,\n  };\n  state.allSelectValues = allSelectValues;\n  setLocalStorage();\n};\n\nexport const getListSelectData = function () {\n  return peakListsArr.map((list) => {\n    return {\n      listID: list.listID,\n      title: list.title,\n    };\n  });\n};\n\n// INIT\n\nconst initializeListCounts = function () {\n  peakListsArr.forEach((list) => {\n    if (!state.listCounts[`${list.listID}`])\n      state.listCounts[`${list.listID}`] = 0;\n  });\n};\n\nconst init = function () {\n  getLocalStorage();\n  initializeListCounts();\n  updateAllSelectValues();\n  setLocalStorage();\n  getSessionStorage();\n};\n\ninit();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7RGJm\")).toString();","export default class View {\n  hash;\n  _navBtn;\n  _container;\n  _allContainers = document.querySelectorAll(\".container\");\n  _containerMain = document.querySelector(\".container-main\");\n  _allNavBtns = document.querySelectorAll(\".nav__btn\");\n\n  addHandlerNavClick(handler) {\n    this._navBtn.addEventListener(\"click\", function () {\n      handler();\n    });\n  }\n\n  showContainer() {\n    this._allContainers.forEach((container) =>\n      container.classList.add(\"hidden\")\n    );\n    this._containerMain.classList.remove(\"hidden\");\n    this._container.classList.remove(\"hidden\");\n    this._allNavBtns.forEach((btn) => btn.classList.remove(\"nav__btn--active\"));\n    this._navBtn.classList.add(\"nav__btn--active\");\n  }\n\n  hideContainer() {\n    this._containerMain.classList.add(\"hidden\");\n    this._allContainers.forEach((container) =>\n      container.classList.add(\"hidden\")\n    );\n  }\n}\n","import icons from \"../../img/sprite.svg\";\nimport View from \"./view.js\";\n\nexport default class LogView extends View {\n  _navBtn = document.querySelector(\"#nav-btn-log\");\n\n  // PUBLIC METHODS\n\n  addHandlerDeleteEntry(handler) {\n    this._container.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".btn-delete-entry\");\n      if (!clicked) return;\n      if (confirm(\"Are you sure you want to delete this entry?\")) {\n        const { logId } = clicked.dataset;\n        handler(+logId);\n      }\n    });\n  }\n\n  // PRIVATE METHODS\n\n  _generateDeleteButtonMarkup(entry, size) {\n    const markup = `\n      <button class=\"btn btn-icon btn-delete-entry\" data-log-id='${\n        entry.logID\n      }'>\n        <svg class=\"btn-icon__icon${size === \"small\" ? \"--sm\" : \"\"}\">\n          <use href=\"${icons}#icon-trash\"></use>\n        </svg>\n      </button>\n     `;\n    return markup;\n  }\n}\n","import LogView from \"./logView.js\";\n\nclass LogPreviewView extends LogView {\n  #data;\n  #entries;\n  #noEntries;\n  #curSelectValues;\n  #allSelectValues;\n  #listSelect;\n  #monthSelect;\n  #yearSelect;\n  hash = \"#log-preview\";\n  _container = document.querySelector(\".container-log-preview\");\n  #previewGrid = document.querySelector(\".preview-list--log-entries\");\n  #selectWrapper = this._container.querySelector(\".preview-wrapper\");\n  #btnAddEntry = this._container.querySelector(\".btn-add-entry\");\n  #noEntriesMessage = this._container.querySelector(\".no-data__message\");\n  #noLogEntries = document.querySelector(\".no-log-entries\");\n\n  // PUBLIC METHODS\n\n  addHandlerAddEntry(handler) {\n    this.#btnAddEntry.addEventListener(\"click\", handler);\n  }\n\n  addHandlerShowEntry(handler) {\n    this._container.addEventListener(\n      \"click\",\n      function (e) {\n        const clicked = e.target.closest(\".btn-view\");\n        if (!clicked) return;\n        const { logId } = clicked.dataset;\n        handler(+logId);\n      }.bind(this)\n    );\n  }\n\n  addHandlerLogSelects(handler) {\n    this.#selectWrapper.addEventListener(\n      \"change\",\n      function () {\n        const listID = this.#listSelect.value;\n        const month = this.#monthSelect.value;\n        const year = this.#yearSelect.value;\n        const currentSelectValues = { listID, month, year };\n        handler(currentSelectValues);\n      }.bind(this)\n    );\n  }\n\n  addHandlerPagination(handler) {\n    this.#selectWrapper.addEventListener(\n      \"click\",\n      function (e) {\n        const clicked = e.target.closest(\".btn-pagination\");\n        if (!clicked) return;\n        const { page } = clicked.dataset;\n        handler(this.#curSelectValues, +page);\n      }.bind(this)\n    );\n  }\n\n  render(data) {\n    this.#data = data;\n    this.#entries = data.entries;\n    this.#noEntries = data.noEntries;\n    this.#curSelectValues = data.curSelectValues;\n    this.#allSelectValues = data.allSelectValues;\n    this.#selectWrapper.innerHTML = this.#generateSelectWrapperMarkup();\n    this.#previewGrid.innerHTML = \"\";\n    if (data.entries.length) {\n      this.#noLogEntries.classList.add(\"hidden\");\n      this.#previewGrid.classList.remove(\"hidden\");\n      this.#previewGrid.innerHTML = this.#generatePreviewMarkup();\n    } else {\n      this.#previewGrid.classList.add(\"hidden\");\n      this.#showNoEntriesMessage();\n    }\n    this.#listSelect = document.querySelector(\"#select-list-log-preview\");\n    this.#monthSelect = document.querySelector(\"#select-month-log-preview\");\n    this.#yearSelect = document.querySelector(\"#select-year-log-preview\");\n    this.#listSelect.value = this.#curSelectValues.listID;\n    this.#monthSelect.value = this.#curSelectValues.month;\n    this.#yearSelect.value = this.#curSelectValues.year;\n  }\n\n  // PRIVATE METHODS\n\n  #generatePreviewMarkup() {\n    return this.#entries\n      .map((entry) => this.#generateSinglePreviewMarkup(entry))\n      .join(\"\");\n  }\n\n  #generateSinglePreviewMarkup(entry) {\n    const markup = `\n      <li class=\"preview-list__entry\">\n        ${this._generateDeleteButtonMarkup(entry)}\n        <div class=\"preview-list__info\">\n          <h2 class=\"preview-list__label-primary\"><strong>${\n            entry.date.month.alpha\n          } ${entry.date.day}, ${entry.date.year}</strong> - ${\n      entry.peaks.length\n    } ${entry.peaks.length > 1 ? \"Peaks\" : \"Peak\"}\n          </h2>\n          <span class=\"preview-list__label-secondary\">${entry.peakString}</span>\n        </div>\n        <button class=\"btn btn--green btn-view btn-view-log\" data-log-id=\"${\n          entry.logID\n        }\">VIEW</button>\n      </li>`;\n    return markup;\n  }\n\n  #generateListSelectRowMarkup(list) {\n    const markup = `<option value=\"${list.listID}\">${list.title}</option>`;\n    return markup;\n  }\n\n  #generateMonthSelectRowMarkup(month) {\n    const markup = `<option value=\"${month.numeric}\">${month.alpha}</option>`;\n    return markup;\n  }\n\n  #generateYearSelectRowMarkup(year) {\n    const markup = `<option value=\"${year}\">${year}</option>`;\n    return markup;\n  }\n\n  #generateSelectWrapperMarkup() {\n    const curPage = this.#data.page;\n    const numPages = this.#data.numPages;\n\n    // First page, other pages\n    if (curPage === 1 && numPages > 1) {\n      const markup = `\n      ${this.#generateSelectMarkup()}\n        <button data-page=\"2\" class=\"btn btn-pagination btn-pagination--next\">\n          <span>Page 2</span>\n        </button>`;\n      return markup;\n    }\n\n    // Last page, other pages\n    if (curPage === numPages && numPages > 1) {\n      const markup = `\n        <button data-page=\"${\n          numPages - 1\n        }\" class=\"btn btn-pagination btn-pagination--prev\">\n          <span>Page ${numPages - 1}</span>\n        </button>\n        ${this.#generateSelectMarkup()}`;\n      return markup;\n    }\n\n    // First page, no other pages\n    if (curPage === 1 && numPages === 1) {\n      const markup = this.#generateSelectMarkup();\n      return markup;\n    }\n\n    // Other page\n    if (curPage < numPages) {\n      const markup = `\n      <button data-page=\"${\n        curPage - 1\n      }\" class=\"btn btn-pagination btn-pagination--prev\">\n          <span>Page ${curPage - 1}</span>\n        </button>\n      ${this.#generateSelectMarkup()}\n        <button data-page=\"${\n          curPage + 1\n        }\" class=\"btn btn-pagination btn-pagination--next\">\n          <span>Page ${curPage + 1}</span>\n        </button>`;\n      return markup;\n    }\n  }\n\n  #generateSelectMarkup() {\n    const markup = `\n      <label for=\"select-list-log-preview\">Filter by list:</label>\n      <select class=\"select-list\" id=\"select-list-log-preview\">\n        <option value=\"all\" selected>All lists</option>\n        ${this.#allSelectValues.lists\n          .map(this.#generateListSelectRowMarkup)\n          .join(\"\")}\n      </select>\n      <label for=\"select-month-log-preview\">Filter by date:</label>\n      <select id=\"select-month-log-preview\">\n        <option value=\"all\" selected>All Months</option>\n        ${this.#allSelectValues.months\n          .map(this.#generateMonthSelectRowMarkup)\n          .join(\"\")}\n      </select>\n      <select id=\"select-year-log-preview\">\n        <option value=\"all\" selected>All years</option>\n        ${this.#allSelectValues.years\n          .map(this.#generateYearSelectRowMarkup)\n          .join(\"\")}\n      </select>`;\n    return markup;\n  }\n\n  #showNoEntriesMessage() {\n    const message = `\n    You haven't added any log entries ${\n      this.#noEntries ? \"yet\" : \"that match the selected filters\"\n    }. ${this.#noEntries ? \"Click\" : \"Adjust the filters or click\"}\n     the button below to log ${this.#noEntries ? \"your first\" : \"a new\"} entry!\n    `;\n    this.#noEntriesMessage.innerHTML = message;\n    this.#noLogEntries.classList.remove(\"hidden\");\n  }\n}\n\nexport default new LogPreviewView();\n","import icons from \"../../img/sprite.svg\";\nimport LogView from \"./logView.js\";\n\nclass LogEntryView extends LogView {\n  #entry;\n  hash = \"#log-entry\";\n  _container = document.querySelector(\".container-log-entry\");\n  #logEntryEl = document.querySelector(\".log-entry\");\n  #logEntryLabelNumber = document.querySelector(\".log-entry__label-number\");\n  #logEntryHeading = document.querySelector(\".log-entry__heading\");\n  #btnDeleteWrapper = this._container.querySelector(\n    \".container__heading-button-wrapper\"\n  );\n\n  // PUBLIC METHODS\n\n  addHandlerViewMap(handler) {\n    this.#logEntryEl.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".btn-view--sm\");\n      if (!clicked) return;\n      let { type, id } = clicked.dataset;\n      id = type === \"log\" ? +id : id;\n      handler(type, id);\n    });\n  }\n\n  render(entry) {\n    this.#entry = entry;\n    this.#logEntryEl.innerHTML = \"\";\n    this.#logEntryLabelNumber.innerHTML = `${entry.peaks.length} ${\n      entry.peaks.length > 1 ? \"Peaks\" : \"Peak\"\n    }`;\n    this.#logEntryHeading.innerHTML = `${entry.date.month.alpha} ${entry.date.day}, ${entry.date.year}`;\n    this.#btnDeleteWrapper.innerHTML = `${this._generateDeleteButtonMarkup(\n      entry,\n      \"small\"\n    )}<span>Delete entry</span>`;\n    this.#logEntryEl.insertAdjacentHTML(\n      \"beforeend\",\n      this.#generateLogEntryMarkup()\n    );\n  }\n\n  // PRIVATE METHODS\n\n  #generateLogEntryMarkup() {\n    const markup = `\n      <span class=\"log-entry__label\">Peak Lists:</span>\n      <div class=\"log-entry__lists\">${this.#generatePeakListMarkup()}</div>\n      <span class=\"log-entry__label\">Peaks:</span>\n      <div class=\"log-entry__peaks\" style=\"grid-template-rows:repeat(${\n        this.#entry.peaks.length\n      }, max-content)\">${this.#generatePeaksMarkup()}</div>\n      <span class=\"log-entry__label\">Distance:</span>\n      <span>${\n        this.#entry.stats.distance ? this.#entry.stats.distance + ` mi` : \"n/a\"\n      }</span>\n      <span class=\"log-entry__label\">Elevation:</span>\n      <span>${\n        this.#entry.stats.elevation\n          ? this.#entry.stats.elevation.toLocaleString() + ` ft`\n          : \"n/a\"\n      }</span>\n      <span class=\"log-entry__label\">Time:</span>\n      <span>${\n        this.#entry.stats.time ? this.#entry.stats.time + ` hrs` : \"n/a\"\n      }</span>\n      <span class=\"log-entry__label\">Avg Speed:</span>\n      <span>${\n        this.#entry.stats.avgSpeed\n          ? this.#entry.stats.avgSpeed + ` mi/hr`\n          : \"n/a\"\n      }</span>\n      <span class=\"log-entry__label\">Avg Elevation:</span>\n      <span>${\n        this.#entry.stats.avgElevation\n          ? this.#entry.stats.avgElevation.toLocaleString() + ` ft/mi`\n          : \"n/a\"\n      }</span>\n      <span class=\"log-entry__label\">Rating:</span>\n      <span>${this.#generateRatingMarkup()}</span>\n      <span class=\"log-entry__label\">Notes:</span>\n      <span>${this.#entry.notes ? this.#entry.notes : \"n/a\"}</span>`;\n    return markup;\n  }\n\n  #generateRatingMarkup() {\n    let markup = \"\";\n    if (this.#entry.rating) {\n      for (let i = 0; i < this.#entry.rating; i++) {\n        markup += `<svg class=\"btn-star__icon btn-star__icon--full\"><use href=\"${icons}#icon-star-solid\"></use></svg>`;\n      }\n      for (let i = 0; i < 5 - this.#entry.rating; i++) {\n        markup += `<svg class=\"btn-star__icon\"><use href=\"${icons}#icon-star\"></use></svg>`;\n      }\n    } else {\n      markup = \"n/a\";\n    }\n    return markup;\n  }\n\n  #generatePeaksMarkup() {\n    let markup = \"\";\n    this.#entry.peaks.forEach(\n      (peak) =>\n        (markup += `<span class='log-entry__peak'>${\n          peak.name\n        } - ${peak.elevation.toLocaleString()} ft</span>`)\n    );\n    markup += `<button class='btn btn--green btn-view--sm' data-type='log' data-id='${\n      this.#entry.logID\n    }'>VIEW</button>`;\n    return markup;\n  }\n\n  #generatePeakListMarkup() {\n    let markup = \"\";\n    this.#entry.lists.forEach((list) => {\n      markup += `<span>${list.title}</span><button class='btn btn--green btn-view--sm' data-type='list' data-id='${list.listID}'>VIEW</button>`;\n    });\n    return markup;\n  }\n}\n\nexport default new LogEntryView();\n","import icons from \"../../img/sprite.svg\";\nimport View from \"./view.js\";\n\nclass newEntryView extends View {\n  hash = \"#new-entry\";\n  _navBtn = document.querySelector(\"#nav-btn-new-entry\");\n  _container = document.querySelector(\".container-new-entry\");\n  #gridDate = document.querySelector(\".form-new-entry__date-grid\");\n  #gridPeakCheckboxes = document.querySelector(\n    \".form-new-entry__checkbox-grid\"\n  );\n  #gridStats = document.querySelector(\".form-new-entry__stats-grid\");\n  #statRows = [...document.querySelectorAll(\".form-new-entry__stat-row\")];\n  #statRowIcons = [...this.#gridStats.querySelectorAll(\".btn-icon__icon\")];\n  #inputDate = document.querySelector(\"#date\");\n  #chooseListSelect = document.querySelector(\"#choose-list-new-entry\");\n  #inputElevation = document.querySelector(\"#elevation\");\n  #inputDistance = document.querySelector(\"#distance\");\n  #inputHours = document.querySelector(\"#hours\");\n  #inputMinutes = document.querySelector(\"#minutes\");\n  #inputNotes = document.querySelector(\"#notes\");\n  #wrapperStars = document.querySelector(\".form-new-entry__wrapper-stars\");\n  #allStarButtons = [...document.querySelectorAll(\".btn-star\")];\n  #formNewEntry = document.querySelector(\"#form-new-entry\");\n  #btnClearForm = document.querySelector(\".btn-clear-form\");\n  #btnAddEntry = document.querySelector(\"#add-entry\");\n\n  constructor() {\n    super();\n    this.#addHandlerToggleStat();\n    this.#addHandlerStarMouseover();\n    this.#addHandlerStarMouseout();\n    this.#addHandlerStarClick();\n    this.#addHandlerDatePicker();\n  }\n\n  // PUBLIC METHODS\n\n  #addHandlerDatePicker() {\n    this.#inputDate.addEventListener(\n      \"click\",\n      function () {\n        this.#inputDate.showPicker();\n      }.bind(this)\n    );\n  }\n\n  addHandlerClearForm(handler) {\n    this.#btnClearForm.addEventListener(\"click\", handler);\n  }\n\n  addHandlerDate(handler) {\n    this.#gridDate.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      const clicked = e.target.closest(\".btn-date\");\n      if (!clicked) return;\n      const date = clicked.textContent.toLowerCase().trim();\n      handler(date);\n    });\n  }\n\n  addHandlerPeakListSelect(handler) {\n    this.#chooseListSelect.addEventListener(\n      \"change\",\n      function (e) {\n        const listID = e.target.value;\n        handler(listID);\n      }.bind(this)\n    );\n  }\n\n  addHandlerAddEntry(handler) {\n    this.#formNewEntry.addEventListener(\n      \"submit\",\n      function (e) {\n        e.preventDefault();\n        const formData = this.getFormData();\n        handler(formData);\n      }.bind(this)\n    );\n  }\n\n  changeDate(date) {\n    this.#inputDate.value = date;\n  }\n\n  clearForm() {\n    for (const starBtn of this.#allStarButtons) {\n      this.#clearStar(starBtn);\n      starBtn.dataset.filled = \"false\";\n    }\n    this.#gridPeakCheckboxes.innerHTML = \"\";\n    this.#gridPeakCheckboxes.classList.add(\"hidden\");\n    this.#statRowIcons.forEach(\n      (icon) => (icon.innerHTML = `<use href=\"${icons}#icon-add\"></use>`)\n    );\n    this.#statRows.forEach((row) => row.classList.add(\"invisible\"));\n    this.#formNewEntry.reset();\n  }\n\n  displayCheckboxes(data) {\n    this.#gridPeakCheckboxes.classList.remove(\"hidden\");\n    this.#gridPeakCheckboxes.innerHTML = this.#generateCheckboxGridMarkup(data);\n    this.#chooseListSelect.value = data.listID;\n    if (data.checkedID) {\n      const checkbox = [\n        ...this.#gridPeakCheckboxes.querySelectorAll(\"input\"),\n      ].find((input) => +input.value === data.checkedID);\n      checkbox.checked = true;\n    }\n  }\n\n  getFormData() {\n    const formData = {\n      date: this.#inputDate.value || undefined,\n      peakIDs: this.#getCheckedPeaks(),\n      elevation: this.#inputElevation.value || undefined,\n      distance: this.#inputDistance.value || undefined,\n      hours: this.#inputHours.value || undefined,\n      minutes: this.#inputMinutes.value || undefined,\n      notes: this.#inputNotes.value || undefined,\n      rating: this.#getRating(),\n    };\n    return formData;\n  }\n\n  initializeListSelect(data) {\n    this.#chooseListSelect.insertAdjacentHTML(\n      \"beforeend\",\n      data.map((list) => this.#generateSelectRowMarkup(list)).join(\"\")\n    );\n  }\n\n  isFormEmpty() {\n    const formData = this.getFormData();\n    const isEmpty = Object.values(formData).every(\n      (input) => input === undefined\n    );\n    return isEmpty;\n  }\n\n  // PRIVATE METHODS\n\n  #addHandlerToggleStat() {\n    this.#gridStats.addEventListener(\"click\", this.#toggleStat.bind(this));\n  }\n\n  #addHandlerStarMouseover() {\n    this.#wrapperStars.addEventListener(\n      \"mouseover\",\n      this.#handleStarMouseOver.bind(this)\n    );\n  }\n\n  #addHandlerStarMouseout() {\n    this.#wrapperStars.addEventListener(\n      \"mouseout\",\n      this.#handleStarMouseOut.bind(this)\n    );\n  }\n\n  #addHandlerStarClick() {\n    this.#wrapperStars.addEventListener(\n      \"click\",\n      this.#handleStarClick.bind(this)\n    );\n  }\n\n  #handleStarMouseOver(e) {\n    const hovered = e.target.closest(\".btn-star\");\n    if (!hovered) return;\n    for (const starBtn of this.#allStarButtons) {\n      starBtn.dataset.num <= hovered.dataset.num\n        ? this.#fillStar(starBtn)\n        : this.#clearStar(starBtn);\n    }\n  }\n\n  #handleStarMouseOut() {\n    for (const starBtn of this.#allStarButtons) {\n      if (starBtn.dataset.filled === \"false\") {\n        this.#clearStar(starBtn);\n      } else {\n        this.#fillStar(starBtn);\n      }\n    }\n  }\n\n  #handleStarClick(e) {\n    e.preventDefault();\n    const clicked = e.target.closest(\".btn-star\");\n    if (!clicked) return;\n    for (const starBtn of this.#allStarButtons) {\n      if (starBtn.dataset.num <= clicked.dataset.num) {\n        this.#fillStar(starBtn);\n        starBtn.dataset.filled = \"true\";\n      } else {\n        this.#clearStar(starBtn);\n        starBtn.dataset.filled = \"false\";\n      }\n    }\n  }\n\n  #fillStar(starBtn) {\n    starBtn.querySelector(\"svg\").classList.add(\"btn-star__icon--full\");\n    starBtn\n      .querySelector(\"use\")\n      .setAttribute(\"href\", `${icons}#icon-star-solid`);\n  }\n\n  #clearStar(starBtn) {\n    starBtn.querySelector(\"svg\").classList.remove(\"btn-star__icon--full\");\n    starBtn.querySelector(\"use\").setAttribute(\"href\", `${icons}#icon-star`);\n  }\n\n  #generateSelectRowMarkup(list) {\n    const markup = `<option value=\"${list.listID}\">${list.title}</option>`;\n    return markup;\n  }\n\n  #generateCheckboxGridMarkup(data) {\n    return data.peaks.map(this.#generateSingleCheckboxMarkup).join(\"\");\n  }\n\n  #generateSingleCheckboxMarkup(peak) {\n    const markup = `\n    <li>\n      <label class=\"form-new-entry__checkbox-container\">${peak.name}\n        <input type=\"checkbox\" value=\"${peak.id}\"/>\n        <span class=\"form-new-entry__checkmark\"></span>\n      </label>\n    </li>\n    `;\n    return markup;\n  }\n\n  #getCheckedPeaks() {\n    const allCheckboxesArr = [\n      ...this.#gridPeakCheckboxes.querySelectorAll(\"input\"),\n    ];\n    const checkedPeaksIDArr = allCheckboxesArr\n      .filter((checkbox) => checkbox.checked)\n      .map((checkbox) => +checkbox.value);\n    return checkedPeaksIDArr.length > 0 ? checkedPeaksIDArr : undefined;\n  }\n\n  #toggleStat(e) {\n    e.preventDefault();\n    const clicked = e.target.closest(\".btn-add-stat\");\n    if (!clicked) return;\n    const icon = clicked.querySelector(\"use\");\n    const row = this.#statRows.find(\n      (row) => row.dataset.stat === clicked.dataset.stat\n    );\n    if (row.classList.contains(\"invisible\")) {\n      row.classList.remove(\"invisible\");\n      icon.setAttribute(\"href\", `${icons}#icon-remove`);\n    } else {\n      row.classList.add(\"invisible\");\n      icon.setAttribute(\"href\", `${icons}#icon-add`);\n    }\n  }\n\n  #getRating() {\n    return (\n      +this.#allStarButtons.filter((star) => star.dataset.filled === \"true\")\n        .length || undefined\n    );\n  }\n}\n\nexport default new newEntryView();\n","class MainView {\n  #containerMain = document.querySelector(\".container-main\");\n  #btnCloseContainer = this.#containerMain.querySelector(\".btn-close\");\n  #allContainers = document.querySelectorAll(\".container\");\n  #mapNavBtn = document.querySelector(\"#nav-btn-map\");\n  #allNavBtns = document.querySelectorAll(\".nav__btn\");\n  #body = document.querySelector(\"body\");\n  #html = document.querySelector(\"html\");\n  #dragBar = document.querySelector(\".mobile-drag-bar\");\n  #sidebar = document.querySelector(\".sidebar\");\n\n  constructor() {\n    this.#addHandlerEscapeKeydown();\n    this.#addHandlerRemovePreload();\n    this.#addHandlerMarginTop();\n  }\n\n  // PUBLIC METHODS\n\n  addHandlerPageLoad(handler) {\n    [\"load\", \"hashchange\"].forEach((ev) =>\n      window.addEventListener(ev, handler)\n    );\n  }\n\n  addHandlerCloseContainer(handler) {\n    this.#btnCloseContainer.addEventListener(\"click\", handler);\n  }\n\n  addHandlerBtnBack(handler) {\n    this.#containerMain.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".btn-back\");\n      if (!clicked) return;\n      const { containerId } = clicked.dataset;\n      handler(containerId);\n    });\n  }\n\n  closeContainer() {\n    this.#containerMain.classList.add(\"hidden\");\n    this.#allContainers.forEach((container) =>\n      container.classList.add(\"hidden\")\n    );\n    this.#allNavBtns.forEach((btn) => btn.classList.remove(\"nav__btn--active\"));\n    this.#mapNavBtn.classList.add(\"nav__btn--active\");\n  }\n\n  // PRIVATE METHODS\n\n  #addHandlerEscapeKeydown() {\n    document.addEventListener(\n      \"keydown\",\n      function (e) {\n        e.key === \"Escape\" &&\n          !this.#containerMain.classList.contains(\"hidden\") &&\n          this.closeContainer();\n      }.bind(this)\n    );\n  }\n\n  #addHandlerRemovePreload() {\n    window.addEventListener(\n      \"load\",\n      function () {\n        this.#containerMain.classList.remove(\"preload\");\n      }.bind(this)\n    );\n  }\n\n  #setMarginTop() {\n    if (window.matchMedia(\"(max-width: 800px)\").matches) {\n      const innerHeight = `${window.innerHeight}px`;\n      const dragBarHeight = `6rem`;\n      const sidebarHeight = `${this.#sidebar.offsetHeight}px`;\n      this.#containerMain.style.height = `calc(${innerHeight} - ${dragBarHeight} - ${sidebarHeight})`;\n      this.#containerMain.style.marginTop = `${window.innerHeight}px`;\n    }\n  }\n\n  #addHandlerMarginTop() {\n    [\"load\", \"resize\"].forEach((ev) =>\n      window.addEventListener(ev, this.#setMarginTop.bind(this))\n    );\n  }\n}\n\nexport default new MainView();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"iPWdx\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8TcTG\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7TqKI\")).toString();","import mtnIconRed from \"url:../../img/mtn-icon-red.png\";\nimport mtnIconGreen from \"url:../../img/mtn-icon-green.png\";\nimport markerIcon from \"url:../../img/marker-icon.png\";\n\nclass MapView {\n  #data;\n  #map;\n  #markersLayer;\n  #locationMarker;\n  #markersArr = [];\n  #navBtn = document.querySelector(\"#nav-btn-map\");\n  #btnLocation = document.querySelector(\".btn-location\");\n  #btnLoadData = document.querySelector(\"#btn-load-data-map\");\n  #btnClearData = document.querySelector(\"#btn-clear-data-map\");\n  #mapDiv = document.querySelector(\"#map\");\n\n  // PUBLIC METHODS\n\n  addHandlerNavClick(handler) {\n    this.#navBtn.addEventListener(\"click\", handler);\n  }\n\n  addHandlerLoadData(handler) {\n    this.#btnLoadData.addEventListener(\"click\", handler);\n  }\n\n  addHandlerClearAllData(handler) {\n    this.#btnClearData.addEventListener(\"click\", handler);\n  }\n\n  addHandlerGetLocation(handler) {\n    this.#btnLocation.addEventListener(\"click\", handler);\n  }\n\n  loadMap() {\n    this.#map = new L.Map(\"map\", {\n      zoomControl: false,\n    }).setView([39.402244340292775, -108.45703125000001], 4);\n\n    L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 19,\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    L.control\n      .zoom({\n        position: \"bottomright\",\n      })\n      .addTo(this.#map);\n\n    this.#setMapHeight();\n  }\n\n  setMapView(coords) {\n    this.#map.setView(coords, 16);\n    const icon = L.icon({\n      iconUrl: markerIcon,\n      iconAnchor: [0, 41],\n      popupAnchor: [12, -20],\n    });\n    this.#locationMarker = new L.Marker(coords, {\n      icon: icon,\n    });\n    this.#locationMarker.addTo(this.#map);\n  }\n\n  clearMap() {\n    this.#markersLayer && this.#markersLayer.clearLayers();\n    this.#markersArr = [];\n  }\n\n  plotPeaksOnMap(data) {\n    this.#data = data.data;\n    this.clearMap();\n    this.#createMarkerLayer();\n    this.#map.addLayer(this.#markersLayer);\n    const padding = window.matchMedia(\"(max-width: 800px)\").matches\n      ? [0, 0]\n      : [650, 0];\n    this.#map.fitBounds(this.#markersLayer.getBounds(), {\n      paddingTopLeft: padding,\n      maxZoom: 10,\n    });\n  }\n\n  addLocationPopup(address) {\n    this.#locationMarker\n      .bindPopup(L.popup({}))\n      .setPopupContent(`<div class='location-popup'>${address}</div>`);\n    this.#locationMarker.on(\"mouseover\", function () {\n      this.openPopup();\n    });\n    this.#locationMarker.on(\"click\", function () {\n      this.openPopup();\n    });\n    this.#locationMarker.openPopup();\n  }\n\n  openPopup(peakId) {\n    const marker = this.#markersArr.find(\n      (marker) => marker.options.id === +peakId\n    );\n    marker.openPopup();\n  }\n\n  // PRIVATE METHODS\n\n  #createMarker(peak) {\n    const mtnIcon = L.icon({\n      iconUrl: `${peak.completed ? mtnIconGreen : mtnIconRed}`,\n      iconSize: [25, 20],\n    });\n    const marker = new L.Marker([peak.lat, peak.long], {\n      icon: mtnIcon,\n      id: peak.id,\n      riseOnHover: true,\n    });\n    marker\n      .bindPopup(L.popup({}))\n      .setPopupContent(this.#generatePopupMarkup(peak));\n    marker.on(\"mouseover\", function () {\n      this.openPopup();\n    });\n    marker.on(\"click\", function () {\n      this.openPopup();\n    });\n    return marker;\n  }\n\n  #createMarkerLayer() {\n    this.#markersLayer = new L.featureGroup();\n    this.#data.peaks.forEach((peak) => {\n      const marker = this.#createMarker(peak);\n      this.#markersArr.push(marker);\n      this.#markersLayer.addLayer(marker);\n    });\n  }\n\n  #generatePopupMarkup(peak) {\n    const markup = `<div class='peak-popup' data-id=${peak.id}>\n        <span class='peak-popup__label-name'>${peak.name}</span>\n        <span class='peak-popup__label-elevation'>${peak.elevation.toLocaleString()} ft.</span>\n        ${\n          peak.completed\n            ? this.#generateCompletedDateMarkup(peak)\n            : this.#generateLogTripButtonMarkup(peak)\n        }\n      </div>`;\n    return markup;\n  }\n\n  #generateLogTripButtonMarkup(peak) {\n    const markup = `<button class='btn btn-text btn-text-green btn-log-trip' data-peak-id='${\n      peak.id\n    }' data-list-id='${this.#data.id}'>LOG TRIP</button>`;\n    return markup;\n  }\n\n  #generateCompletedDateMarkup(peak) {\n    const markup = `<span class=\"peak-popup__label-date\"><strong>Hiked On:</strong><br/>${peak.completedDate}</span>`;\n    return markup;\n  }\n\n  #setMapHeight() {\n    if (window.matchMedia(\"(max-width: 800px)\").matches) {\n      this.#mapDiv.style.height = window.innerHeight;\n    }\n  }\n}\n\nexport default new MapView();\n","class ModalView {\n  #modal = document.querySelector(\".modal\");\n  #overlay = document.querySelector(\".overlay\");\n  #btnClose = this.#modal.querySelector(\".btn-close\");\n  #btnLoadData = this.#modal.querySelector(\".btn-load-data\");\n  #btnStartScratch = this.#modal.querySelector(\".btn-start-scratch\");\n  #navBtn = document.querySelector(\"#nav-btn-about\");\n  #body = document.querySelector(\"body\");\n\n  constructor() {\n    this.#addHandlerCloseModal();\n    this.#addHandlerNav();\n  }\n\n  // PUBLIC METHODS\n\n  #addHandlerNav() {\n    this.#navBtn.addEventListener(\"click\", this.openModal.bind(this));\n  }\n\n  addHandlerLoadData(handler) {\n    this.#btnLoadData.addEventListener(\n      \"click\",\n      function () {\n        this.#closeModal();\n        handler();\n      }.bind(this)\n    );\n  }\n\n  openModal() {\n    this.#modal.classList.remove(\"hidden\");\n    this.#overlay.classList.remove(\"hidden\");\n  }\n\n  // PRIVATE METHODS\n\n  #addHandlerCloseModal() {\n    [this.#btnClose, this.#overlay, this.#btnStartScratch].forEach((el) =>\n      el.addEventListener(\"click\", this.#closeModal.bind(this))\n    );\n  }\n\n  #closeModal() {\n    this.#modal.classList.add(\"hidden\");\n    this.#overlay.classList.add(\"hidden\");\n  }\n}\n\nexport default new ModalView();\n","import View from \"./view.js\";\n\nexport default class PeakListView extends View {\n  _navBtn = document.querySelector(\"#nav-btn-peak-lists\");\n\n  // PUBLIC METHODS\n\n  addHandlerSavedLists(handler) {\n    this._container.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".btn-save-peak-list\");\n      if (!clicked) return;\n      const { listId } = clicked.dataset;\n      handler(listId);\n    });\n  }\n\n  // PRIVATE METHODS\n\n  _generateProgressBarMarkup(list) {\n    const width = (list.numCompleted / list.peakCount) * 100;\n    const markup = `<div class='progress-bar'><div class='progress-bar__label'>${\n      Math.round(width * 10) / 10\n    }%</div><div class='progress-bar__progress' style=\"width:${width}%\"></div></div>\n      </div>`;\n    return markup;\n  }\n}\n","import icons from \"../../img/sprite.svg\";\nimport PeakListView from \"./peakListView.js\";\n\nclass PeakListPreviewView extends PeakListView {\n  hash = \"#peak-list-preview\";\n  _container = document.querySelector(\".container-peak-list-preview\");\n  #data;\n  #previewType;\n  #page;\n  #numPages;\n  #previewGrid = document.querySelector(\".preview-list--peak-lists\");\n  #btnsWrapper = this._container.querySelector(\".preview-wrapper\");\n  #noSavedLists = document.querySelector(\".no-saved-lists\");\n\n  // PUBLIC METHODS\n\n  addHandlerPagination(handler) {\n    this.#btnsWrapper.addEventListener(\n      \"click\",\n      function (e) {\n        const clicked = e.target.closest(\".btn-pagination\");\n        if (!clicked) return;\n        handler(this.#previewType, +clicked.dataset.page);\n      }.bind(this)\n    );\n  }\n\n  addHandlerViewTable(handler) {\n    this.#previewGrid.addEventListener(\"click\", function (e) {\n      const clicked = e.target.closest(\".btn-view-list\");\n      if (!clicked) return;\n      const { listId } = clicked.dataset;\n      handler(listId);\n    });\n  }\n\n  addHandlerPreviewType(handler) {\n    this.#btnsWrapper.addEventListener(\n      \"click\",\n      function (e) {\n        const clicked = e.target.closest(\".btn-text\");\n        if (!clicked) return;\n        const { previewType } = clicked.dataset;\n        handler(previewType, 1);\n      }.bind(this)\n    );\n  }\n\n  render(data) {\n    this.#data = data;\n    this.#previewType = data.previewType;\n    this.#previewGrid.innerHTML = \"\";\n    if (this.#data.data.length) {\n      this.#noSavedLists.classList.add(\"hidden\");\n      this.#previewGrid.classList.remove(\"hidden\");\n      this.#previewGrid.insertAdjacentHTML(\n        \"beforeend\",\n        this.#generatePreviewMarkup(this.#data.data)\n      );\n    } else {\n      this.#previewGrid.classList.add(\"hidden\");\n      this.#noSavedLists.classList.remove(\"hidden\");\n    }\n    this.#btnsWrapper.innerHTML = \"\";\n    this.#btnsWrapper.insertAdjacentHTML(\n      \"beforeend\",\n      this.#generateWrapperBtnMarkup()\n    );\n  }\n\n  // PRIVATE METHODS\n\n  #generatePreviewMarkup() {\n    return this.#data.data\n      .map((list) => this.#generateSinglePreviewMarkup(list))\n      .join(\"\");\n  }\n\n  #generateSinglePreviewMarkup(list) {\n    const markup = `<li class=\"preview-list__entry\">\n      <button class=\"btn btn-icon btn-save-peak-list\" data-list-id=\"${\n        list.listID\n      }\" aria-label=\"button to save peak list to saved lists\">\n        <svg class=\"btn-icon__icon\">\n          <use href=\"${icons}#icon-${list.saved ? \"remove\" : \"add\"}\"></use>\n        </svg>\n      </button>\n      <div class=\"preview-list__info\">\n        <h2 class=\"preview-list__label-primary\"><strong>${\n          list.title\n        }</strong></h2>\n        <span class=\"preview-list__label-secondary\">${list.numCompleted} of ${\n      list.peakCount\n    } Peaks</span>\n        ${this._generateProgressBarMarkup(list)}\n        <button class=\"btn btn--green btn-view btn-view-list\" data-list-id=\"${\n          list.listID\n        }\">VIEW</button>\n    </li>`;\n    return markup;\n  }\n\n  #generateWrapperBtnMarkup() {\n    const curPage = this.#data.page;\n    const numPages = this.#data.numPages;\n\n    // First page, other pages\n    if (curPage === 1 && numPages > 1) {\n      const markup = `\n      ${this.#generatePreviewButtonMarkup()}\n        <button data-page=\"2\" class=\"btn btn-pagination btn-pagination--next\">\n          <span>Page 2</span>\n        </button>`;\n      return markup;\n    }\n\n    // Last page, other pages\n    if (curPage === numPages && numPages > 1) {\n      const markup = `\n        <button data-page=\"${\n          numPages - 1\n        }\" class=\"btn btn-pagination btn-pagination--prev\">\n          <span>Page ${numPages - 1}</span>\n        </button>\n        ${this.#generatePreviewButtonMarkup()}`;\n      return markup;\n    }\n\n    // First page, no other pages\n    if (curPage === 1 && numPages === 1) {\n      const markup = this.#generatePreviewButtonMarkup();\n      return markup;\n    }\n\n    // Other page\n    if (curPage < numPages) {\n      const markup = `\n      <button data-page=\"${\n        curPage - 1\n      }\" class=\"btn btn-pagination btn-pagination--prev\">\n          <span>Page ${curPage - 1}</span>\n        </button>\n      ${this.#generatePreviewButtonMarkup()}\n        <button data-page=\"${\n          curPage + 1\n        }\" class=\"btn btn-pagination btn-pagination--next\">\n          <span>Page ${curPage + 1}</span>\n        </button>`;\n      return markup;\n    }\n  }\n\n  #generatePreviewButtonMarkup() {\n    const markup = `\n    <button class=\"btn btn-text btn-text--light btn-all-lists ${\n      this.#previewType === \"all\" ? \"btn-text--active\" : \"\"\n    }\" data-preview-type=\"all\">\n      All lists\n    </button>\n    <button class=\"btn btn-text btn-text--light btn-saved-lists ${\n      this.#previewType === \"saved\" ? \"btn-text--active\" : \"\"\n    }\" data-preview-type=\"saved\">\n      Saved lists\n    </button>`;\n    return markup;\n  }\n}\n\nexport default new PeakListPreviewView();\n","import icons from \"../../img/sprite.svg\";\nimport PeakListView from \"./peakListView.js\";\n\nclass PeakListTableView extends PeakListView {\n  hash = \"#peak-list-table\";\n  #data;\n  _container = document.querySelector(\".container-peak-list-table\");\n  #containerHeading = this._container.querySelector(\".container__heading\");\n  #labelNumber = this._container.querySelector(\".peak-list__label-number\");\n  #progressBarWrapper = this._container.querySelector(\n    \".container__heading-progress-wrapper\"\n  );\n  #btnSaveListWrapper = this._container.querySelector(\n    \".container__heading-button-wrapper\"\n  );\n  #sortTableSelect = document.querySelector(\"#sort-table-select\");\n  #description = document.querySelector(\".peak-list-description\");\n  #tableBody = document.querySelector(\".peak-list-table__body\");\n\n  // PUBLIC METHODS\n\n  addHandlerRowHover(handler) {\n    this.#tableBody.addEventListener(\"mouseover\", function (e) {\n      const { peakId } = e.target.closest(\".peak-list-table__row\").dataset;\n      handler(peakId);\n    });\n  }\n\n  addHandlerLogTrip(handler) {\n    document.addEventListener(\n      \"click\",\n      function (e) {\n        const clicked = e.target.closest(\".btn-log-trip\");\n        if (!clicked) return;\n        const { listId, peakId } = clicked.dataset;\n        handler(listId, peakId);\n      }.bind(this)\n    );\n  }\n\n  addHandlerSortTable(handler) {\n    this.#sortTableSelect.addEventListener(\n      \"change\",\n      function (e) {\n        const sortType = e.target.value;\n        const listID = this.#data.listID;\n        handler(listID, sortType);\n      }.bind(this)\n    );\n  }\n\n  render(data) {\n    this.#data = data.data;\n    this.#sortTableSelect.value = this.#data.sortType;\n    this.#containerHeading.innerHTML = `${this.#data.title}`;\n    this.#labelNumber.innerHTML = `${this.#data.numCompleted} of ${\n      this.#data.peakCount\n    } Peaks`;\n    this.#progressBarWrapper.innerHTML = this._generateProgressBarMarkup(\n      this.#data\n    );\n    this.#btnSaveListWrapper.innerHTML = this.#generateSaveButtonMarkup();\n    this.#description.innerHTML = data.data.description;\n    this.#tableBody.innerHTML = this.#generateTableMarkup();\n  }\n\n  // PRIVATE METHODS\n\n  #generateTableMarkup() {\n    return this.#data.peaks\n      .map((peak) => this.#generateTableRowMarkup(peak))\n      .join(\"\");\n  }\n\n  #generateTableRowMarkup(peak) {\n    const markup = `<tr class=\"peak-list-table__row ${\n      peak.completed ? \"peak-list-table__row--complete\" : \"\"\n    }\" data-peak-id=\"${peak.id}\">\n        <td><strong>${peak.num}</strong></td>\n        <td style=\"text-align:left\">${peak.name}</td>\n        <td>${peak.state}</td>\n\n        <td>${peak.elevation.toLocaleString()}</td>\n        <td>${\n          peak.completed\n            ? `${peak.completedDate}`\n            : `<button class='btn btn-text btn-log-trip' data-peak-id='${\n                peak.id\n              }' data-list-id='${this.#data.listID}'>LOG TRIP</button>`\n        }</td>\n      </tr>`;\n    return markup;\n  }\n\n  #generateSaveButtonMarkup() {\n    const markup = `\n      <button class=\"btn btn-icon btn-save-peak-list\" data-list-id=\"${\n        this.#data.listID\n      }\" aria-label=\"button to save peak list to saved lists\">\n        <svg class=\"btn-icon__icon\">\n          <use href=\"${icons}#icon-${\n      this.#data.saved ? \"remove\" : \"add\"\n    }\"></use>\n        </svg>\n      </button>\n      <span>${this.#data.saved ? \"Remove from\" : \"Add to\"} my lists</span>`;\n    return markup;\n  }\n}\n\nexport default new PeakListTableView();\n","import icons from \"../../img/sprite.svg\";\n\nclass SidebarView {\n  #containerMain = document.querySelector(\".container-main\");\n  #sidebar = document.querySelector(\".sidebar\");\n  #btnSidebar = document.querySelector(\".sidebar__btn\");\n  #btnSidebarIcon = this.#btnSidebar.querySelector(\"use\");\n\n  // PUBLIC METHODS\n\n  constructor() {\n    this.#addHandlerRemovePreload();\n  }\n\n  addHandlerSidebar(handler) {\n    this.#btnSidebar.addEventListener(\"click\", handler);\n  }\n\n  toggleSidebar(sidebarHidden) {\n    [this.#sidebar, this.#containerMain].forEach(\n      (element) =>\n        (element.style.marginLeft = `${sidebarHidden ? \"-18.2rem\" : \"0\"}`)\n    );\n    this.#btnSidebarIcon.setAttribute(\n      \"href\",\n      `${icons}#icon-${sidebarHidden ? \"chevron-right\" : \"chevron-left\"}`\n    );\n  }\n\n  // PRIVATE METHODS\n\n  #addHandlerRemovePreload() {\n    window.addEventListener(\n      \"load\",\n      function () {\n        this.#sidebar.classList.remove(\"preload\");\n      }.bind(this)\n    );\n  }\n}\n\nexport default new SidebarView();\n","import View from \"./view.js\";\n\nclass StatsView extends View {\n  hash = \"#stats\";\n  _navBtn = document.querySelector(\"#nav-btn-stats\");\n  _container = document.querySelector(\".container-stats\");\n  #data;\n  #allSelectValues;\n  #curSelectValues;\n  #noEntries;\n  #statsGrid = document.querySelector(\".stats-grid\");\n  #selectWrapper = this._container.querySelector(\".preview-wrapper\");\n  #listSelect;\n  #monthSelect;\n  #yearSelect;\n  #btnAddEntry = this._container.querySelector(\".btn-add-entry\");\n  #noEntriesMessage = this._container.querySelector(\".no-data__message\");\n  #noLogEntries = document.querySelector(\".no-stats\");\n\n  // PUBLIC METHODS\n\n  addHandlerAddEntry(handler) {\n    this.#btnAddEntry.addEventListener(\"click\", handler);\n  }\n\n  addHandlerLogSelects(handler) {\n    this.#selectWrapper.addEventListener(\n      \"change\",\n      function () {\n        const listID = this.#listSelect.value;\n        const month = this.#monthSelect.value;\n        const year = this.#yearSelect.value;\n        const currentSelectValues = { listID, month, year };\n        handler(currentSelectValues);\n      }.bind(this)\n    );\n  }\n\n  render(data) {\n    this.#data = data.data;\n    this.#allSelectValues = data.allSelectValues;\n    this.#curSelectValues = data.curSelectValues;\n    this.#noEntries = data.noEntries;\n    this.#statsGrid.innerHTML = \"\";\n    if (data.data.numberEntries > 0) {\n      this.#statsGrid.classList.remove(\"hidden\");\n      this.#noLogEntries.classList.add(\"hidden\");\n      this.#statsGrid.insertAdjacentHTML(\n        \"beforeend\",\n        this.#generateStatsMarkup()\n      );\n    } else {\n      this.#statsGrid.classList.add(\"hidden\");\n      this.#showNoEntriesMessage();\n    }\n    this.#selectWrapper.innerHTML = this.#generateSelectMarkup();\n    this.#listSelect = document.querySelector(\"#select-list-stats\");\n    this.#monthSelect = document.querySelector(\"#select-month-stats\");\n    this.#yearSelect = document.querySelector(\"#select-year-stats\");\n    this.#listSelect.value = this.#curSelectValues.listID;\n    this.#monthSelect.value = this.#curSelectValues.month;\n    this.#yearSelect.value = this.#curSelectValues.year;\n  }\n\n  // PRIVATE METHODS\n\n  #generateListSelectRowMarkup(list) {\n    const markup = `<option value=\"${list.listID}\">${list.title}</option>`;\n    return markup;\n  }\n\n  #generateMonthSelectRowMarkup(month) {\n    const markup = `<option value=\"${month.numeric}\">${month.alpha}</option>`;\n    return markup;\n  }\n\n  #generateYearSelectRowMarkup(year) {\n    const markup = `<option value=\"${year}\">${year}</option>`;\n    return markup;\n  }\n\n  #generateSelectMarkup() {\n    const markup = `\n      <label for=\"select-list-stats\">Filter by list:</label>\n      <select class=\"select-list\" id=\"select-list-stats\">\n        <option value=\"all\" selected>All lists</option>\n        ${this.#allSelectValues.lists\n          .map(this.#generateListSelectRowMarkup)\n          .join(\"\")}\n      </select>\n      <label for=\"select-month-stats\">Filter by date:</label>\n      <select id=\"select-month-stats\">\n        <option value=\"all\" selected>All Months</option>\n        ${this.#allSelectValues.months\n          .map(this.#generateMonthSelectRowMarkup)\n          .join(\"\")}\n      </select>\n      <select id=\"select-year-stats\">\n        <option value=\"all\" selected>All years</option>\n        ${this.#allSelectValues.years\n          .map(this.#generateYearSelectRowMarkup)\n          .join(\"\")}\n      </select>`;\n    return markup;\n  }\n\n  #generateStatsMarkup() {\n    const markup = `\n      <span class=\"stats-grid__label\">Number of Log Entries:</span>\n      <span>${this.#data.numberEntries} ${\n      this.#data.numberEntries === 1 ? \"entry\" : \"entries\"\n    }</span>\n      <span class=\"stats-grid__label\">Total Completed Peaks:</span>\n      <span>${this.#data.numberPeaks} ${\n      this.#data.numberPeaks === 1 ? \"peak\" : \"peaks\"\n    }</span>\n      <span class=\"stats-grid__label\">Total Distance:</span>\n      <span>${\n        this.#data.totalDistance ? `${this.#data.totalDistance} mi` : \"n/a\"\n      }</span>\n      <span class=\"stats-grid__label\">Total Elevation Gain:</span>\n      <span>${\n        this.#data.totalElevation\n          ? `${this.#data.totalElevation.toLocaleString()} ft`\n          : \"n/a\"\n      } </span>\n      <span class=\"stats-grid__label\">Total Time:</span>\n      <span>${\n        this.#data.totalTime ? `${this.#data.totalTime} hrs` : \"n/a\"\n      } </span>`;\n    return markup;\n  }\n\n  #showNoEntriesMessage() {\n    const message = `\n    You haven't added any log entries ${\n      this.#noEntries ? \"yet\" : \"that match the selected filters\"\n    }. ${this.#noEntries ? \"Click\" : \"Adjust the filters or click\"}\n     the button below to log ${this.#noEntries ? \"your first\" : \"a new\"} entry!\n    `;\n    this.#noEntriesMessage.innerHTML = message;\n    this.#noLogEntries.classList.remove(\"hidden\");\n  }\n}\n\nexport default new StatsView();\n","import * as model from \"./model.js\";\nimport logPreviewView from \"./views/logPreviewView.js\";\nimport logEntryView from \"./views/logEntryView.js\";\nimport newEntryView from \"./views/newEntryView.js\";\nimport mainView from \"./views/mainView.js\";\nimport mapView from \"./views/mapView.js\";\nimport modalView from \"./views/modalView.js\";\nimport peakListPreviewView from \"./views/peakListPreviewView.js\";\nimport peakListTableView from \"./views/peakListTableView.js\";\nimport sidebarView from \"./views/sidebarView.js\";\nimport statsView from \"./views/statsView.js\";\n\n/////////////////////////////////////////////////////////////////////////////////\n// MAIN VIEW\n\nconst controlPageLoad = function () {\n  window.location.hash.slice(1) ||\n    this.window.history.pushState(null, \"\", \"#map\");\n  const hash = window.location.hash.slice(1);\n  hash === \"map\" && controlMap();\n  hash === \"peak-list-preview\" && controlPeakListPreview();\n  hash === \"peak-list-table\" && controlPeakListTable();\n  hash === \"log-preview\" && controlLogPreview();\n  hash === \"log-entry\" && controlLogEntry();\n  hash === \"stats\" && controlStats();\n  hash === \"new-entry\" && controlNewEntry();\n};\n\nconst controlGoBack = function (containerID) {\n  if (containerID === \"peak-list-preview\") {\n    window.history.pushState(null, \"\", \"#peak-list-preview\");\n    controlPeakListPreview();\n  }\n  if (containerID === \"log-preview\") {\n    window.history.pushState(null, \"\", \"#log-preview\");\n    controlLogPreview();\n  }\n};\n\nconst controlCloseContainer = function () {\n  if (controlClearForm()) {\n    window.history.pushState(null, \"\", \"#map\");\n    mainView.closeContainer();\n  }\n};\n\n// SIDEBAR\n\nconst controlSidebar = function () {\n  model.updateSidebarState();\n  sidebarView.toggleSidebar(model.state.sidebarHidden);\n};\n\n// MODAL\n\nconst controlLoadTestData = function () {\n  if (model.loadTestData()) {\n    window.history.pushState(null, \"\", \"#log-preview\");\n    controlLogPreview();\n    location.reload();\n  }\n};\n\nconst controlClearAllData = function () {\n  if (model.clearAllData()) {\n    window.history.pushState(null, \"\", \"#log-preview\");\n    controlLogPreview();\n    location.reload();\n  }\n};\n\nconst controlFirstVisit = function () {\n  model.firstVisit && modalView.openModal();\n  model.setSessionStorage();\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// MAP\n\nconst controlMap = function () {\n  if (controlClearForm()) {\n    mainView.closeContainer();\n  }\n};\n\nconst controlLocation = async function () {\n  let latitude, longitude;\n  try {\n    const pos = await model.getCoords();\n    latitude = pos.coords.latitude;\n    longitude = pos.coords.longitude;\n    mapView.setMapView([latitude, longitude]);\n  } catch (err) {\n    alert(\n      \"Could not get your location. You must have location services enabled to use this feature.\"\n    );\n    console.error(err);\n    return;\n  }\n  try {\n    const res = await model.getAddress(latitude, longitude);\n    const address = res.display_name;\n    mapView.addLocationPopup(address);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// PEAK LIST PREVIEW\n\nconst controlPeakListPreview = function (\n  previewType = model.state.peakPreview.previewType,\n  page = 1\n) {\n  if (controlClearForm()) {\n    model.loadPeakListPreviewData();\n    peakListPreviewView.render(model.getListPreviewPage(previewType, page));\n    peakListPreviewView.showContainer();\n  }\n};\n\nconst controlLogTrip = function (listID, checkedID) {\n  model.loadMapData(\"list\", listID);\n  newEntryView.displayCheckboxes(model.getCheckboxData(listID, checkedID));\n  mapView.plotPeaksOnMap(model.state.map);\n  newEntryView.showContainer();\n};\n\nconst controlSavedListsPreview = function (listID) {\n  !model.state.savedLists.includes(listID)\n    ? model.addSavedList(listID)\n    : model.removeSavedList(listID);\n  model.loadPeakListPreviewData();\n  peakListPreviewView.render(model.getListPreviewPage());\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// PEAK LIST TABLE\n\nconst controlPeakListTable = function (\n  listID = model.state.peakTable.data.listID\n) {\n  window.history.pushState(null, \"\", \"#peak-list-table\");\n  model.loadTableData(listID);\n  model.loadMapData(\"list\", listID);\n  peakListTableView.render(model.state.peakTable);\n  mapView.plotPeaksOnMap(model.state.map);\n  peakListTableView.showContainer();\n};\n\nconst controlSavedListsTable = function (listID) {\n  !model.state.savedLists.includes(listID)\n    ? model.addSavedList(listID)\n    : model.removeSavedList(listID);\n  model.loadTableData(listID);\n  peakListTableView.render(model.state.peakTable);\n};\n\nconst controlTableRowHover = function (peakID) {\n  mapView.openPopup(peakID);\n};\n\nconst controlTableSort = function (listID, sortType) {\n  model.loadTableData(listID, sortType);\n  peakListTableView.render(model.state.peakTable);\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// LOG PREVIEW\n\nconst controlLogPreview = function (\n  curSelectValues = model.state.logPreview.curSelectValues,\n  page = 1\n) {\n  if (controlClearForm()) {\n    logPreviewView.render(model.getLogPreviewPage(curSelectValues, page));\n    logPreviewView.showContainer();\n  }\n};\n\nconst controlDeleteLogEntry = function (logID) {\n  model.removeLogEntry(logID);\n  mapView.clearMap();\n  logPreviewView.render(model.getLogPreviewPage());\n  logPreviewView.showContainer();\n};\n\nconst controlLogSelects = function (curSelectValues, page = 1) {\n  logPreviewView.render(model.getLogPreviewPage(curSelectValues, page));\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// LOG ENTRY\n\nconst controlLogEntry = function (logID = model.state.curLogEntry.logID) {\n  window.history.pushState(null, \"\", \"#log-entry\");\n  model.loadLogEntry(logID);\n  model.loadMapData(\"log\", logID);\n  logEntryView.render(model.state.curLogEntry);\n  mapView.plotPeaksOnMap(model.state.map);\n  logEntryView.showContainer();\n};\n\nconst controlLogViewBtns = function (type, id) {\n  model.loadMapData(type, id);\n  mapView.plotPeaksOnMap(model.state.map);\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// STATS\n\nconst controlStats = function () {\n  if (controlClearForm()) {\n    statsView.render(model.getStatsData());\n    statsView.showContainer();\n  }\n};\n\nconst controlStatsSelects = function (selectValues) {\n  statsView.render(model.getStatsData(selectValues));\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// NEW ENTRY\n\nconst controlNewEntry = function () {\n  newEntryView.showContainer();\n};\n\nconst controlClearForm = function () {\n  const message =\n    \"You have unsaved changes that will be discarded by this action. Do you want to continue?\";\n  if (!newEntryView.isFormEmpty() && !confirm(message)) return false;\n  newEntryView.clearForm();\n  mapView.clearMap();\n  return true;\n};\n\nconst controlFormAddEntry = function (formData) {\n  if (model.addLogEntry(formData)) {\n    newEntryView.clearForm();\n    model.loadMapData(\"log\", model.state.curLogEntry.logID);\n    mapView.plotPeaksOnMap(model.state.map);\n    logEntryView.render(model.state.curLogEntry);\n    logEntryView.showContainer();\n  }\n};\n\nconst controlNewEntryDate = function (date) {\n  newEntryView.changeDate(model.getDate(date));\n};\n\nconst controlFormSelect = function (listID) {\n  model.loadMapData(\"list\", listID);\n  newEntryView.displayCheckboxes(model.getCheckboxData(listID));\n  mapView.plotPeaksOnMap(model.state.map);\n};\n\n/////////////////////////////////////////////////////////////////////////////////\n// INIT\n\nconst init = function () {\n  controlFirstVisit();\n  // MAP\n  mapView.loadMap();\n  mapView.addHandlerNavClick(controlMap);\n  mapView.addHandlerGetLocation(controlLocation);\n  mapView.addHandlerLoadData(controlLoadTestData);\n  mapView.addHandlerClearAllData(controlClearAllData);\n  // MODAL\n  modalView.addHandlerLoadData(controlLoadTestData);\n  // MAIN\n  mainView.addHandlerCloseContainer(controlCloseContainer);\n  mainView.addHandlerBtnBack(controlGoBack);\n  mainView.addHandlerPageLoad(controlPageLoad);\n  // SIDEBAR\n  // sidebarView.addHandlerBtnAbout(controlOpenModal);\n  sidebarView.addHandlerSidebar(controlSidebar);\n  sidebarView.toggleSidebar(model.state.sidebarHidden);\n  // PEAK LIST PREVIEW\n  peakListPreviewView.addHandlerViewTable(controlPeakListTable);\n  peakListPreviewView.addHandlerSavedLists(controlSavedListsPreview);\n  peakListPreviewView.addHandlerPreviewType(controlPeakListPreview);\n  peakListPreviewView.addHandlerPagination(controlPeakListPreview);\n  peakListPreviewView.addHandlerNavClick(controlPeakListPreview);\n  // PEAK LIST TABLE\n  peakListTableView.addHandlerSortTable(controlTableSort);\n  peakListTableView.addHandlerRowHover(controlTableRowHover);\n  peakListTableView.addHandlerSavedLists(controlSavedListsTable);\n  peakListTableView.addHandlerLogTrip(controlLogTrip);\n  // LOG PREVIEW\n  logPreviewView.addHandlerNavClick(controlLogPreview);\n  logPreviewView.addHandlerShowEntry(controlLogEntry);\n  logPreviewView.addHandlerDeleteEntry(controlDeleteLogEntry);\n  logPreviewView.addHandlerAddEntry(controlNewEntry);\n  logPreviewView.addHandlerLogSelects(controlLogSelects);\n  logPreviewView.addHandlerPagination(controlLogPreview);\n  // LOG ENTRY\n  logEntryView.addHandlerDeleteEntry(controlDeleteLogEntry);\n  logEntryView.addHandlerViewMap(controlLogViewBtns);\n  // NEW ENTRY\n  newEntryView.initializeListSelect(model.getListSelectData());\n  newEntryView.addHandlerNavClick(controlNewEntry);\n  newEntryView.addHandlerDate(controlNewEntryDate);\n  newEntryView.addHandlerPeakListSelect(controlFormSelect);\n  newEntryView.addHandlerAddEntry(controlFormAddEntry);\n  newEntryView.addHandlerClearForm(controlClearForm);\n  // STATS\n  statsView.addHandlerLogSelects(controlStatsSelects);\n  statsView.addHandlerAddEntry(controlNewEntry);\n  statsView.addHandlerNavClick(controlStats);\n};\n\ninit();\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$48ed222ad1402641$exports","$7e552f638a1fe558$exports","$b4078d85fefd2967$exports","$1c54660d8914672a$exports","$b96fb41ae694c3a9$exports","$c46e47f8479275d3$exports","$bf5b318995a17984$exports","$2d90cc7a78ab78a5$exports","$5122c08a5066d666$exports","$2f0472fcaf7317d5$exports","$0e02c1a4c42b3ed7$exports","$d6e4c6226fac3a9d$exports","$0e3d2784bd1ba2e4$exports","$8627607136ac9d84$var$PeakList","constructor","data","this","title","listID","peakCount","peaks","description","$8627607136ac9d84$export$7ec75f2dccfbf183","$parcel$interopDefault","$8627607136ac9d84$export$3de09edcb98d4f84","Map","flatMap","peakList","map","peak","values","sort","a","b","toLowerCase","localeCompare","$9d76df54ecc894c2$export$7b735fea22fb3db1","formData","logID","lists","peakIDs","peakID","find","stats","elevation","distance","minutes","hours","notes","undefined","rating","setPeakString","setDate","date","setStats","peakNames","name","peakString","slice","join","fullDate","Date","day","Intl","DateTimeFormat","format","month","numeric","alpha","year","time","Math","round","avgSpeed","avgElevation","$776e14004b98fe74$exports","$0f1d4402dffacf5b$export$ca000e230c0caa3e","listCounts","allLogEntries","noEntries","completedPeaks","savedLists","sidebarHidden","allSelectValues","months","years","peakPreview","previewType","page","resPerPage","peakTable","sortType","logPreview","curSelectValues","entries","curLogEntry","$0f1d4402dffacf5b$export$a26d33daaca12f4a","$0f1d4402dffacf5b$var$setLocalStorage","localStorage","setItem","stringify","$0f1d4402dffacf5b$export$efb6fdfbf9b50fa1","type","$0f1d4402dffacf5b$var$sortPeakList","$0f1d4402dffacf5b$var$getLogEntry","logMatch","entry","some","peakObj","completed","includes","completedDate","$0f1d4402dffacf5b$export$6c3df0174020cea2","push","$0f1d4402dffacf5b$export$a9d160c95f392539","splice","indexOf","$0f1d4402dffacf5b$export$9edcedc1e8790593","list","saved","numCompleted","$0f1d4402dffacf5b$export$7e96b11c174cab90","start","end","allData","filter","numPages","ceil","state","$0f1d4402dffacf5b$export$facd8360026737dd","num","$0f1d4402dffacf5b$var$filterLogEntries","$0f1d4402dffacf5b$export$84d24be07dc3f990","$0f1d4402dffacf5b$export$185e652f798f50e2","numberEntries","numberPeaks","Set","totalDistance","reduce","acc","cur","totalElevation","totalTime","$0f1d4402dffacf5b$var$getMatchingLists","listMatches","forEach","$0f1d4402dffacf5b$var$increaseListCounts","$0f1d4402dffacf5b$var$decreaseListCounts","peaklistObj","peakListID","$0f1d4402dffacf5b$export$81ee0326c62c7930","checkedID","$0f1d4402dffacf5b$export$f4cc72695e6df27a","alert","getTime","max","allLists","listObj","obj","$0f1d4402dffacf5b$var$setLogEntryLists","unshift","$0f1d4402dffacf5b$var$updateAllSelectValues","allMonths","getItem","sessionStorage","firstVisit","$b4f8f515098290ea$exports","URL","resolve","import","meta","url","toString","$b2d7157267813d3a$export$2e2bcd8739ae039","hash","_navBtn","_container","_allContainers","document","querySelectorAll","_containerMain","querySelector","_allNavBtns","addHandlerNavClick","handler","addEventListener","showContainer","container","classList","add","remove","btn","hideContainer","$8ea54db9fb242c1c$export$2e2bcd8739ae039","addHandlerDeleteEntry","e","clicked","target","closest","confirm","logId","dataset","_generateDeleteButtonMarkup","size","$063ec7a661e33df7$export$2e2bcd8739ae039","listSelect","monthSelect","yearSelect","previewGrid","selectWrapper","btnAddEntry","noEntriesMessage","noLogEntries","addHandlerAddEntry","addHandlerShowEntry","bind","addHandlerLogSelects","value","addHandlerPagination","render","innerHTML","generateSelectWrapperMarkup","generatePreviewMarkup","showNoEntriesMessage","generateSinglePreviewMarkup","generateListSelectRowMarkup","generateMonthSelectRowMarkup","generateYearSelectRowMarkup","curPage","generateSelectMarkup","message","$95bfa2fbd86df866$export$2e2bcd8739ae039","logEntryEl","logEntryLabelNumber","logEntryHeading","btnDeleteWrapper","addHandlerViewMap","insertAdjacentHTML","generateLogEntryMarkup","generatePeakListMarkup","generatePeaksMarkup","toLocaleString","generateRatingMarkup","markup1","i1","markup2","markup3","$d166ed2563f0a62f$export$2e2bcd8739ae039","gridDate","gridPeakCheckboxes","gridStats","statRows","statRowIcons","inputDate","chooseListSelect","inputElevation","inputDistance","inputHours","inputMinutes","inputNotes","wrapperStars","allStarButtons","formNewEntry","btnClearForm","super","addHandlerToggleStat","addHandlerStarMouseover","addHandlerStarMouseout","addHandlerStarClick","addHandlerDatePicker","showPicker","addHandlerClearForm","addHandlerDate","preventDefault","textContent","trim","addHandlerPeakListSelect","getFormData","changeDate","clearForm","starBtn","clearStar","filled","icon","row","reset","displayCheckboxes","generateCheckboxGridMarkup","input","checked","getCheckedPeaks","getRating","initializeListSelect","generateSelectRowMarkup","isFormEmpty","every","toggleStat","handleStarMouseOver","handleStarMouseOut","handleStarClick","hovered","fillStar","starBtn1","e1","starBtn2","starBtn3","setAttribute","starBtn4","generateSingleCheckboxMarkup","checkedPeaksIDArr","checkbox","e2","clicked1","stat","contains","star","$6fdf9156372b0124$export$2e2bcd8739ae039","containerMain","btnCloseContainer","allContainers","mapNavBtn","allNavBtns","body","html","dragBar","sidebar","addHandlerEscapeKeydown","addHandlerRemovePreload","addHandlerMarginTop","addHandlerPageLoad","ev","window","addHandlerCloseContainer","addHandlerBtnBack","containerId","closeContainer","key","setMarginTop","matchMedia","matches","innerHeight","dragBarHeight","sidebarHeight","offsetHeight","style","height","marginTop","$5a77dfbe55474547$exports","$ef67a7a32827d3fa$exports","$af404b75bee524d1$exports","$716941e1f0265cb4$export$2e2bcd8739ae039","markersLayer","locationMarker","markersArr","navBtn","btnLocation","btnLoadData","btnClearData","mapDiv","addHandlerLoadData","addHandlerClearAllData","addHandlerGetLocation","loadMap","L","zoomControl","setView","tileLayer","maxZoom","attribution","addTo","control","zoom","position","setMapHeight","setMapView","coords","iconUrl","iconAnchor","popupAnchor","Marker","clearMap","clearLayers","plotPeaksOnMap","createMarkerLayer","addLayer","padding","fitBounds","getBounds","paddingTopLeft","addLocationPopup","address","bindPopup","popup","setPopupContent","on","openPopup","peakId","marker","options","createMarker","mtnIcon","iconSize","lat","long","riseOnHover","generatePopupMarkup","featureGroup","peak1","generateCompletedDateMarkup","generateLogTripButtonMarkup","peak2","peak3","$bcf5b9f62c105673$export$2e2bcd8739ae039","modal","overlay","btnClose","btnStartScratch","addHandlerCloseModal","addHandlerNav","openModal","closeModal","el","$1bcc6a30cf10e5c9$export$2e2bcd8739ae039","addHandlerSavedLists","listId","_generateProgressBarMarkup","width","$9d590e17e8c7b16a$export$2e2bcd8739ae039","btnsWrapper","noSavedLists","addHandlerViewTable","addHandlerPreviewType","generateWrapperBtnMarkup","generatePreviewButtonMarkup","$b38b7893ee55a695$export$2e2bcd8739ae039","containerHeading","labelNumber","progressBarWrapper","btnSaveListWrapper","sortTableSelect","tableBody","addHandlerRowHover","addHandlerLogTrip","addHandlerSortTable","generateSaveButtonMarkup","generateTableMarkup","generateTableRowMarkup","$ea9152ebdcdab405$export$2e2bcd8739ae039","btnSidebar","btnSidebarIcon","addHandlerSidebar","toggleSidebar","element","marginLeft","$fd3b802b6fc95ceb$export$2e2bcd8739ae039","statsGrid","generateStatsMarkup","$f50bd1f2915ed0f2$var$controlPageLoad","location","history","pushState","$f50bd1f2915ed0f2$var$controlMap","$f50bd1f2915ed0f2$var$controlPeakListPreview","$f50bd1f2915ed0f2$var$controlPeakListTable","$f50bd1f2915ed0f2$var$controlLogPreview","$f50bd1f2915ed0f2$var$controlLogEntry","$f50bd1f2915ed0f2$var$controlStats","$f50bd1f2915ed0f2$var$controlNewEntry","$f50bd1f2915ed0f2$var$controlGoBack","containerID","$f50bd1f2915ed0f2$var$controlCloseContainer","$f50bd1f2915ed0f2$var$controlClearForm","$f50bd1f2915ed0f2$var$controlSidebar","$f50bd1f2915ed0f2$var$controlLoadTestData","reload","$f50bd1f2915ed0f2$var$controlClearAllData","clear","$f50bd1f2915ed0f2$var$controlLocation","async","latitude","longitude","pos","Promise","reject","navigator","geolocation","getCurrentPosition","$0f1d4402dffacf5b$export$39e042fd83f1b62e","err","console","error","lon","response","fetch","ok","status","json","$0f1d4402dffacf5b$export$88411125f012957a","display_name","err1","$f50bd1f2915ed0f2$var$controlLogTrip","$f50bd1f2915ed0f2$var$controlSavedListsPreview","$f50bd1f2915ed0f2$var$controlSavedListsTable","$f50bd1f2915ed0f2$var$controlTableRowHover","$f50bd1f2915ed0f2$var$controlTableSort","$f50bd1f2915ed0f2$var$controlDeleteLogEntry","$0f1d4402dffacf5b$export$607e31f2b4813a7f","$f50bd1f2915ed0f2$var$controlLogSelects","$0f1d4402dffacf5b$export$94f5adac15db6865","$f50bd1f2915ed0f2$var$controlLogViewBtns","$f50bd1f2915ed0f2$var$controlStatsSelects","selectValues","$f50bd1f2915ed0f2$var$controlFormAddEntry","$f50bd1f2915ed0f2$var$controlNewEntryDate","now","$0f1d4402dffacf5b$export$aa350b96d91cd94","$f50bd1f2915ed0f2$var$controlFormSelect","$f50bd1f2915ed0f2$var$controlFirstVisit"],"version":3,"file":"index.dce81b37.js.map"}